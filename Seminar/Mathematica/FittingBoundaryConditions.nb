(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390877,       8222]
NotebookOptionsPosition[    374865,       7843]
NotebookOutlinePosition[    375996,       7882]
CellTagsIndexPosition[    375908,       7876]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
1) We acquire element corner positions for right half of NorthBlock in form \
[block row][block col] = {{x1, y1}, {x2, y2}, {x3, y3}, {x4, y4}}.\
\>", "Text",
 CellChangeTimes->{
  3.745986504487837*^9, {3.745987118104638*^9, 
   3.745987128986507*^9}},ExpressionUUID->"df0af1b1-3a3c-47a7-9951-\
0fa3d88ecfd0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodePos", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
integrateThis.txt\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos", "=", 
   RowBox[{"ToExpression", "[", "nodePos", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10"}], "]"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "4", " ", "corner", " ", "node", " ", "positions", " ", "for", " ", 
     "element", " ", "in", " ", 
     RowBox[{"23", "'"}], "rd", " ", "row", " ", "and", " ", 
     RowBox[{"10", "'"}], "th", " ", "column", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"most", " ", "upper", " ", "right", " ", "element"}], ")"}], 
      "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7458457674887457`*^9, 3.7458457869975853`*^9}, {
   3.745845911179164*^9, 3.745845955900465*^9}, {3.745847100200148*^9, 
   3.745847103277301*^9}, {3.74584720338974*^9, 3.745847204041778*^9}, {
   3.745847454079063*^9, 3.745847455173891*^9}, {3.745847495406001*^9, 
   3.7458474995972357`*^9}, {3.745847638705782*^9, 3.745847639789097*^9}, 
   3.745848566911585*^9, {3.7458490250440893`*^9, 3.74584903051862*^9}, {
   3.745849107087812*^9, 3.745849108489716*^9}, {3.745849197517704*^9, 
   3.745849207233582*^9}, {3.745849303410995*^9, 3.745849305011517*^9}, 
   3.745849349513859*^9, {3.745850679292458*^9, 3.745850681530842*^9}, {
   3.745851687673954*^9, 3.7458516895487957`*^9}, {3.7458541862399597`*^9, 
   3.74585418661661*^9}, {3.745854434900872*^9, 3.745854448018777*^9}, {
   3.745860137815242*^9, 3.745860211231867*^9}, {3.745860249715366*^9, 
   3.745860255913795*^9}, {3.745860323628289*^9, 3.745860332975169*^9}, {
   3.745860380932459*^9, 3.745860419660714*^9}, 3.745860488964347*^9, {
   3.745861017164814*^9, 3.745861044687859*^9}, 3.7458611375917597`*^9, {
   3.7458615066448793`*^9, 3.745861524776675*^9}, 3.745861776505211*^9, 
   3.7458618718206*^9, {3.7459181211483927`*^9, 3.745918157260955*^9}, {
   3.7459182439617*^9, 3.745918249985384*^9}, 3.745918369234597*^9, {
   3.74591841755075*^9, 3.745918417980631*^9}, {3.745920309154969*^9, 
   3.74592031233805*^9}, {3.745922474557002*^9, 3.745922478604609*^9}, {
   3.7459368935762463`*^9, 3.745936899561632*^9}, {3.7459865287023706`*^9, 
   3.7459865309264603`*^9}, {3.745997363418561*^9, 3.74599736727638*^9}},
 CellTags->"1",ExpressionUUID->"8fb1514c-0104-4773-81f8-5374490bfabb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.919337273913974`", "0.966333490772628`"},
     {"0.96577959498667`", "0.96577959498667`"},
     {"1", "1"},
     {"0.95`", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.745919393003442*^9, 3.745920316023924*^9, 
  3.745921272684781*^9, 3.745922479574286*^9, 3.745929380272242*^9, 
  3.7459369201571174`*^9, 3.745949013566182*^9, 3.745997377536256*^9, 
  3.746791304116083*^9, 3.746975865919129*^9, 3.7469760879582157`*^9},
 CellTags->"1",ExpressionUUID->"d9b991f9-9df9-42f4-abb8-496fd0158cee"]
}, Open  ]],

Cell["\<\
2) We transpose last two dimensions of previous array and thus transform it \
into following form : [block row][block col] = {{x1, x2, x3, x4}, {y1, y2, \
y3, y4}}\
\>", "Text",
 CellChangeTimes->{{3.745987182137971*^9, 
  3.745987192708918*^9}},ExpressionUUID->"4c93b521-7017-4400-aece-\
65e399dc9ad6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"elements", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"nodePos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "23"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
  
  RowBox[{"(*", 
   RowBox[{"23", " ", "x", " ", "10"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10", ",", "1"}], "]"}], "]"}], "//", 
  "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "x", " ", "coordinates", " ", "for", " ", "all", " ", "for", " ", 
     "corner", " ", "nodes", " ", "of", " ", "element", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"23", ",", "10"}], ")"}], "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.745860129214368*^9, 3.7458601347891283`*^9}, {
   3.745860272931795*^9, 3.745860346321751*^9}, {3.7458604322073174`*^9, 
   3.745860482341137*^9}, {3.74591829770245*^9, 3.74591834922665*^9}, {
   3.745919353818584*^9, 3.745919384527342*^9}, {3.7459213372493258`*^9, 
   3.745921340971883*^9}, 3.745922502479542*^9, {3.745987169043118*^9, 
   3.7459871716948233`*^9}},
 CellTags->"2",ExpressionUUID->"dac6af6f-a763-463b-8f0c-54edeab5a9af"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0.919337273913974`"},
      {"0.96577959498667`"},
      {"1"},
      {"0.95`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7459369331848593`*^9, 3.7459490183703337`*^9, 
  3.745997384081119*^9, 3.7467913084592333`*^9, 3.746975871099807*^9, 
  3.746976094003199*^9},
 CellTags->"2",ExpressionUUID->"f6adceeb-43ca-46c5-aebe-26a07af80db6"]
}, Open  ]],

Cell[TextData[{
 "We write down quadrilateral shape functions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "1"], TraditionalForm]],ExpressionUUID->
  "37c9b589-35c5-4aab-8d72-dee734d3ce9e"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "4"], TraditionalForm]],ExpressionUUID->
  "37295c17-587b-47e7-a4ad-dde315295a83"],
 " which transformations use to transform area elements from reference \
rectangle to arbitrary quadrilateral. We also write down the transformations \
P (from reference square to x coordinate in real-world) and Q (to y \
coordinate)."
}], "Text",
 CellChangeTimes->{{3.745987254711897*^9, 3.7459873087730427`*^9}, {
  3.74598735090838*^9, 
  3.7459874951087923`*^9}},ExpressionUUID->"15332393-42c1-4a1a-b499-\
4be2dc3c0775"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Quadrilateral", " ", "shape", " ", 
    RowBox[{"functions", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["S", "1"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "2"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "3"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "4"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, 
   3.765298052719966*^9},ExpressionUUID->"683d50e5-0c9a-435f-8b97-\
5e489baae5ff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S1", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S2", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S3", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S4", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S1", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S2", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S3", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S4", ",", "\[Eta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765298052719966*^9, 
   3.765298157270832*^9}, {3.765298309839787*^9, 
   3.765298341364978*^9}},ExpressionUUID->"08bc5194-601e-4ed8-9898-\
508c99859ec5"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342515175*^9},ExpressionUUID->"5871c64f-d42d-4bbf-b9bb-\
66e8ca0a4993"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "\[Eta]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.76529834251674*^9},ExpressionUUID->"d534e7a9-0742-4fdd-8830-\
7272b49d82c4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[Eta]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342519232*^9},ExpressionUUID->"60f7308b-2f3e-4236-96b8-\
3092bacc901e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Eta]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.7652983425217857`*^9},ExpressionUUID->"b3940952-a15f-4419-919b-\
d2dfcf81e278"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342522934*^9},ExpressionUUID->"1b21e993-816d-473f-a488-\
2593c066c47e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342524001*^9},ExpressionUUID->"fb590d23-2870-4009-b92c-\
6192c1377afa"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[Xi]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342524912*^9},ExpressionUUID->"9623cb63-234d-4a00-9869-\
50c50567c0fb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "\[Xi]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.7652983425257*^9},ExpressionUUID->"fd152bf6-fe5e-49ee-8cae-f5a44b83bcb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"x1", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S1", ",", "\[Xi]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"x2", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S2", ",", "\[Xi]"}], "]"}]}]}], "]"}], "+", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"x3", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S3", ",", "\[Xi]"}], "]"}]}], "+", 
     RowBox[{"x4", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S4", ",", "\[Xi]"}], "]"}]}]}], "]"}]}], "]"}], "\n", 
 RowBox[{
  FractionBox["1", "4"], 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y1", "-", "y4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"y1", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S1", ",", "\[Eta]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"y4", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S4", ",", "\[Eta]"}], "]"}]}]}], "]"}], "+", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"y2", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S2", ",", "\[Eta]"}], "]"}]}], "+", 
    RowBox[{"y3", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S3", ",", "\[Eta]"}], "]"}]}]}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.765298503207992*^9, 3.765298544170575*^9}, {
  3.7652985790583687`*^9, 3.765298671977188*^9}, {3.7652987174333677`*^9, 
  3.76529874562918*^9}, {3.76529877708928*^9, 3.765298804832368*^9}, {
  3.765298839282596*^9, 3.765298908570709*^9}, {3.765298951227159*^9, 
  3.765299010688916*^9}, {3.765299042319044*^9, 3.765299045155999*^9}, {
  3.765299115574234*^9, 3.765299139363817*^9}, {3.765299251442712*^9, 
  3.765299282052559*^9}, {3.765299312509245*^9, 
  3.7652993238300037`*^9}},ExpressionUUID->"6fbc62bd-b199-49f6-bd9e-\
3408cc55cef0"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "-", "x2"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x3", "-", "x4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.765299325376741*^9},ExpressionUUID->"d5d9a303-211a-40ef-9611-\
2fdabd132c6e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y1", "-", "y4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.765299325377989*^9},ExpressionUUID->"41e832b4-2a0c-4f16-bb7b-\
f3f242f2fc4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"y1", "-", "y4"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"y2", "-", "y3"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.7652993253809147`*^9},ExpressionUUID->"3838393b-0db3-46c9-9ba9-\
34e58d2795c0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J11", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dx", "/", "d\[Xi]"}], " ", "=", " ", 
    SubscriptBox["J", "11"]}], "*)"}], "\n", 
  RowBox[{"J12", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dx", "/", "d\[Eta]"}], " ", "=", " ", 
    SubscriptBox["J", "12"]}], " ", "*)"}], "\n", 
  RowBox[{"J21", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dy", "/", "d\[Xi]"}], " ", "=", " ", 
    SubscriptBox["J", "21"]}], " ", "*)"}], "\n", 
  RowBox[{"J22", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dy", "/", "d\[Eta]"}], " ", "=", " ", 
    SubscriptBox["J", "22"]}], " ", "*)"}]}]], "Input",
 PageWidth->Infinity,
 CellChangeTimes->{{3.76529941782962*^9, 3.765299426746271*^9}, {
  3.7652995026199617`*^9, 3.765299542884617*^9}, {3.765299622989242*^9, 
  3.7652997792400208`*^9}, {3.765299861825385*^9, 
  3.7652999110138617`*^9}},ExpressionUUID->"89884231-5da7-40d1-b933-\
8109a950d644"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J11", " ", "J22"}], " ", "-", " ", 
  RowBox[{"J12", " ", "J21"}]}]], "Input",
 CellChangeTimes->{{3.765299997822549*^9, 3.7653000506240377`*^9}, {
  3.765300084580875*^9, 
  3.765300108948758*^9}},ExpressionUUID->"2e48ecc5-bcd4-45b3-a623-\
a0232b1b0374"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "16"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y1"}], "+", "y2"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "x4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x2"}], "+", "x3"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "x2"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y1"}], "+", "y4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y2"}], "+", "y3"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.765300017330967*^9, 3.765300052002729*^9}, {
  3.765300090031405*^9, 
  3.765300109701242*^9}},ExpressionUUID->"bf607cdc-e5b4-4ba3-946f-\
c4a7dbda5d2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x2", "-", "x1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y4", "-", "y1"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y2", "-", "y1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x4", "-", "x1"}], ")"}]}]}], " ", ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x2", "-", "x1"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y2", "-", "y1"}], ")"}]}]}], ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y4", "-", "y1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x4", "-", "x1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.765300712265255*^9, 3.765300861331669*^9}, {
  3.765300891483268*^9, 
  3.7653011612140713`*^9}},ExpressionUUID->"0e6a71dd-720a-4634-a5c5-\
ecbdf84d1506"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Determinanta", " ", "Jakobijana"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], "S1", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}]}]}], " ", ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}]}]}], ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S3", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S4", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7653011690414047`*^9, 
  3.7653012373483887`*^9}},ExpressionUUID->"d2de4df1-1d37-4e9c-95cd-\
2f64a26bbe0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Determinanta", " ", "Jakobijana"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"\[CapitalDelta]xD", "=", 
    RowBox[{"x2", "-", "x1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xU", "=", 
    RowBox[{"x3", "-", "x4"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xL", "=", 
    RowBox[{"x4", "-", "x1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xR", "=", 
    RowBox[{"x3", "-", "x2"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yD", "=", 
    RowBox[{"y2", "-", "y1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yU", "=", 
    RowBox[{"y3", "-", "y4"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yL", "=", 
    RowBox[{"y4", "-", "y1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yR", "=", 
    RowBox[{"y3", "-", "y2"}]}], "\n", 
   RowBox[{"detJ", "=", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"S1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]xD", " ", "\[CapitalDelta]yL"}], "-", 
          RowBox[{"\[CapitalDelta]yD", " ", "\[CapitalDelta]xL"}]}], ")"}]}], 
       "+", 
       RowBox[{"S2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yR", " ", "\[CapitalDelta]xD"}], "-", 
          RowBox[{"\[CapitalDelta]xR", " ", "\[CapitalDelta]yD"}]}], ")"}]}], 
       "+", 
       RowBox[{"S3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yR", " ", "\[CapitalDelta]xU"}], "-", " ", 
          RowBox[{"\[CapitalDelta]xR", " ", "\[CapitalDelta]yU"}]}], ")"}]}], 
       "+", 
       RowBox[{"S4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yL", " ", "\[CapitalDelta]xU"}], "-", 
          RowBox[{"\[CapitalDelta]xL", " ", "\[CapitalDelta]yU"}]}], 
         ")"}]}]}], ")"}]}]}], "\n", 
   RowBox[{"(*", " ", "Jakobijan", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"J11", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]xD", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]xU", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dx", "/", "d\[Xi]"}], " ", "=", " ", 
      SubscriptBox["J", "11"]}], "*)"}], "\n", 
    RowBox[{"J12", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]xL", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]xR", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dx", "/", "d\[Eta]"}], " ", "=", " ", 
      SubscriptBox["J", "12"]}], " ", "*)"}], "\n", 
    RowBox[{"J21", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]yD", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]yU", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dy", "/", "d\[Xi]"}], " ", "=", " ", 
      SubscriptBox["J", "21"]}], " ", "*)"}], "\n", 
    RowBox[{"J22", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]yL", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]yR", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"dy", "/", "d\[Eta]"}], " ", "=", " ", 
     SubscriptBox["J", "22"]}], " ", "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Inverz", " ", "Jakobijana"}], "*)"}], "\n", 
   RowBox[{
    FractionBox["1", "detJ"], " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"J22", ",", 
        RowBox[{"-", "J12"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "J21"}], ",", "J11"}], "}"}]}], "\n", 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765301332520296*^9, 
   3.765301553113529*^9}, {3.7653015850388727`*^9, 3.765301965598299*^9}, {
   3.7653021013620243`*^9, 3.7653021387562532`*^9}, {3.765302181022146*^9, 
   3.765302209313533*^9}, {3.7653022525144367`*^9, 3.7653024750566387`*^9}, {
   3.7653026415780487`*^9, 3.765302658392433*^9}, {3.765302872150064*^9, 
   3.765302873037838*^9}},ExpressionUUID->"0e82e99e-b1d1-4a59-a16b-\
c7ffddc94570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transformation", " ", 
    RowBox[{"functions", ".", " ", "Row"}], " ", "and", " ", "col", " ", 
    "are", " ", "indices", " ", "of", " ", "element", " ", "inside", " ", 
    "\"\<elements\>\"", " ", 
    RowBox[{"array", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_", ",", "row_", ",", " ", "col_"}], "]"}],
     ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"elements", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_", ",", " ", "row_", ",", "col_"}], "]"}],
     ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"elements", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"P", "[", 
    RowBox[{"\[Xi]", ",", "\[Eta]", ",", "23", ",", "10"}], "]"}], "\n", 
   RowBox[{"%", "//", "Simplify"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Example", ":", " ", 
     RowBox[{"transformation", " ", "P", " ", "for", " ", "element", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"23", ",", "10"}], ")"}], ".", " ", "Below"}], " ", "in", " ",
       "its", " ", "simplified", " ", 
      RowBox[{"form", "."}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765301332520296*^9, 
   3.7653014638704967`*^9}},ExpressionUUID->"8fab94d3-de1c-47b8-b80e-\
d4700abfdc8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2298343184784935`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2375`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2414448987466675`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.745919670106556*^9, 3.745919682308362*^9}, 
   3.745921536841199*^9, 3.745922546103797*^9, 3.745929393940815*^9, 
   3.74593693758119*^9, 3.7459490233460255`*^9, 3.7459973885215187`*^9, {
   3.7467912915789843`*^9, 3.746791311426702*^9}, 3.746975878493594*^9, 
   3.746976096975872*^9},ExpressionUUID->"d806be67-b735-4ad4-90f5-\
d5cb66fd8a71"],

Cell[BoxData[
 RowBox[{"0.958779217225161`", "\[VeryThinSpace]", "+", 
  RowBox[{"\[Eta]", " ", 
   RowBox[{"(", 
    RowBox[{"0.016220782774838988`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0008894197318260189`", " ", "\[Xi]"}]}], ")"}]}], "+", 
  RowBox[{"0.02411058026817403`", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{{3.745919670106556*^9, 3.745919682308362*^9}, 
   3.745921536841199*^9, 3.745922546103797*^9, 3.745929393940815*^9, 
   3.74593693758119*^9, 3.7459490233460255`*^9, 3.7459973885215187`*^9, {
   3.7467912915789843`*^9, 3.746791311426702*^9}, 3.746975878493594*^9, 
   3.746976097040468*^9},ExpressionUUID->"ec3ed568-6fcd-4dfd-94fc-\
371151b79c0e"]
}, Open  ]],

Cell["\<\
We write a method that writes out a Jacobian of element at (row, col).\
\>", "Text",
 CellChangeTimes->{{3.745987556862546*^9, 
  3.745987601806695*^9}},ExpressionUUID->"812d5e44-d59e-4346-9383-\
bee3fcfd6fd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jacobians", "[", 
   RowBox[{"row_", ",", "col_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Xi]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Eta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Xi]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Eta]"}], "]"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"Jacobians", "[", 
   RowBox[{"23", ",", "10"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"Jacobian", " ", "for", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}]}]}], "*)"}]}]}], "Input",
 CellFrame->True,
 ShowCellLabel->False,
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919700631599*^9}, {
   3.745921355719667*^9, 3.745921360764748*^9}, {3.745921553276702*^9, 
   3.7459216627084427`*^9}, 3.745987544571939*^9, {3.745987609379793*^9, 
   3.745987612855929*^9}},ExpressionUUID->"0f4047af-738a-4581-8389-\
67edc1d2fb3f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"0.011610580268173992`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
       RowBox[{"0.012500000000000011`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.007665681521506484`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
       RowBox[{"0.008555101253332503`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "\[Eta]"}], ")"}]}], "-", 
       RowBox[{"0.00013847394648949796`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"1", "+", "\[Eta]"}], "4"]}], 
      RowBox[{
       RowBox[{"0.008416627306843005`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
       RowBox[{"0.008555101253332503`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7459215432804832`*^9, 3.745921570897068*^9}, {
   3.7459216497923*^9, 3.7459216637473993`*^9}, 3.745929396671747*^9, 
   3.7459369438421555`*^9, 3.745949038156413*^9, 3.745997393873905*^9, 
   3.7469754854190817`*^9, 3.746975881421979*^9, 
   3.746976100212117*^9},ExpressionUUID->"c2ab192f-43ea-4be6-82e0-\
64cc737f8afc"]
}, Open  ]],

Cell["\<\
We write Jacobians for 230 elements of right half of NorthBlock into an \
array, then store their determinants, and then compute and store their \
inverses.\
\>", "Text",
 CellChangeTimes->{
  3.745987646734977*^9, {3.7459876839973917`*^9, 
   3.7459877585264482`*^9}},ExpressionUUID->"a96b0494-bfde-4c2b-9b48-\
3ecb30b95dff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Jacobians", "[", 
       RowBox[{"row", ",", "col"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"detJ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Det", "[", 
       RowBox[{"J", "[", 
        RowBox[{"[", 
         RowBox[{"row", ",", "col"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inverseJ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Inverse", "[", 
       RowBox[{"J", "[", 
        RowBox[{"[", 
         RowBox[{"row", ",", "col"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"detJ", "[", 
  RowBox[{"[", 
   RowBox[{"23", ",", "10"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"inverseJ", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10"}], "]"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"determinant", " ", "of", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}], " ", "and", " ", "inverse", " ", "of",
      " ", "same", " ", 
     RowBox[{"element", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.74586401789872*^9, 3.745864056589757*^9}, {
   3.74586411407899*^9, 3.7458641787921247`*^9}, {3.7458642433434353`*^9, 
   3.745864259912466*^9}, {3.74586475391324*^9, 3.7458648274779253`*^9}, {
   3.745918009772092*^9, 3.7459180492181807`*^9}, {3.745921368256702*^9, 
   3.7459213887702436`*^9}, {3.7459214304118633`*^9, 
   3.7459214338992853`*^9}, {3.745921469062749*^9, 3.745921523384083*^9}, {
   3.745921700689022*^9, 3.745921718056126*^9}, {3.7459217883840857`*^9, 
   3.745921789617581*^9}, {3.745922608488481*^9, 3.745922612573736*^9}, 
   3.745987636066799*^9, {3.74598769083892*^9, 3.745987692081154*^9}, {
   3.745987762768702*^9, 3.7459877682211514`*^9}, {3.74599447226998*^9, 
   3.745994538118328*^9}, {3.745997416852703*^9, 
   3.745997422507172*^9}},ExpressionUUID->"9a28b2a2-1891-409d-877e-\
52e60ce69707"],

Cell[BoxData[
 RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
  RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{3.745921725542904*^9, 3.7459217938756227`*^9, 
  3.7459226152741547`*^9, 3.745929401651759*^9, 3.745936949071759*^9, 
  3.745949045866823*^9, 3.745997432133645*^9, 3.7469754921947823`*^9, 
  3.7469758861735897`*^9, 
  3.746976104685482*^9},ExpressionUUID->"e0ad22ed-4661-4707-8200-\
b6c5c926aff9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"0.01697172856017551`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.00013847394648949796`", " ", "\[Xi]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "0.016220782774838988`"}], "-", 
        RowBox[{"0.0008894197318260189`", " ", "\[Xi]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]]},
     {
      FractionBox[
       RowBox[{"0.0001384739464894702`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.00013847394648949796`", " ", "\[Eta]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], 
      FractionBox[
       RowBox[{"0.024110580268174003`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0008894197318260189`", " ", "\[Eta]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.745921725542904*^9, 3.7459217938756227`*^9, 
  3.7459226152741547`*^9, 3.745929401651759*^9, 3.745936949071759*^9, 
  3.745949045866823*^9, 3.745997432133645*^9, 3.7469754921947823`*^9, 
  3.7469758861735897`*^9, 
  3.746976104688284*^9},ExpressionUUID->"63ae291a-a229-4453-9401-\
9755e8475abd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Number", " ", "of", " ", "integrals", " ", "to", " ", "compute"}], 
  " ", "=", " ", 
  RowBox[{"230", " ", 
   RowBox[{"elements", " ", "\[CenterDot]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["5", "2"], " ", "overlap", " ", 
        RowBox[{"factors", " ", "\[CenterDot]", " ", "n"}], 
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}]}], "2"], " ", "+", " ", 
      RowBox[{"5", " ", "forcing", " ", "vector", " ", 
       RowBox[{"factors", " ", "\[CenterDot]", " ", "n"}]}]}], 
     ")"}]}]}]}]], "Text",
 CellChangeTimes->{3.745987833152452*^9, 
  3.74598787048892*^9},ExpressionUUID->"2fecb08d-21c7-4007-903d-80b83eaf5437"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"230", "  ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"25", "  ", "13", " ", 
     RowBox[{"12", " ", "/", " ", "2"}]}], " ", "+", 
    RowBox[{"5", " ", "12"}]}], " ", ")"}]}]], "Input",
 CellChangeTimes->{{3.745865397549535*^9, 3.7458654016884193`*^9}, {
   3.74586716470231*^9, 3.745867166316972*^9}, {3.745867230070262*^9, 
   3.745867230792966*^9}, {3.745867307865114*^9, 3.7458673450032387`*^9}, {
   3.745867440036338*^9, 3.745867473032077*^9}, {3.745867527666387*^9, 
   3.745867529439221*^9}, {3.745921845703678*^9, 3.74592191678828*^9}, {
   3.745921993841278*^9, 3.745922129640036*^9}, 3.745987821488402*^9, {
   3.745987881588521*^9, 
   3.745987882810186*^9}},ExpressionUUID->"2b9d5036-8cf7-43eb-876e-\
6970a8bcb494"],

Cell[BoxData["462300"], "Output",
 CellChangeTimes->{3.7458654026789293`*^9, 3.745867345684099*^9, 
  3.7458675330674667`*^9, 3.74592213556035*^9, 
  3.745936954037362*^9},ExpressionUUID->"4670eec1-986d-4154-84ca-\
0d52e683a8f9"]
}, Open  ]],

Cell["\<\
We write down 12 basis functions on reference square (functions of \[Xi] and \
\[Eta]), their partials along \[Xi] and their partials along \[Eta].\
\>", "Text",
 CellChangeTimes->{{3.74598791803904*^9, 
  3.745987960350068*^9}},ExpressionUUID->"d2346763-a10a-4fe7-8e24-\
205cde59d090"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{
    FractionBox["1", "8"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x", "+", 
         SuperscriptBox["x", "2"], "+", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "1"}], ")"}], "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "x", "+", 
         SuperscriptBox["x", "2"], "+", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "2"]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "x", "+", 
         SuperscriptBox["x", "2"], "-", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x", "+", 
         SuperscriptBox["x", "2"], "-", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "=", 
    RowBox[{"\[Phi]", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "\[Xi]"}], ",", 
       RowBox[{"y", "\[Rule]", "\[Eta]"}]}], "}"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"d\[Phi]d\[Xi]", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"#", ",", "\[Xi]"}], "]"}], "]"}], "&"}], ",", "\[Phi]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d\[Phi]d\[Eta]", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"#", ",", "\[Eta]"}], "]"}], "]"}], "&"}], ",", "\[Phi]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Phi]", "//", "MatrixForm"}], ",", " ", 
   RowBox[{"d\[Phi]d\[Xi]", "//", "MatrixForm"}], ",", 
   RowBox[{"d\[Phi]d\[Eta]", "//", "MatrixForm"}]}], "}"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Example", ":", " ", 
     RowBox[{"Basis", " ", "functions"}]}], ",", " ", 
    RowBox[{
    "ksi", " ", "partials", " ", "and", " ", "eta", " ", "partials", " ", 
     "side", " ", "by", " ", 
     RowBox[{"side", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.745865673896501*^9, 3.7458658558476562`*^9}, {
   3.7458659241477413`*^9, 3.745865929187855*^9}, {3.745917841566265*^9, 
   3.745917991479117*^9}, {3.745918063373268*^9, 3.7459180754849043`*^9}, {
   3.745922293809897*^9, 3.745922324774239*^9}, {3.745922373178953*^9, 
   3.745922450376917*^9}, {3.745922627893914*^9, 3.745922630577613*^9}, 
   3.745987909973558*^9, {3.7459879652362347`*^9, 3.745987968985034*^9}, {
   3.745993461638286*^9, 3.745993464665224*^9}, {3.745993535606844*^9, 
   3.745993556362589*^9}, {3.745993753932816*^9, 3.745993774198823*^9}, {
   3.745993804468244*^9, 
   3.7459938548177757`*^9}},ExpressionUUID->"d158fc37-cb8e-4df5-8253-\
7e15f79fd4ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "\[Xi]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "\[Xi]"}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Xi]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Xi]"}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Eta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Eta]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "\[Eta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "\[Eta]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.745922454326682*^9, 3.745922635029648*^9, 
  3.7459294112020817`*^9, 3.745936958443617*^9, 3.745949052670593*^9, 
  3.7459974566388206`*^9, 3.74679176050212*^9, 3.7469755008137817`*^9, 
  3.7469758939651213`*^9, 3.746976117106924*^9, 3.7472272682111588`*^9, 
  3.7782069876847067`*^9},ExpressionUUID->"41c9d4e2-0fb8-4e99-9a51-\
4376645c3b39"]
}, Open  ]],

Cell[TextData[{
 "We write out coefficients of 5 terms appearing in A \[CenterDot] \
\[CapitalDelta]X that depend on position. Later, we'll form 25 integrals \
(each coefficient with each) for each unique ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "j"], " ", 
    SubscriptBox["\[Phi]", "k"]}], TraditionalForm]],ExpressionUUID->
  "de41931c-4c35-45cb-b806-348443689d01"],
 " combination (12 \[CenterDot] 13 / 2 = 78), for each element."
}], "Text",
 CellChangeTimes->{
  3.745988000881611*^9, {3.745992615916394*^9, 3.745992660577537*^9}, {
   3.745993933484066*^9, 3.745993963022484*^9}, {3.7459940297639713`*^9, 
   3.745994038857335*^9}, {3.745994124232102*^9, 3.7459941342959757`*^9}, {
   3.745994168842821*^9, 3.7459943745091953`*^9}, {3.745995276384069*^9, 
   3.7459952882508297`*^9}},ExpressionUUID->"630d47ee-cf86-4b3d-95d4-\
6b531a70e30a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef", "[", 
   RowBox[{"row_", ",", "col_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Xi]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Xi]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "2"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Eta]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "2"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Eta]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"coef", "[", 
  RowBox[{"1", ",", "10", ",", "12"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"5", " ", "factors", " ", "of", " ", "element", " ", "in", " ", 
     RowBox[{"(", 
      RowBox[{"1", ",", " ", "10"}], ")"}], " ", 
     RowBox[{"column", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfUOnbc2JF68dz99SXQuie+b93ASiNcVCtoPoDrb2
PSCao+LPQRC97uHaUyD6R+qjsyB6E0/GJRC9S4jnBYieMqPi0CkgLf/tP5jO
mbr4JIhO+5x0DkS/6bj6EES/+PHrGYg+80TkNYj+lvIBTIf01f0A0XEnFvwG
0UYZeTyngfSXEAZ+EP0kda8HiC6IVPYE0SJmHzLOAOkm20mZINrcNDEXRE+9
Ul8EoldJPt/0HEhfe355C4h2k/j5/yWQ9vjJxvAKSCtJLGAF0SKvWjhB9KL7
Z66BaO+vbjdA9C+/B89B9Io4848g+oa3qOEbIC355LwxiF7jkfzy5KvXjvM4
z70C0QDCW9mx
  "],ExpressionUUID->"66824fbf-9f63-4594-9907-eeec04fe53c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"6.190486669773892`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", "\[Eta]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"122.56261188667688`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[Xi]"}]}], ")"}]}], 
     RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.`", " ", "\[Eta]"}], "+", 
      RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]]}], ",", 
   FractionBox[
    RowBox[{"6.190486669773892`", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", "\[Eta]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "109.54598021152214`"}], "+", 
       RowBox[{"1.`", " ", "\[Eta]"}]}], ")"}]}], 
    RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[Eta]"}], "+", 
     RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]], ",", 
   FractionBox[
    RowBox[{"119.2846986722579`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.3333333333333333`"}], "-", 
       RowBox[{"0.6666666666666666`", " ", "\[Eta]"}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", "\[Xi]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"18.237489224042807`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", "\[Xi]"}]}], ")"}]}], 
    RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[Eta]"}], "+", 
     RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"119.2846986722579`", " ", 
      RowBox[{"(", 
       RowBox[{"19.61867602057167`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[Eta]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.3333333333333333`"}], "-", 
        RowBox[{"0.6666666666666666`", " ", "\[Eta]"}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", "\[Xi]"}], ")"}]}], 
     RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.`", " ", "\[Eta]"}], "+", 
      RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.745931971886272*^9, 3.745932193253624*^9, {3.745932234418688*^9, 
   3.745932275475174*^9}, 3.745933926605238*^9, 3.745936969106026*^9, 
   3.7459974701846247`*^9, 3.746975508630897*^9, 3.7469755786626873`*^9, 
   3.7469759025791607`*^9, 
   3.746976167900189*^9},ExpressionUUID->"97854792-9e49-4350-a533-\
e12bebc651d1"]
}, Open  ]],

Cell[TextData[{
 "Write a method that will integrate terms of form:   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "[", 
    SubscriptBox["row", "i"]}], TraditionalForm]],ExpressionUUID->
  "b9a83bd2-245f-4709-a9a1-31fc10477414"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "3fe3424f-3dad-4114-a39d-32a9a3cbb533"],
 ", j][[n]] \[CenterDot] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "[", 
    SubscriptBox["row", "i"]}], TraditionalForm]],ExpressionUUID->
  "dd7bd4dc-3478-477b-be15-b651c0315f1c"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "a05d5dd5-35e2-4bd5-b389-6af4e804500d"],
 ", k][[m]] \[CenterDot] detJ[[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["row", "i"], TraditionalForm]],ExpressionUUID->
  "b3f48af5-e143-4b41-ba1c-5156c64cb16b"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "0b4a7871-2589-4d46-94ef-6ae26b731be6"],
 "]],   where i represents an element from 1 to 230;   j,k represent \
elemental functions \[Phi] from 1 to 12;   n,m range from 1 to 5."
}], "Text",
 CellChangeTimes->{{3.745993140090949*^9, 3.745993140882901*^9}, {
  3.745993179549076*^9, 3.74599322394958*^9}, {3.7459932737746487`*^9, 
  3.745993365041719*^9}, {3.745994683434701*^9, 
  3.74599497327698*^9}},ExpressionUUID->"010a9d8b-6ffe-4641-9f89-\
c9c6a318c7ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "startRow", " ", "and", " ", "endRow", " ", "give", " ", "us", " ", 
    "freedom", " ", "to", " ", "split", " ", "integration", " ", "across", 
    " ", "multiple", " ", "processor", " ", 
    RowBox[{"cores", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"IntegrateTerms", "[", 
    RowBox[{"{", 
     RowBox[{"startRow_", ",", "endRow_", ",", "colCount_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "row", ",", "col", ",", "j", ",", "k", ",", "rowCount", ",", "n", ",", 
       "m"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rowCount", "=", "endRow"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"Reap", "[", "\n", "\t", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"row", "=", "startRow"}], ",", 
           RowBox[{"row", "\[LessEqual]", "rowCount"}], ",", 
           RowBox[{"++", "row"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{
              RowBox[{"Reap", "[", "\n", "\t\t", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"col", "=", "1"}], ",", 
                 RowBox[{"col", "\[LessEqual]", "colCount"}], ",", 
                 RowBox[{"++", "col"}], ",", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{"Sow", "[", 
                   RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "j"}], ",", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"k", "=", "j"}], ",", 
                    RowBox[{"k", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "k"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"m", "=", "1"}], ",", 
                    RowBox[{"m", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "m"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "j"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "k"}], "]"}], "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", 
                    RowBox[{"detJ", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                "\n", "\t\t", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
          "\t", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7459384641692367`*^9, {3.745938502681242*^9, 3.745938502841786*^9}, 
   3.7459443770670123`*^9, {3.745944860165071*^9, 3.745944860774439*^9}, {
   3.745945032203983*^9, 3.7459450335384235`*^9}, {3.7459451196222115`*^9, 
   3.7459451366616435`*^9}, 3.7459455625765977`*^9, {3.745947216469322*^9, 
   3.7459472171176176`*^9}, 3.7459491434936795`*^9, {3.745994665264627*^9, 
   3.745994672789562*^9}, {3.7459949974581537`*^9, 3.745995005390809*^9}, {
   3.745995039162722*^9, 3.745995105789192*^9}, {3.745997098433312*^9, 
   3.7459971143576393`*^9}, {3.745997220019031*^9, 
   3.7459972236080313`*^9}},ExpressionUUID->"df121a8c-0f30-484d-aa6f-\
9090c50fa5f2"],

Cell["\<\
We shall perform 3 parallel executions of IntegrateTerms method. We specify \
row ranges over which each thread will integrate.\
\>", "Text",
 CellChangeTimes->{{3.7459951280050917`*^9, 3.745995209012987*^9}, {
  3.745995328034932*^9, 
  3.7459953292229757`*^9}},ExpressionUUID->"9b7a9287-3aba-4129-8072-\
dbc0b31b25f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rowRanges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "16", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "23", ",", "10"}], "}"}]}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7459448989603148`*^9, 3.745944962749708*^9}, {
  3.745944995757431*^9, 3.745945021926447*^9}, {3.7459450549661307`*^9, 
  3.7459450622626095`*^9}, {3.7459452572780523`*^9, 3.745945275444468*^9}, {
  3.745995219259081*^9, 3.745995232598958*^9}, {3.7459971214944477`*^9, 
  3.7459971287362347`*^9}},ExpressionUUID->"fffc131d-8b39-432f-a6e2-\
11fce584e948"],

Cell["\<\
Set up a shared array where each thread will append its result after it is \
finished. This takes about 2 h 45 min on a 3.2 GHz, 4 core machine.\
\>", "Text",
 CellChangeTimes->{{3.745995354962442*^9, 3.745995405223477*^9}, {
  3.7459956091463833`*^9, 
  3.745995676665224*^9}},ExpressionUUID->"08b5d9af-4ed3-4409-9bf0-\
b83e399ffe64"],

Cell[BoxData[{
 RowBox[{"results", "=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "results", "]"}], "\n", 
 RowBox[{"ParallelDo", "[", 
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"results", ",", 
     RowBox[{"integration", "[", 
      RowBox[{"rowRanges", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.745924162608917*^9, 3.7459242685869713`*^9}, 
   3.745924318355905*^9, {3.745929799146524*^9, 3.74592980577112*^9}, {
   3.745929917010956*^9, 3.745929971269308*^9}, {3.7459316612756567`*^9, 
   3.745931797751738*^9}, 3.7459318428923283`*^9, 3.745931910996675*^9, {
   3.745932299627763*^9, 3.7459323984798717`*^9}, {3.745932433780085*^9, 
   3.745932470680882*^9}, {3.74593251226827*^9, 3.745932541079899*^9}, {
   3.7459331855052023`*^9, 3.7459333072332897`*^9}, {3.745933340073318*^9, 
   3.745933346471951*^9}, {3.7459334122312202`*^9, 3.7459334256386747`*^9}, {
   3.7459334979673033`*^9, 3.745933519004055*^9}, {3.745933553280377*^9, 
   3.745933570478187*^9}, {3.745933637834435*^9, 3.745933689611847*^9}, {
   3.74593372994412*^9, 3.7459338932453117`*^9}, {3.745933983553006*^9, 
   3.745934008802096*^9}, {3.745934073388218*^9, 3.745934088038616*^9}, {
   3.745934172829108*^9, 3.7459342750913754`*^9}, {3.745934572997957*^9, 
   3.745934594241065*^9}, {3.745934655209078*^9, 3.7459346650780277`*^9}, {
   3.7459348079213247`*^9, 3.7459348167285223`*^9}, {3.745934887800741*^9, 
   3.745934925562989*^9}, {3.74593505361414*^9, 3.745935111447016*^9}, {
   3.745936432874097*^9, 3.745936437280925*^9}, 3.7459370992414045`*^9, {
   3.7459375619789424`*^9, 3.7459375622412148`*^9}, {3.745937727801487*^9, 
   3.7459377360045524`*^9}, {3.7459377802193136`*^9, 3.745937787698306*^9}, {
   3.7459380071703515`*^9, 3.7459380202493987`*^9}, {3.7459381404419465`*^9, 
   3.745938141634782*^9}, {3.7459382894175415`*^9, 3.745938324537649*^9}, {
   3.745938356354534*^9, 3.7459383656756277`*^9}, {3.7459384150505934`*^9, 
   3.7459384785846567`*^9}, {3.7459385164394217`*^9, 3.745938580175974*^9}, {
   3.745938808096481*^9, 3.745938836553373*^9}, {3.745938958777487*^9, 
   3.7459389628964715`*^9}, 3.745939164951605*^9, {3.7459395937608013`*^9, 
   3.7459396098916407`*^9}, {3.745944828894695*^9, 3.7459448426369452`*^9}, {
   3.7459452298374367`*^9, 3.745945252038077*^9}, {3.745945292646467*^9, 
   3.7459453398542185`*^9}, {3.745945375347333*^9, 3.7459453765640707`*^9}, {
   3.745945575870072*^9, 3.745945577133667*^9}, {3.7459458742858057`*^9, 
   3.7459458769642696`*^9}, {3.7459472416938643`*^9, 3.74594724224539*^9}, 
   3.745947283707509*^9, {3.745992839661702*^9, 3.745992840955309*^9}, {
   3.745995236469133*^9, 
   3.745995264699793*^9}},ExpressionUUID->"ea526ec7-9fa1-46e9-819c-\
60a5ddfa06e3"],

Cell["We export results to 3 files.", "Text",
 CellChangeTimes->{{3.7459954255123577`*^9, 
  3.7459954864695797`*^9}},ExpressionUUID->"2cbc14a8-1eec-4118-b70d-\
db90b2ec5fc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results1.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
   3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
   3.745947138293415*^9}, 3.745959558579385*^9, {3.745999863651536*^9, 
   3.745999866368115*^9}},ExpressionUUID->"b53324cb-9c99-448d-8826-\
5c4006cd0fef"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results1.txt\"\>"], "Output",
 CellChangeTimes->{
  3.7459596300592537`*^9},ExpressionUUID->"0302b956-9092-4af2-b5cc-\
bc26a5fc8416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results2.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
  3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
  3.745947138293415*^9}, {3.745959558579385*^9, 3.7459595626026177`*^9}, {
  3.7459998689859*^9, 
  3.7459998721249*^9}},ExpressionUUID->"6cfe0558-4e56-4a4b-ac61-91407c18d06a"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results2.txt\"\>"], "Output",
 CellChangeTimes->{
  3.745959638789843*^9},ExpressionUUID->"71c3f668-aeb6-4b21-9dda-\
9907013d420f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results3.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
  3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
  3.745947138293415*^9}, {3.745959558579385*^9, 3.7459595626026177`*^9}, {
  3.745999874725041*^9, 
  3.745999876459989*^9}},ExpressionUUID->"aac840a4-55c7-4b20-a587-\
e52f151b2f41"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results3.txt\"\>"], "Output",
 CellChangeTimes->{3.7459469383608775`*^9, 3.7459469800234957`*^9, 
  3.7459596462788134`*^9},ExpressionUUID->"be377cb6-c8d7-44aa-b6c8-\
34f9454c2eb0"]
}, Open  ]],

Cell["\<\
We check validity of array dimensions by querying last element in first \
results array. First  results array has only 7 rows, which means it is the \
result of computation assigned to third thread (it finished first because \
other two threads had 8 rows to compute). That was an oversight. We\
\[CloseCurlyQuote]ll have to figure out  which of results[[2]] and \
results[[3]] has been calculated by which thread, since they have an \
identical number of rows (8).\
\>", "Text",
 CellChangeTimes->{{3.745995466262289*^9, 3.745995592592169*^9}, {
  3.745995710585335*^9, 3.745995715803362*^9}, {3.7459957629045143`*^9, 
  3.745995929250495*^9}},ExpressionUUID->"2205cce2-af8f-4c29-8563-\
ce94e23636d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "[", 
  RowBox[{"[", 
   RowBox[{
   "1", ",", "7", ",", "10", ",", "12", ",", "1", ",", "5", ",", "5"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7459596089397116`*^9, 3.745959614656392*^9}, {
  3.7459599100244045`*^9, 3.745959910621808*^9}, {3.745959958955529*^9, 
  3.745960009778599*^9}, {3.745960056080757*^9, 
  3.7459601611218147`*^9}},ExpressionUUID->"365c6957-dc72-4cf4-8d44-\
2da0bc856268"],

Cell[BoxData["0.2468967080737511`"], "Output",
 CellChangeTimes->{{3.745959964500696*^9, 3.7459600108308105`*^9}, {
  3.7459600642070217`*^9, 
  3.7459601621949425`*^9}},ExpressionUUID->"5b61f849-84fc-4bb1-8e31-\
2349fce7c757"]
}, Open  ]],

Cell["\<\
After some effort we discover the correspondence of results to row ranges. \
\>", "Text",
 CellChangeTimes->{{3.745997935983198*^9, 3.745997982374411*^9}, {
  3.745998136371594*^9, 
  3.745998145835148*^9}},ExpressionUUID->"c4242e91-f91f-440d-a6e4-\
c16c7ec7b465"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Rows", " ", "17"}], " ", "-", " ", "23"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"results1", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results1.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results1", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Rows", " ", "1"}], " ", "-", " ", "8"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"results2", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results2.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results2", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Rows", " ", "9"}], " ", "-", " ", "16"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"results3", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results3.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.745996816033514*^9, 3.745996827594061*^9}, {
  3.745996997493169*^9, 3.7459970553172493`*^9}, {3.745997787986829*^9, 
  3.745997860558496*^9}, {3.74599789303384*^9, 3.745997901248081*^9}, {
  3.745998152473055*^9, 3.745998158501986*^9}, {3.745998632325129*^9, 
  3.745998674300931*^9}, {3.7459999988597*^9, 
  3.746000016083068*^9}},ExpressionUUID->"5bd2a4f9-65a3-40c1-864f-\
d51f35445352"],

Cell["We rearrange the results in correct order and merge them.", "Text",
 CellChangeTimes->{{3.745999900225193*^9, 
  3.745999919674183*^9}},ExpressionUUID->"86c3eedb-ac1e-4d71-984c-\
b708fee7727c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"results2", ",", "results3", ",", "results1"}], "}"}], ",", 
     "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7459982125624027`*^9, 3.7459982907835283`*^9}, {
  3.745998452581296*^9, 3.745998455188814*^9}, {3.745999772881865*^9, 
  3.745999780968862*^9}},ExpressionUUID->"731295f9-4de9-490d-89cd-\
4a18f9e45075"],

Cell["We check validity by accessing last element.", "Text",
 CellChangeTimes->{{3.745999929478181*^9, 
  3.745999954537073*^9}},ExpressionUUID->"fd263ef4-a38d-4273-a220-\
fb61215b35b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "[", 
  RowBox[{"[", 
   RowBox[{"23", ",", "10", ",", "12", ",", "1", ",", "5", ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745998296648452*^9, 3.7459983692348127`*^9}, {
  3.74599845954808*^9, 3.7459984960600243`*^9}, {3.745999752571426*^9, 
  3.745999803202227*^9}},ExpressionUUID->"172b5aa3-c9ed-4f92-b460-\
993a10882ffd"],

Cell[BoxData["0.2468967080737511`"], "Output",
 CellChangeTimes->{{3.745998318617022*^9, 3.745998371157708*^9}, {
  3.745998472153515*^9, 3.7459985058117247`*^9}, {3.745999746598075*^9, 
  3.7459998047999363`*^9}},ExpressionUUID->"179fb8e2-bb61-403b-b4e3-\
914193bc35ed"]
}, Open  ]],

Cell["\<\
Now we export the ordered array again, so our C# program can read it and use \
these integrals in calculations.\
\>", "Text",
 CellChangeTimes->{{3.746000170184457*^9, 
  3.7460002317115383`*^9}},ExpressionUUID->"a97f7b90-499b-41e9-8826-\
a1ae92d2354c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results.txt\>\"", ",", 
   RowBox[{"{", "results", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746000074669569*^9, 3.746000085674943*^9}, {
  3.746000125783242*^9, 
  3.746000128178813*^9}},ExpressionUUID->"29c505a4-83bf-4a7e-8818-\
6e7728f890bd"],

Cell[BoxData["\<\"/home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/\
Results/results.txt\"\>"], "Output",
 CellChangeTimes->{3.7460000951173887`*^9, 
  3.7460001338887444`*^9},ExpressionUUID->"e79cc618-ba04-4935-b314-\
a34bea4c20bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "results", "]"}]], "Input",
 CellChangeTimes->{{3.746000280523863*^9, 
  3.746000284869973*^9}},ExpressionUUID->"5b29d558-e1ec-4592-b4b1-\
34ce80f7ae68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"23", ",", "10", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.746000285652266*^9},ExpressionUUID->"d571430c-c155-42ee-bc5d-\
f54cae33b499"]
}, Open  ]],

Cell["\<\
Now do the same for RightBlock. We shall only take a single element\
\[CloseCurlyQuote]s corner node positions, since all elements are of the same \
shape. This means we have to evaluate integrals for only one element.\
\>", "Text",
 CellChangeTimes->{{3.74670143299522*^9, 
  3.74670152832106*^9}},ExpressionUUID->"742047f1-ed43-4641-ab18-\
7bd9c70aebae"],

Cell[CellGroupData[{

Cell["\<\
1) We acquire element corner positions for element (2,2) in form {x1, y1}, \
{x2, y2}, {x3, y3}, {x4, y4}.\
\>", "Subsection",
 CellChangeTimes->{{3.746790048254834*^9, 
  3.746790103303874*^9}},ExpressionUUID->"e047eee7-2ffd-4b43-9b7b-\
153595f44f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodePos2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/Results/\
rectElement.txt\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos2", "=", 
   RowBox[{"ToExpression", "[", "nodePos2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", "nodePos2", "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "4", " ", "corner", " ", "node", " ", "positions", " ", "for", " ", 
     "element", " ", "in", " ", 
     RowBox[{"23", "'"}], "rd", " ", "row", " ", "and", " ", 
     RowBox[{"10", "'"}], "th", " ", "column", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"most", " ", "upper", " ", "right", " ", "element"}], ")"}], 
      "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746790142824296*^9, 3.746790241902772*^9}, 
   3.74679063054811*^9},ExpressionUUID->"bdb19c3b-46e4-4f49-a9a0-\
194f1293c4da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "0.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "0.1`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.746790187596938*^9, 3.74679024391899*^9}, {
   3.746790624910161*^9, 3.746790631341084*^9}, 
   3.746791092807248*^9},ExpressionUUID->"d7481d03-1e21-486c-a8d3-\
9c21b8f08041"]
}, Open  ]],

Cell["2) We transpose the nodePos2 array.", "Text",
 CellChangeTimes->{{3.74679115264872*^9, 
  3.746791180586053*^9}},ExpressionUUID->"43978c5a-1d6b-48e0-a3e0-\
c051c87df63a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"element", " ", "=", " ", 
  RowBox[{"Transpose", "[", "nodePos2", "]"}]}]], "Input",
 CellChangeTimes->{{3.746791232730019*^9, 
  3.7467912520630074`*^9}},ExpressionUUID->"62bc474a-f3c3-4a4c-bd0c-\
02bc3388ac88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "1.1`", ",", "1.1`", ",", "1.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "0.05`", ",", "0.1`", ",", "0.1`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.746791253300572*^9},ExpressionUUID->"ce0126cf-6262-4afd-864e-\
88db0436979a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transformation", " ", 
    RowBox[{"functions", ".", " ", "Row"}], " ", "and", " ", "col", " ", 
    "are", " ", "indices", " ", "of", " ", "element", " ", "inside", " ", 
    "\"\<elements\>\"", " ", 
    RowBox[{"array", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P2", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"element", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q2", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"element", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"P2", "[", 
    RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], "\n", 
   RowBox[{"%", "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.7467913524033012`*^9, 
  3.746791398905856*^9}},ExpressionUUID->"8462d0e6-062c-4bac-a8a7-\
f50caf57550a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2625`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2625`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.275`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.275`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.746791400972144*^9},ExpressionUUID->"b6cc48e4-bbb0-48fb-84a5-\
5f5a15595c5f"],

Cell[BoxData[
 RowBox[{"1.0750000000000002`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.025000000000000022`", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{
  3.746791400974289*^9},ExpressionUUID->"c4a5e4f3-9059-49e9-a7a5-\
20158f19bff8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jacobian2", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"P2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Xi]"}], "]"}], 
        ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"P2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Eta]"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Q2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Xi]"}], "]"}], 
        ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Q2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Eta]"}], "]"}]}], 
       "}"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Jacobian2", "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"Jacobian", " ", "for", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746791451965535*^9, 3.746791506962228*^9}, {
  3.746791573878478*^9, 3.746791577374588*^9}, {3.746791706735985*^9, 
  3.746791714428278*^9}},ExpressionUUID->"62891c5a-db81-42c1-8add-\
31a23355d474"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.025000000000000022`", "0.`"},
     {"0.`", "0.025`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.746791508843569*^9, 3.746791578296617*^9, 
  3.7467917156010447`*^9},ExpressionUUID->"6fdbb83c-3ca4-41c1-98d8-\
e19927752679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DetJ2", "=", 
  RowBox[{"Det", "[", "Jacobian2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"InvJ2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "Jacobian2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.746791560138892*^9, 
  3.746791683107188*^9}},ExpressionUUID->"748d1ee5-d672-4889-bf4a-\
a6eb761e3a07"],

Cell[BoxData["0.0006250000000000006`"], "Output",
 CellChangeTimes->{{3.74679163421646*^9, 3.746791652728673*^9}, 
   3.746791684704198*^9},ExpressionUUID->"a22c0a44-504c-4258-ae59-\
edb4a1372a31"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"39.99999999999997`", "0.`"},
     {"0.`", "40.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.74679163421646*^9, 3.746791652728673*^9}, 
   3.746791684706526*^9},ExpressionUUID->"c4a1b3d3-c409-4a99-b9b5-\
4c2c6522d1ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef2", "[", "j_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Xi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Xi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Eta]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Eta]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"coef2", "[", "12", "]"}], "//", "Simplify"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746791858524633*^9, 
  3.746791948495241*^9}},ExpressionUUID->"5a94e752-de15-49ff-b4b8-\
35fdda8e92b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.9999999999999964`"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}], ",", "0.`", ",", "0.`", ",", 
   RowBox[{
    RowBox[{"-", "5.`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "\[Eta]"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7467919496212473`*^9},ExpressionUUID->"43d8a49c-1ad7-4432-a9d0-\
c38f0a3ab2cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegrateTerms2", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "k", ",", "n", ",", "m"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Quiet", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Reap", "[", "\n", "\t\t\t", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "12"}], ",", 
          RowBox[{"++", "j"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Sow", "[", 
            RowBox[{
             RowBox[{"Reap", "[", "\n", "\t\t\t\t", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "j"}], ",", 
                RowBox[{"k", "\[LessEqual]", "12"}], ",", 
                RowBox[{"++", "k"}], ",", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{
                   RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"m", "=", "1"}], ",", 
                    RowBox[{"m", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "m"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef2", "[", "j", "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{
                    RowBox[{"coef2", "[", "k", "]"}], "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", "DetJ2"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
               "\n", "\t\t\t\t", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
         "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746792036263768*^9, 3.7467921221807833`*^9}, {
  3.746792152338471*^9, 3.746792155254722*^9}, {3.74679221183118*^9, 
  3.746792225741086*^9}, {3.746792296614397*^9, 3.746792304273047*^9}, {
  3.746792344361072*^9, 3.746792374535913*^9}, {3.746792733183049*^9, 
  3.7467927496866283`*^9}, {3.746793279590293*^9, 
  3.746793285025324*^9}},ExpressionUUID->"53d4a450-c250-4399-b8ce-\
a226f1d846db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegrateTerms2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746793172119583*^9, 3.746793189747575*^9}, {
  3.7467939063875313`*^9, 
  3.746793921548121*^9}},ExpressionUUID->"8ce8e24e-1338-4bfd-a80e-\
9852df620d22"],

Cell[BoxData["0.00009146825401131258`"], "Output",
 CellChangeTimes->{3.746793817989464*^9, 
  3.746793930649743*^9},ExpressionUUID->"d11b17d9-f293-4a58-989e-\
272e0ca44ad5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/Results/\
rectIntegrals.txt\>\"", ",", 
   RowBox[{"{", "IntegrateTerms2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746794114517778*^9, 
  3.7467941403951473`*^9}},ExpressionUUID->"f9f3cc29-103d-4d6d-ab7c-\
3bc95ee223b9"],

Cell[BoxData["\<\"/home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/\
Results/rectIntegrals.txt\"\>"], "Output",
 CellChangeTimes->{
  3.74679414450839*^9},ExpressionUUID->"f61c3407-e467-4e89-a0b8-832670a6fafb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegrateTerms2", "[", 
  RowBox[{"[", 
   RowBox[{"12", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746891218395217*^9, 
  3.746891239238509*^9}},ExpressionUUID->"6cbc3baa-c3ea-4875-9593-\
689a83671a27"],

Cell[BoxData["0.000031746031726678295`"], "Output",
 CellChangeTimes->{
  3.746891240157332*^9},ExpressionUUID->"b6def720-913b-445f-a71f-\
198cd849d86f"]
}, Open  ]],

Cell[BoxData["0.000031746031726678295`"], "Input",ExpressionUUID->"90a5edb4-1367-40a0-b310-d3fbf7df3838"],

Cell["\<\
Now compute remaining integrals needed for forcing vector of form \[Phi] \
\[Phi] \[Phi].\
\>", "Text",
 CellChangeTimes->{{3.746970060607525*^9, 
  3.746970120245669*^9}},ExpressionUUID->"76b908d4-6119-45c6-8849-\
43cc94364b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "startRow", " ", "and", " ", "endRow", " ", "give", " ", "us", " ", 
    "freedom", " ", "to", " ", "split", " ", "integration", " ", "across", 
    " ", "multiple", " ", "processor", " ", 
    RowBox[{"cores", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"IntegrateTerms3", "[", 
    RowBox[{"{", 
     RowBox[{"startRow_", ",", "endRow_", ",", "colCount_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"row", ",", "col", ",", "j", ",", "n"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Quiet", "["}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"Reap", "[", "\n", "\t", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"row", "=", "startRow"}], ",", 
         RowBox[{"row", "\[LessEqual]", "endRow"}], ",", 
         RowBox[{"++", "row"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{
            RowBox[{"Reap", "[", "\n", "\t\t", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"col", "=", "1"}], ",", 
               RowBox[{"col", "\[LessEqual]", "colCount"}], ",", 
               RowBox[{"++", "col"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"Sow", "[", 
                 RowBox[{
                  RowBox[{"Reap", "[", "\n", "\t\t\t", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "j"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "j"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", 
                    RowBox[{"detJ", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
              "\n", "\t\t", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
        "\t", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\n", 
    RowBox[{"(*", "]", "*)"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7469701289371567`*^9, {3.746970193065446*^9, 3.746970212921853*^9}, {
   3.746970313677672*^9, 3.746970320214881*^9}, {3.74697038956719*^9, 
   3.746970395578701*^9}, 3.746970769874619*^9, 3.7469708303197117`*^9, {
   3.746974864793776*^9, 3.7469748687098207`*^9}, 3.746975088654313*^9, {
   3.746975174443486*^9, 3.746975269087113*^9}, {3.746975947204805*^9, 
   3.746975957670576*^9}, {3.7469763563867903`*^9, 3.746976366812992*^9}, {
   3.746976406736294*^9, 
   3.746976423077572*^9}},ExpressionUUID->"135b5e62-0e84-4fe3-8779-\
224687d252fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result4", "=", 
   RowBox[{"IntegrateTerms3", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "23", ",", "10"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7469756425693283`*^9, 3.746975720095366*^9}, {
   3.746976374374295*^9, 3.7469763997925587`*^9}, 
   3.746976431061233*^9},ExpressionUUID->"6e1c9417-2d74-438a-9470-\
be35d9beb395"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,1,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976436300349*^9},ExpressionUUID->"ec34fa6e-4202-49e0-8269-\
d0580d40d5a1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.645471393432856`*^-23\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.621506949364279`*^-21\\\"}]\\) for the integral and error estimates.\"",2,
   34,2,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976521060603*^9},ExpressionUUID->"71baeefc-56ac-4fd9-ab1f-\
62608de8cee4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,3,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976521276121*^9},ExpressionUUID->"91a17ad2-69d0-4c8a-b821-\
e1063685ef56"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"5.761991513028073`*^-24\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.594819938592916`*^-21\\\"}]\\) for the integral and \
error estimates.\"",2,34,4,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597205097*^9},ExpressionUUID->"5bb97032-ffd6-45af-899c-\
0cda07dbec08"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,5,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597645811*^9},ExpressionUUID->"be62d733-fd20-467c-a924-\
4ce510e654f9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,34,6,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597663382*^9},ExpressionUUID->"b5f7e49c-e837-4f8c-a75e-\
920c83d0e9ed"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"2.49136460743315`*^-22\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3189026861465772`*^-19\\\"}]\\) for the integral and \
error estimates.\"",2,34,7,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976623252756*^9},ExpressionUUID->"abb0c5da-feee-4af3-a9a0-\
c1bc957a0ae3"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,34,8,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976623254416*^9},ExpressionUUID->"c594f1b7-30aa-4c32-ba2b-\
f520dc2e9826"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.746976375632123*^9, 
  3.747024566720397*^9},ExpressionUUID->"ed858bc4-523f-43b8-87d4-\
58fbd69b6863"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result4", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746975972258051*^9, 
  3.7469760557998953`*^9}},ExpressionUUID->"4c4220e4-855c-4298-9fa8-\
9d7eb00f112c"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.746975983128768*^9, 
  3.746976056360248*^9}},ExpressionUUID->"f4deaac4-2123-4d00-9c00-\
02a3dc634c14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.747227407134776*^9, 3.747227459251917*^9}, {
   3.747227506600131*^9, 3.74722763227094*^9}, {3.74722824353225*^9, 
   3.747228249694559*^9}, 
   3.74723512710732*^9},ExpressionUUID->"be13d489-6882-4519-8f84-\
a045e4e31078"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
    SuperscriptBox["\[Eta]", "2"], "+", 
    SuperscriptBox["\[Xi]", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.747227465041971*^9, {3.7472275310435658`*^9, 3.74722758128537*^9}, {
   3.747227612821504*^9, 3.74722763437836*^9}, {3.747228245361068*^9, 
   3.747228251033579*^9}},ExpressionUUID->"0fcbddda-6838-4abd-ab69-\
5b67f991e6bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"func", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7472273940355177`*^9, 3.747227401725153*^9}, {
  3.747227469453679*^9, 
  3.747227489315789*^9}},ExpressionUUID->"e558a82f-a9a5-4d95-8700-\
2d7819d49bf3"],

Cell[BoxData[LineWrapBox["\[AutoOperand]"], InputForm], "Output",
 CellChangeTimes->{
  3.7472274905461397`*^9, 3.74722753472897*^9, 3.747227584130932*^9, {
   3.747227615622024*^9, 3.747227637616542*^9}, {3.7472282467063932`*^9, 
   3.747228252083705*^9}},ExpressionUUID->"d46ffd88-adc8-431b-b087-\
6fd7caf831b6"]
}, Open  ]],

Cell["Values on lower square side for basis functions.", "Text",
 CellChangeTimes->{{3.747235808312351*^9, 3.747235862805519*^9}, {
  3.74724423165257*^9, 
  3.74724423232191*^9}},ExpressionUUID->"068d3ea3-85c6-43ac-92de-\
3ddfd2569205"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u1", "=."}], ";", 
  RowBox[{"h2", "=."}], ";", " ", 
  RowBox[{"h3", "=."}], ";", "  ", 
  RowBox[{"u4", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f1x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f4x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f1x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f4x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f3x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f3x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f2x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f2x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H2", "=", " ", 
   RowBox[{
    RowBox[{"u1", " ", "f1x2"}], "+", 
    RowBox[{"u4", " ", "f4x2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{
    RowBox[{"u1", " ", "f1x3"}], " ", "+", " ", 
    RowBox[{"u4", " ", "f4x3"}]}]}], ";"}], "\n", 
 RowBox[{"u2", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f3x2", " ", 
      RowBox[{"(", 
       RowBox[{"h3", "-", "H3"}], ")"}]}], "-", 
     RowBox[{"f3x3", " ", 
      RowBox[{"(", 
       RowBox[{"h2", "-", "H2"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f2x3", " ", "f3x2"}], "-", 
     RowBox[{"f3x3", " ", "f2x2"}]}]], "]"}]}], "\n", 
 RowBox[{"u3", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f2x3", " ", 
      RowBox[{"(", 
       RowBox[{"h2", "-", "H2"}], ")"}]}], "-", 
     RowBox[{"f2x2", 
      RowBox[{"(", 
       RowBox[{"h3", "-", "H3"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f2x3", " ", "f3x2"}], "-", 
     RowBox[{"f3x3", " ", "f2x2"}]}]], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.747234583064803*^9, 3.747234673604381*^9}, {
  3.74723472382712*^9, 3.747234944807932*^9}, {3.747235011307994*^9, 
  3.747235056599532*^9}, {3.7472351007256117`*^9, 3.747235111860909*^9}, {
  3.7472352455749063`*^9, 3.747235633639638*^9}, {3.747235724344458*^9, 
  3.747235754664674*^9}, {3.747243813942836*^9, 3.747243831491826*^9}, {
  3.747243866695107*^9, 
  3.7472438803531446`*^9}},ExpressionUUID->"00654596-25c2-4307-97d6-\
fdee656080f1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"18", " ", "h2"}], "-", 
    RowBox[{"9", " ", "h3"}], "-", 
    RowBox[{"11", " ", "u1"}], "+", 
    RowBox[{"2", " ", "u4"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472438178257732`*^9, 3.747243832573544*^9}, 
   3.7472438814819727`*^9},ExpressionUUID->"b43b5928-e151-4c44-b17a-\
0b2bb8cc4c9e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "9"}], " ", "h2"}], "+", 
    RowBox[{"18", " ", "h3"}], "+", 
    RowBox[{"2", " ", "u1"}], "-", 
    RowBox[{"11", " ", "u4"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472438178257732`*^9, 3.747243832573544*^9}, 
   3.747243881484625*^9},ExpressionUUID->"18a17199-874e-4358-871c-\
693dd9e5dbcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"18", " ", "h2"}], "-", 
      RowBox[{"9", " ", "h3"}], "-", 
      RowBox[{"11", " ", "u1"}], "+", 
      RowBox[{"2", " ", "u4"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "9"}], " ", "h2"}], "+", 
      RowBox[{"18", " ", "h3"}], "+", 
      RowBox[{"2", " ", "u1"}], "-", 
      RowBox[{"11", " ", "u4"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"func", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"u1", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "+", 
    RowBox[{"u2", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "+", " ", 
    RowBox[{"u3", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "+", 
    RowBox[{"u4", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7472351359169073`*^9, 3.747235160311133*^9}, {
  3.747235710702957*^9, 3.7472357161944027`*^9}, {3.747243973486768*^9, 
  3.747244001674238*^9}, {3.747244046938767*^9, 
  3.747244047885673*^9}},ExpressionUUID->"84e53fdf-1f06-4517-ae5c-\
18b5a7ec6c22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"9", " ", "h2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Xi]"}], "-", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "-", 
    RowBox[{"9", " ", "h3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"3", " ", "\[Xi]"}], "+", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "\[Eta]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Eta]", "2"]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Xi]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"u1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
       RowBox[{"u4", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{
  3.7472351732986526`*^9, {3.747235547414041*^9, 3.747235595045229*^9}, 
   3.747235638366301*^9, {3.7472357187412786`*^9, 3.7472357581547623`*^9}, 
   3.747244053397255*^9, 
   3.778207021466289*^9},ExpressionUUID->"ca2f65c1-23e0-4228-a317-\
736948421d88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"func", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u1", "\[Rule]", "4"}], ",", 
      RowBox[{"h2", "\[Rule]", "4"}], ",", 
      RowBox[{"h3", "\[Rule]", "4"}], ",", 
      RowBox[{"u4", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7472440982717047`*^9, 3.74724416645468*^9}, {
  3.778207037945973*^9, 
  3.778207041268446*^9}},ExpressionUUID->"21d3b345-3937-4b2e-9c7d-\
26cfb24fb164"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHm4VdWRxZmRQTRqJkfUF9KGpBUVRPOZLcEoKBrboaMdNWocovIUEWkU
4oRtYhJtgxhfnEUSGdRWMEQEuXBBUElHvSGo8ES5IDLDAySIIJ28W6uO57fP
/jr8c7+3LOuss06d2nvXrn0OvuTaMy9r1aJFi++0a9Gi9d9/D37vtMm7dm0o
6XfYrn/82+OEy4c899sp9WscH2r4hE5731q/eEWErx9zw+V1/asRflmzn8WO
D8nZVxJ+yhHewv4l7EMxXolw4xOK+VQje7vfCDd9Itz+DtRTf0vXcM/Zve//
eaazfo83XDoTl87EpXOxfSWBlyNcOifsQ8J/hEvnBP8Il87EpTNx6Uw9pbP0
u334wm7HHNfFdRZ+q+H6m/bSmfbSmbh0LsbLkX/pXHzdcijGKyHBJ8Klc+J+
I//SmfbSmfbSWTrdeczNrab27uw6Cx9puP5/4XcYrr9pL52JS+divBz5l84J
+1DMpxISfCJcOifuN/IvnWkvnamndJYe/3Xkia3WP9XBdRY+0nDpTHv5pb3+
Ji6dhd+Rw8sRLp0T9qEYr0S4dC7mU41w6ZzQJ7KXzrTPx3OlNLex6wXjJ7ZD
PFdKrxiej+fMPh/PldJsw/PxnOH5eCZejq6bj+fIPtA+H88RnwjPx3OG5+M5
0ie6bj6eM/u8zuXSHb/vfMqMK1pD53LpdsPzOpdLIw3P65zheZ0zP3mdiZcj
P3mdeV3pTLwS6D+vM69bjfzkdc7wvM6Zn7zOmZ7SWffRsvbjOrfI/3OdiUtn
4tJZwK7aP3/exX7KEd6i+J/rXIxXIlw6F/OpRvbSmbh0Ji6dBbTM44qf8Nmk
FVePPOKTgHgO2w1HPIcdhiOew6eGI54dRzwDL0f+xbv4uh7PwD2eySfCEc+O
I57dP+LZ9UE8u57Iz2H4STO+98y4TdC5Em40HPnZ7ZGf3R752XHkZ+Cen8NN
hud1juwD7ZGfySfCkZ95vyGhT2SP/Oz2mG+EzT03bD35olUB842wwXDMN8Im
wzHfCBsNx3zD/WC+4faYb7h/6Vx8XZ9vAPf5BvmEYj7VyB7zDfeP+Yb7wXzD
9cT8Oazs22XtMcctQTxXwzLDMX8OKwzH/NntMX92HPNn4OXIfz6eq2F53j4U
8/H5M/lEOObPvN/IP+bPbo/5s+uJ9WBYf3LDqLvP/1PAejCsNBzrwbDWcOlM
e6wHw0c5+0oCL0f+pbPw1Xn7UMzH14PuH+tBXNfXg7zfyD/Wg26P9aDrifpG
mD2ocfXzi55xnYW/aDjqG6FkuHQWPsVw1Dccl87CX8rh5ci/dE7Yh2I+Xt9w
e9Q3wKca4ahvuH/UN1wf1DdcT9Trwom9+l733Ld7HI96XZh2yMpB/8BRrwvn
jDu42V46C+/7/U+b7VGvC0duXTAos68k8HLkXzoXX9frdcC9Xuf+Ua/Ddb1e
5/xRr3P/qNe5PqjXuZ5z/uWWbounrCvpd49DFvS+fOkeJ+jv3WYu7TyqblWp
85kXXdZ+e1YPob3sUjj9DPjBiZv7jVoe2Qunfdfm674f2QunfU2fhZG9cNrX
9J8f2Qunfe25TIrshSfsQ8I+JPhE9sIT9xvZC0/oGdkLTzyvyF447e3vyF44
7c0usle8JuIz8qP4FN4ljwfiiPPQ//3t4+/60cyA9yJ03vRe93m/vSfAfzjF
7BHnoR9w52t+EOduj/citDZ7xLnzxHvhPBHnbo/3wu0R526P98LtEeduj/eC
9iFhHxJ8Inu8F7zfyB7vhdsjzqlnZI845/MKfF6Ic8ZDYDwgnhmHER/FJ/M/
8nPYJx+3gbj+ph/4930f4dynUJwTVzwTV9wW748sTOz7zE/s70xK4Yn9mvmJ
fZmFEa54SNxXhOv5EYfO1DNlH83roHN42XDo7Dh0dj/Q2XHojPnhpBQezfeg
M68b4dDZcejs9wWdHUee9/wMnTkv9XF899y4uSIxvlcje80niWs+WYyXI/+a
TxZft5yYP1RCgk+Eaz6ZuN/Iv/SiPXQLnzV9Pg+vSOR/183zJHQL25s+b19J
4OXIP3TDdctR/oRu7h+64brVKM9DN/cP3VyfTbevGFi/eH1Jv9cMazWhz7Y9
TtDf9//5yx/0G7W2tOeSMz7ZMc3xkLLXfx/S58CtP/jkGtkF8xNuGP7qxFkt
ngjw4/bKR/I3CP753OE/4pmw93Fq/GuzmtcjuF/y9Of7cVN+/NJ1nsf90l44
+x/Ax3H9rfvax+4L13V9oJvzkb3u6zboTx1gz+uW6OenBy+fvmtX3Efx7mU3
zd2166NovBZO+54T9nxz165lkb1w2h9i44jsbzD7Rc3+347wuua/34j8f735
71Ki76Vhegonn/1qfqLxVDjtD6zxieyF0/7t2n0F3pdw2h9k4xftj67pGV33
ndpzifARtecb4Xru7FvQ82Xfgp6j8NsM13OkHz1H4nqOxPUci/s9GqYT13Mh
Lv3JUzrzutKZuHSmH+nM60pn+pHOGq/UtyCdhavPQTrTXjoTl87EpTNx6czr
SmfaS2faS2faS2fi0pm4dCYunXld6Ux76cy+BenMfgnpTFw60490Ji6d6Uc6
F/d7NEwnLp2JS2fi0pl8pDNx6Uw/0pl9HdKZfvLxnPUt5OM561vIx/Pf51+G
5+M565fIx3OG5+M5w/PxzH4PxXNmn4/nzD4fzxnPfDxnfvLxnOH5eM785OM5
0ycfzxmfvM5Z30Je56zPIa9zhud1zvC8zpn/vM4ZnteZ/R7SOcPzOmd4XufM
f17nDM/rnOF5nTP/eZ0zPK9z5kc6s29BOhOXzsSlM3HpLED9FdKZ9tKZuHQm
Lp2JS2fi0pl8pDNx6Uw/0pm4dCaOePa+BcSz9zkgnr0vAvHsOOLZccSz44hn
9Ht4PDuOeHYc8ez+Ec+OI54dRzw7jnj26yKeXU/kZ+9bQH72PgrkZ8eRn90P
8rPjyM+OIz+j38Pzs9sjP7s98rPbIz87jvzsOPKz+0d+9r4O5Gf3g/mG9y1g
vhGaDMd8w3HMN7xfAvMN94/5httjvoF+D59vOI75huOYbzhPzDecD+YbjmO+
4X4w33Ac8w33g/mz91Fg/hw+NBzzZ7fH/Nn7HzB/dhzzZ/eD+TP6PXz+7PaY
P7s95s9uj/mz88H82XHMn90P5s+uD+bPbo/1YFhl/QlYD4Y1hmM96H0XWA96
/wPWg95fgfWg22M9iH4PXw/6dbEedHusB90/1oPOB+tBx7EedH2wHnR9sB50
e9RbvC8CdZUww3DUT8K0XD+G1zHcD+oVXpdGXcLr26g/OC6evs9/x9bm+hLq
QmH9SXs37++g/hMmPNehGUedx/sHUOfx/gTUedwedR70S3idx3HUcxxH3cb9
oz7jfFCHCS+ZPeowfr+ow4QNpo/01G+P64cMe+3RrJ6mel23c0e/uPOFrG72
zPBTW4+qW1fa7/gXtvWYn9WvrkjUr242/0eaf93vb+Bf90v/4jfrxZOenFL/
UenQpmG9ul+V1YX0O+/y/U466MGsLtS017Or+o1aWbqy8eVz9n49q9tMTNRt
yub/a+ZfPBeZ/7nmXzzpXzzbnjH+rvrF1VLrEzrMWzksq6scsLPx6Sn1y0oj
+43+5VemZnUV/bb+t4PO6PdJVlc5zfa7bj9vwj7Djt3d5+2Xthn2pVF1H5Za
XtLz3adu3N3XRyOen3js4ikflm67auYjb0/d3eft9134/vl1/VeUWl1/6iXt
t+/uOmxI1FXaGf82xl86HAj+0kH8Wxl/xSf5Kz7Fv5XxV3yK/0jjr3w12vi3
NP7S+b7m+GksHdqMZ3WV2c118vdKcyafWe46oKPrvLm5Pr2kdOmW8w457tGO
rrN+W/e8+PazNnZ0ncc9tGhHv1EflMbe8JPqwO92cp1n9uvSdVTd0tKJU679
7p2jO7nOb3/cp+/iKUtLy7cOHfPYik4n5PNhXFe53/jXGX/pPAf8pbP4/9j4
S2fyl87kL53JXzq/A/7Sef/m5/6X0k9PfqWpR6f2rnNt33JBqeekK+986ar2
rnPtOf61tHb/Lvv1fb296zzR9mPH/mzS/8w/bDfXWb/nb/r3E8++azfXuUPz
/ua7pS9e8Ok7jSt3c51779v/rLr+i0p/mvdY/WX9svrVRtQ3pPOB4C+dTzP+
Rxt/6Uz+0pn8pfO74C+dxf9Lxl86Hwv+0vmUZj5zSqd869qnv/1ma9S955b2
eeGtLlN7t3GdOzb7f63UeNzR1/V6oo3r/BPb335y1m/+MrlDW9d5bnNc/W/p
6n6f9OwxuK3rrN+j3/hhw7OL2rrOs5rj5K3SznNmbO/eN6tfNVm94g7UVU43
/gOMv3R+2vjvbfyls/gvNv7SWfzHGn/p/Ar4S2fx72X8pXPZ+H9m/KXzB838
R5XeHN3ntb8NbIH61ZjS44eNHLXh3ayuck0zn4mlwTPm/PCjk1q6zlusX+C7
Z7X72vuTW7rOzzXf75TSXitPXr+wayvXeWCzn2ml6oi7/vjnu1u5zvqd/IX5
t87d3sp1zv9mdZU2T9b4v2X8pfM24/+E8ZfOg4z/dcZfOpO/dH4W/KVzvfFf
Zvyl8zfBXzrXGd8HG6/8bHDH7ViHTgvHt1t37yXLt/v48bvadcOSwwcdeuaM
Tz2vrbT+i1vO2/yHPg07fN5+bu2+wkEjh/brMXinx0Ht+Y4JM5/+ZFHXAZ/5
vH1B7bmHixeOqN+z2y6fr66xesVO1FX0+6jxl84Xgb90Hgv+0ln8bzb+0vkC
8JfOS8Df49n4X2L8pXMtn78VOpw9suO4Gze7zl2N70MX93tjzClbXOeZtfco
dL9299GP7Pex63yJ9bNMG1E5t2Htx65zm9p7Gk79xQMH3PfyVtf597X3OjQ+
cH717nv+5jr3q+WBUP+7g5/6+Y+2uc5rUd+QvjOMfyfj7/MN+33Q+Etn8pfO
5C+d2xr/AcZfOov/e8ZfOp9k/Acaf+l8TC1vhzc+uLX/VUtWu87ta3k+TPrl
Xg//6vy1rrP4ju41dv2zi9a5zuOsP2jw0p593jp3g+t8Y23cCd+Yu+y1G6/e
6DrXxoUF4cGHvrn5F99ocp33q41rodN1N+z/8Kom1/lSq1dsQV2lp/FfYPyl
bzvwF2/9jjL+0ln8rzf+0vkm8JfO4v+Q8ZfO+4K/dLZ5VBhUVzf0tss+cJ1L
tXlL2NStz9YVzyx1nZ+qzXPC9YddOHTA1qrrLL6bug/f+vx3lrvOG2vzqDD4
XxuGfvlnH7rOs2rzrrD5iD9sHfHGCtd5VG2eFoYcVRla/fJK13md1Ss+Ql1l
ofEfYvyl8wzjv9n4S1/xH2z8xZv8pXMT+Etn8d9i/KXzr43/9cbf58+1eXVo
umLsujmHv+k6D6/Nw0PTxB1f6Nuj4jr/uDZvD00bzu4168gFrvOp1r+2/qhn
/iMcvdB1Ft+1/9n2lpd7vuM61+aTy8KaaRc8+e1jFrnOtm4Ka3b9Yd7U3o2u
83irV2xAXWWU8d9q/KXzTcZ/k/GXzuK/0fhLX/IXb/KXzuK/zvhL5zbGf7Xx
l87fnzdiaP3i1WHFV/e8e97Fk13nWj5ZHYZ9+nxdr4V/dJ0Pqv/iEYunrArt
3ztr+thTpqNeuibMRV3ldPO/yfxLh17mf4T5lw7y38n8i2fHI/a9d0r9hvCr
/36/+7zfXuM81dezYviSv+M3O8/Ff53Uv67/+tCiYcVF52y+03l2tTrDP/7q
enxW9+hg/v9k/sVT/j81/+K5yPx3Nv/gWdp/t573nLctqw+YzqUetzwwu+nS
rI6hvqbynlftP3ljhpv+pbpBi04/vU9W37D7Kl351ccmdF6V4aZb6SsXH7Bo
wgFZv9Ar6CcUPjuBd0A/v/D2wPUeNRqfnxgf4U9bnWRfq5MI7wqenvdQr9D7
uNn0mW36CB+N+ozw3qbb10w34e+gTqL3uhOeF+Ik6ptiPUo4ny/eC687+frF
6jl1Vs9BHDofvEfuH/Hp8YP3y+MHcevPC++dPxflH/aj/n84z4OkcOWvRsSz
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
UYeM4k1/p+KEcft/BiRePQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1mgf8VtMfx597zzmPVIRKKO29VCJaKquIyMxokRYlaRhFlDIqI4TsmRGi
bBHJJiRZDVtClD3+74/P/b9enb7v5zz3eZ77u/ec7/h8b73Bo/uOykul0qWh
VOJf6ST+W4/dwuStjNHw6qxUuhs+E14D3wWPhT+F58Pj4XXwPfA4eC18CzwK
/gC+F54Ar4dvhk+DV8G3wafDH8J3wmfAn8CXwsfCL8Dj4H3hB+A74DHwx/CZ
cA/4fngSfBC8CD4X7gU/Co+Fu8P3wZfB/eAX4ZvgU+H34RvhkfBKeAijP+Mf
Xh+K/RO7LeMyrkkz7OBYKu3P/DdwYpzM/BfYX/mOA5jfAJcZQ5j/Cvs781cx
BsGv8f5M5pvrGkdf76bwIPgGjhkGv8sx05lvCA9gfhbcQr8DXwQ3gPvDM+BG
8EB4KlwPPpjvmAbXh09k/kJeHw4/xXdOhfvCT8PHwR3gW+HP4Ofg5tjPGc/D
LXQuvDeAUZfRh1FmvMd74/j+inBL/T72S+a2ZxwGV2CsLM5D53MJr9fDS+Bm
2LWMZ+Am2C6c37Pwm9g9GY/Bz2LX5Z5vit2D14t1ztiPef0k3AD7EeMJuD42
8hs540VeN8Z+jd2B8TfvVcUewXkOZv4Exue8nsTrneD9gucaZF7rx2B3ZHwM
N9R1wW7HmMxxu/C6J/Y8Ri24N/Z8Rm34MOzR2GqMjzj+KOwOjA/h8bxXGW6D
/Sh6zRyB/VPnDZ/Fe//mXkdnwwfBdeGL4X1zX9cz4QMZG+GtGBP4rm153R47
kbEd3BE7gvED71fAjmRsgrfBHsL7v4v1XcH3qCn2eU7gZeYOwL7AeAU+EPsg
owb8B/YRxs7wX9j+yetW6/dhXu8E/4k9nPPcDZ7L9w4vzmFr7NjgNdMY+070
uuqGfTt6ve2DXcZ4Fe6JHZW8TrrCq3ROcA/sGfJJfE9D7Hu8Xsp8d2xffrcN
fB3vHQG3ha+H+8F7wrfACzmuidYhnz0meV9of9wfvT61b/ol7yntrReZfwru
iH2R77lCfzvfczy8F3yb/Fj0PbqA4++B68AXwos1j+3C5j8h2VfIZ5yavJ61
3h+N3u/a9w/BjXWv4dOD/Uwt7MvM743tyveMwv7KfDXs6OD7uFPwtdM1PIPv
Pjt4vXXGzo9eM5uxp3HOHeE7eW9kcf63w3L0neC74FPhveE7tNfhlvC18FG5
r8lM+AH4HPgL+Mjc1/Ay+BS4PXwTfDLcDp4Hzw7+niGcQ+/M519Z/q64Rzfo
dznmZ7gKNtMegGvrMxyzO/ZG5k7jvS3yLcH3V/frUuaPzu0bZ8HH5PaBs+Xz
g/dvN+xJ2BOL/T4CO5BRj3FftG/Ygh0a7KsV8E4J3pt/ye8F77WIXcFxb8GH
YN/V2oUPxa5krID7aF/k9s/X6Ddz75GrizWje32VfE/u9TAHXgCfC38JnxPs
N7pqPTA/mfmvef0gPAn+Cl4GXyl/lnn/aB/14vjO0b70da1x1sohHFeZ9dBG
zPvva33BBzBfkfnW8B7Mv8R8luzbpvD63eBYfJb2XXCsPwe+n89dAv/M7zbj
s4fyepvkz+ra5tjNjDlFfAsc87ziNHPnMHrnjkE/M7pzfGSuYdk+rhIcku+L
5v9lLGR+H+xfjNvhzthHiz34p+4dfDH8E/wKfLf8M/ZpxvW6jdhXGfdozWCX
Mm6WL1LcYMyFs9z7+la4EvYFxi1wRewjjMvl9/j+d+AH4Z2x7zIegnfJnXtM
gTdwzDz4bPgzxUX4Ybgm9inGdXCOfY0xX/EIu4KxQPsX+zrjXrhq7jWmePRj
scYUazYVa0yx5iddQ67Fldpv2F8Z1yp+Y39iXKE9gy2XfV0OgLcwrlb8xG5V
9nU5EP6FcY38I7ZC2efXE97EuFx7GPsDY5Z8KzaWfR33030v+zp2h79nzJTf
x/7BuF6+BvsbY658DfZHxmzteezvjOvka7A78z2tWGdD4Z3gZvAQuBbcXb4Q
3qHsXKEvvD28RnkMXLXs/OAIeGv4bbhXcvxSnP02Oq4pP/mmiC+KlRuw1crO
RY7U2i87hzgMrgJ/CPeBd4X3D/ar1cvOjY6CK5e9DnrDlcpeHwfDFcu+rwdp
zSbncBfqN5lfDR/K3DbwB/Ah8Oma474/xjmN1hy8GB6j34cfh7+KjpvPYH/I
nU/tqXXF60XwE8ojeL0cboP9Pndetgf26+j4vkQ5FXbrzDH+R957H9tBxzBe
gnfDfhYdU47DPsD4vuR8cqvgXONcPr8zXBM+NtiXKDeYzHxF+Vv46GDfo1h2
OfM1gv39RXAm/wYfqe/j799d+SLf/2R0zqa/5bFo/3+Kcrxon3yk4jOf2VXn
ht07OvdrC3eCn4ZfwXZgPF7y+tkrOifUulLuVsrs477i3JZhW2Mf55hWxW/t
qlwO7of9PDr+Ho+tGZwrTefzi3j9VxHL6gTXATOYT3B1+CitFcW/zPVC4rfb
wV9E5zHKZ7SeQ3BNcA7vtdCeLvk6Dtd+xT7E3Fnw0fBzmWNld/heeBi8P/yg
4kXummgp/EFwTSHfezbjGPj5zHWT6oh34MFwN3i+YiDcFb4bPkNrX2sJnqg1
Di+BB8kHw/fAE7RX4GeL/KEnvBAeIV8CP5y5tlJ98SR8MXwK/DZ8nnw//BI8
GT4BXga3ZGwuOXdsBf9Scn6p/af7WA9blb+rEjyN99dH5w/9ouOPcrkrmK+u
nBw+JnifqXaom3ufqV6og72IcRL8BsefD/eHl8NT4AHwy/AF8ECtpcy1kq7n
q/AMeAj8FvxJdD5wFHY68yfDbzJ/CTwUXgE/B8+Cf4NfUjyE/9Heg6/WWtS1
117KnEOMz5yH/Mb8t4oTWtu5c33lb79oLSTnI+Ow3zLXJPNempi5rvkj935t
lnkfbspdc3TOHeeVxzaCf4jOi97C/pS7RumiWKlcMfM+2hidQ74Wvce01xrK
jzO3TeYcfYPiFrYdtov2eebc6LjkXGkC9jteN828N/oE50iDtU6Zq5+5Xjol
c11ZJ3P9oLVwdHTNoNrh0+hc+u+S99FfRQ1yDPZYFUocNx57OHZtyfWX8otd
FbcL36S9VYn5vuG/S/+fjjGW+aGZ69nhmc9JOaFyKeVULXPnTUu1NrUPeK9m
5r9hM68/we6D3ch4E26P/Y7xBrw79g/51Mw+ZUByLn92sv9ok9mXtS3utfL7
kck5ez0cwy/R97RvcU86Zj5O+sG+mTWZ/sH3oQP2xOQ64Kxk3ymfU7vwlfod
1SEjM+sYbbXOM1/D7Zg/PrmemKh4Lb+Y2b9PzbyndgjOj7U+D9f+i153qlt/
i7638s+63t2Kaz4oeF0fhB0YvC4OKGrQnhxTAftz7tq6q9ZtdN77RnT80PrV
/R8QfG17KA9NzuUbcH2qcmynzOtPWkuPzPf19+jPam+en3ktbRtc/2gfqYYe
XKzDQ4NrN+kV0idOS8676/P91fls58z3UvVgzvyk5JrxH449N7nWU1xR7qqC
XddZ8eLg6M9pf+0bHWsUu3tH/y1jkmuQQcX6l+YgPSLTe8X8upJzatUt6+F/
o9eR4rJqoIMUb0vOZY5krNZc9PXQNfwn+h7KT/aKXjvay/tFx3rlA39H399j
o+ttraURyeej31WtNKSIZdp7A4q9+m7Jeejxmfdbn//XPsG1kO77mXzPqcXf
pr9rdLHH9dmTinn9XaOKNVml5Jy3H+PTkusrrZmxyfnvcYw1JdcIWl+HRZ+X
zu//cVavT4j+viHFOQ8r9rj0gv2jc6RTkvdA/+KYOsW56RjlIMpJXixZ+5AG
MjxZE1HeNCz5/owp/Jc+N7rwIao/VYeWg+uY0wt/soDP/lhyLaYaX7FedZNq
VNWqlTn+uuDaUDViheS9q79Fa+C04l5snXxe5eIcRhTfr79jVHEdBhbztYv5
kcW11fXW/WhQrK/hxRqbGxxDd+A7b4Fbw1VVTwTnb9urDgjWN6qo5giuu1V/
H6u4At+cuXbvhd265LxO11znqRz8CMYHxfoZVlznK4J1km2T9QXpA/WDa2bV
zrXh24L1AeU+NwdrStU4/tZgnad68TvDius/Lbn+3y453+/LWFWyTrULn5mS
rMPsCJ+vmjX4/rbDnhB8f1vLHwavk+bKKaJrSdVn20XXg/vz2SbwXSXn8FXg
2SXXRNtH16eqKXeOrvtUTz2bnBOoFq4RXXuq/mocXbeqLlDt8gBcA3tvsg6u
mlc19E3MV8DWi65VVV/Wia5nVXcsY7xV1D51o2tY1Sa1oz+remQn+NqS60HV
0+fD33KNHg/O3+rLpwXrwDvDdwfrZjvB84P1IuV9D8Jd4F10bsF5Y1P44eDc
cld4YXC+qnxwvOoz+UDd92Ttvjb2meB6pxH8WHDeWw9eHJzf1oWfCM4zG8CL
4P20X3U94d5wQ9WSwXV3V3hJcD3VWNc7uIZqAi8IznVrqj5VnIS7JGsMune/
Z9YNpG9szny/dd+j8lDGNPhH5p9QHglvgt+E52k/5r72N2rtK/4zbpBPyq2f
SweopZyUMRX+gc8ugi+AN8LL4Tny8fASeCb8K7wYvhD+Hn4Wvgz+JbMGMgX+
Dn4YPg/+Bn4GvhTeAn8BL9S9wH7JeER7Cru0qJtUP2XR36Pvk/is9dCNa9KB
z1fKvDcWJf+GdJgK0XpLD9Xa8IySa/+K0ddN1+8Txn3am9hVjDvkN7DvM27X
fsc+V9Rlqs8GJefq0vtPSs75VcN9ynH3wzvm1vmljVTDbgru9Uh3Wcm4Tb40
937QvqiMTWXrONqnDwXXL7XgaYr92svKHXLHTOnke+f2E9LkO+b2VdLSW0Xv
R2kO0htUYzbGto7WbaQ5vJp8rtIidovWiKQn7JW7vlZP5JpgXXS48oLgvtIE
xdvgukz12ZxgvXSoYjU8HB6vuhY+Dh4nfxPsb2vw/U8F963OZL5NtB4lXaJt
9HrTuutW5KjqawzNvXcW8Ldvxdgjcx5wWbJuuyN2cLI2X4frd3JyT6AuPDBZ
a68NJz7XPnNOMylzHqf+woWZazRps+cVcUC9hu6547l6JVcV/lyx4+pgXXeY
1mCRy0j77ZE7zquf8kJRz6oOm5C5P6Le2bjM+a/6a0uD600dsyK4fzeRAx8p
5uV/pEdqzXzE594LrvWkjzWN1gal87wUXPO2VIwN9lfN4eXBNXgr+djg+rcF
/HJwfd0a3gCPgDvBnwfXgNK+5iT32JppjQTXidLo5iXX6Dqvj4NrUulva4Nr
TGll64NrZ+ljHwavW2l3rwTX+1oz7wTXsNLo3g+uW6UH3l74XsXN6wu/rbzi
juDe6Cj+7huCdf4R8I3B+v+pihVwZ/g0eF5wv2AkfGdwv3U0fF9wL/V07Q/4
YPgM5X3BNb70vTcVR0vWA18PrvelHzaL1j+lszWP3tfa348G9yLHMnd/cN92
jN4v/L/iTl62lir/szK4j3w2x/yZrL3q+n+QrEcofq1O1tQUpxYm6+xXcPyH
ybqbYsHDyf2My5n/KFl3k694P1ln0V57J1krUV60IrlXqnzpvWQ9RXnIqmTt
RrHyoeTe9mzl4MXfqHhyaXI/Q9dwVVEvSZO/PLlvrb99VnKfZkzhD5vwd9Yo
u8+l2lO16ZXJ/Wzt/dnJ/Rtd/0uS+y66v+8mazfKly5O7uXons5M7vHo3s1I
7lXovk9P7lXoXn+crAcpjn+arPso5j6THJ9uUD4bHHcuhn8OjmWXyL8l9/+U
1z2VHJOuU8xJjp1z4ceTY+E18OLkWDgHfjS553EV/Fhy/LtasSI5Bl8rf5gc
C6/XHk/ui1ypuiq5/6cc9ZtkrUf796tkTUf5yRfJuo9ygy+TdR/lBp8n61PK
Q9Yk61/KPT5L1qqUY7yd3EdUPvxTcNxUDFqfrMEpP1mbrNkph1mXrMEpp1qS
3LOZx3lelNz70b47Dz4s9/MDioONVPdyr2tFx9BblMcl6+fna88ma/7nwrcl
a+wXKD9N1vzVo5mbrLGrd/Ntsj4lf3Vrst4+RTlpsravvXNtsrYvn9kwOk+4
HdsgOn+4TTlmcn/hPLhdtDai+LJ7tDZyF7Z9dH/2bq3r6Nh9K7Z+EY8Unzcm
a2Tymd8l64Pyqzcl9yAmR9fn60t+3qSR1oSuc7R+Jx2vAfMbkvU4+erJjD65
n5d4IPl5lMv0+8nPo1wa3cOVZiUdq3ERx/fUmk3uXyrmLmdUydwL2y+3pqDn
OPRcgnpqnRTjkvugilnqTe/DXE3u19TkHqTi+1XJz50oXqvP20U1hHoIubUb
PQNydfJzJ4rv1yT3TZQP6BkA9RzVe5QeIV1CeuCC5GdoZiq/SH62ZpbWSPLz
Mdp385Ofy9F+vCf5OZsZqi2Sn62ZHt1H1rMB30X34vRchDTDO5Ofd5mmHCP5
OZiL4OeStcsb4c3Buaiu5/PJOetN0f0I9SbU21ffQbWd+vPS/NVHUI9avQnl
HPJl0mmlMakGC9F9TO199SCUW2gPSP9XLdii7F6DdDTVb+oR6P63LLt/ob6G
nl/Io2su5bH/Buuu8iHSjaUVq2euGlx1dlM+e2BuHUrPRFSNziG1N9XvUO3e
iGO2ic7t5Wd2VPyDb8ZWi85jdU0qR+f58m/qEahfoL69eiXSLfXsQ/XoHFjX
Ss+fSLeVfrRDdL6qOlE9BdW7zfndGK0Vy++pN60182F0z1Q1vTQW9fS1PldH
a2LSlKQtfRD9nIr6sNISpQVJE5KOJk1M2pg0ZOmK0helnUrHk54nzVY6nvQ8
6WDSr6RjqU8hrVs9cPVupOdKC9MzKurLqGdeKbpWUv6vHFJ5pXQm5Y3LStbA
lE+qppYG858WWrKmJd1SOpX0KumQ0qOkS6k5ov6r6hH1WaTTjMGWo/VzxYKt
tH9KjikpuoZSTJFPVR9BuqV6iep5qZbvlVs703ME0mmlIWp/rg5+3kx+dWNw
L17rX9q4NHA9T/F9cP9d+0i6pbRK9eql/UorlC+Q3q79dZZyrmDW8zjS1eU/
div6mdLJpWf+ENzf1z7dElwbynf9Glxjao+/llzLycf+ElyHyg+8nIr6Cn49
ucaT730luQa7E/6N46eXnIcsT0UNJn+YXLvKP8snyjdKA3khuXZV3Fma3KvQ
mn8pFbUWvHuw5qhnjuQz5Udbla2Hq6egZy6UoyhXkfZ7YLB+p2em/g6uYZWD
/RNc5yp2bxtdOyuvODhYW9RzVbsF60d6Zqpnbo1Jz4n8FVznKmeT71f/SDq2
esiqW6XhtAjWgPRsWovomld55je8nghPjd5L2lN6buuT4OcMJ0X3G7R/9YzE
vsG6pJ4R+yi4jlDerp6wejfStNcEP/c4udiDil+KY98FPycjv/pV8LOOitdf
BD8bqVi8Lvj5ScXWz4Kfk1Ssbxndr9F9vDG5d69z61D2dZEOqeey5MfW6L4U
fk19k0+SNRdpLCuTaz/Vd3uWfV2kf+p5LV3Ptdh2RXxSr2GPsveJNGE966X9
sg7bvux7oJ7L18m1tOqavcte69KNO5Z9vaRvv5WsD0qL61T2OpCWu1fZa0ia
atuyY616Cn8nP88hTaZz2etAGvI/yc+dSNv5H/+4GqE=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmnkcTdUXxe8999xHGUMJKVMlNCDKVDSgSaVZKaRBJSWhEZFKczRqUqTh
lyiN0qBZKk0kkTRRKc1zfutrnT/O5511znn33XfvOXuvvfZuOmhY3zNDlmWV
IsuiPo8VuCfPst3Uv1Vjh5VZNkv9BhqvW8myicL3an53jd2m+flqx6l/seY/
19w5+nxG84do7FHNXaax6cKdhKcKH6i2lfAq4b34jn50Z+GjNX6e1l6r9rjw
/pr/n8a66TfP1ue/wk9o7Wq1nTR/lMZGa+0FalcKN2W95r5Q20X4GM2fr7mL
1W4Q3p770dxFwlcLNxc+Rv291K5Q/2eNBf1WD+HLhX8SzoUvEZ6qfluNTdY1
/1abxG/p3v/T3AS1OzTfXmM3am688O3C7YSnCH/Dfah/u9b/Xfqe62ns98z/
ZbLG39T6RWq/lH4GW2r+z8zPpoPaK+p/rXVtdD+Ha/4R4YbC9YRXaH4HffcI
fWeU5i5Uu0q4mdYcVfqZrFH/wOBn9YlwS80frvUjhY9Qm635RprfvOJnthX/
M/OzXK62vdYfprFzNXeA1k0SbqL5BzU3QmOL1R+o+a76/jXCczW/n8Ye0lhv
tYbCnwr30HdPD94/7IcHNbdI15ivfkuNN9T33xZ+TngH4UbCS3S9u7W+o8Zm
av2PamPVv1fz/2jubLW3hU/QeGet/6j0/mV/PqCxs4SfV7+V1m+l+aXC09L+
vl/zy4UfEO4uPEd4jvAvud8x7/pT3U9r4frCj6i/TPMzhfcQnqX5d9P+apnO
y2Lh69N+u0X4YOH71a+j36+l3z8xeD+xP+7V/Hpds5vwO8Lvqn8I96N+Xa2r
rfU/amyP3M/4ffV/UttT+F3hD9WPWt9D+D3hQv2P+T3hPYVn6/r7C9+p/ia6
3qa63i4aq675jzTWSWOnav519Y/T+G6av1x4huY7s2fZh4XPx0Na+y/X129u
p/k6jKl/hcbuE+4ifIfWBuEWwrWFc86a2mPCvdP7vk54nvChwo9hX3Td24R3
Eb5BeLbmfxSeKPy78DL9xrbCm/E+1e+i9qb63+h7O+p+zyn97AZobZf0fB9M
7/MejQ3R/Bvq91d/d80fIHyX8KZaV034Ss6I1u+lselas6taTeFlwp21pq/m
H1Z/S/XraP2B7EfhasLVhffR+i21fqXGumtsuOZfUL+1+o01f5rwQuHjta6T
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
           "]], 
          Polygon3DBox[CompressedData["
1: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
A/s/Opb4ig==
           "]], 
          Polygon3DBox[{{1222, 821, 549, 550, 822, 1223}, {1292, 589, 400, 
           399, 780, 1198}}]},
         Annotation[#, "Charting`Private`Tag$3101#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlLXFEYBuAzLnGJJlbBylGDWBkIxH1LptXCTKndFILRRKOIcUNEojYW
NtqJjemCjYKgpIldQMF9SaKChZI/IBbB52LxzvOeuffMd7hzS1K9yU+xEMKc
9ChRT/m45kdOpodQoEcXpvS4Os9XXGYjV9nKH+zgDnflg/6Pw7znLHMyQlhk
Ib+xnOvcZIYZ29E9mSEM6MXSK/u+62RcKtNCOLCu4iGrecQaHrOWJ6zjKevZ
IGd6I8/ZxN9s5h++5V++4wUTvOR7Zy4187NcWXexRPqkzXn3or16Qv+pv+Ea
y7jCF1xgFmd45/e+8JY30qX/Yju32MLvbOASK7hhb8yMIj3bc+nX/+vRn/ac
3Xwts/LMeob5nGYev/Ipp5jLSeZwgtkc55hk6aN8whEaFYZpfBii44RBejQh
afEy9vi+PAD3uT6R
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{897, 1281, 1282, 1240, 579, 1268, 1193, 1241, 1585, 1105, 
       1269, 1195, 1242, 1586, 1106, 1270, 1366, 1397, 1243, 1107, 1271, 1368,
        1398, 1244, 1108, 1272, 1370, 1399, 1245, 1109, 1273, 777, 1246, 1290,
        1574, 1274, 1199, 1247, 1587, 1110, 1275, 1201, 1248, 1588, 1111, 
       1276, 1203, 1249, 1589, 1112, 1277, 1371, 1400, 1250, 1113, 1278, 1373,
        1401, 1251, 1114, 1279, 1375, 1402, 1252, 1115, 1280, 1597, 1206, 
       1253, 1285, 1116, 1288}], 
      Line3DBox[{899, 1192, 1291, 1572, 898, 1194, 587, 900, 1196, 1403, 1117,
        901, 1367, 1404, 1118, 902, 1369, 1405, 1119, 903, 1573, 1197, 1120, 
       904, 1576, 1198, 1292, 1575, 905, 1200, 1293, 1577, 906, 1202, 1406, 
       1121, 907, 1204, 1407, 1122, 908, 1372, 1408, 1123, 909, 1374, 1409, 
       1124, 910, 1578, 1205, 1125, 911, 1579, 1207, 1126, 1208}], 
      Line3DBox[{913, 1294, 1485, 912, 1295, 1486, 914, 595, 915, 1410, 1127, 
       916, 1411, 1128, 917, 1412, 1129, 918, 1413, 1296, 1487, 919, 1297, 
       1488, 920, 1298, 1489, 921, 603, 922, 1414, 1130, 923, 1415, 1131, 924,
        1416, 1132, 925, 1417, 1133, 926}], 
      Line3DBox[{928, 1299, 1490, 927, 1300, 1491, 929, 1301, 1492, 930, 611, 
       931, 1418, 1134, 932, 1419, 1135, 933, 1420, 1302, 1493, 934, 1303, 
       1494, 935, 1304, 1495, 936, 1305, 1496, 937, 619, 938, 1421, 1136, 939,
        1422, 1137, 940, 1423, 1138, 941}], 
      Line3DBox[{943, 1306, 1497, 942, 1307, 1498, 944, 1308, 1499, 945, 1309,
        1500, 946, 627, 947, 1424, 1139, 948, 1425, 1310, 1501, 949, 1311, 
       1502, 950, 1312, 1503, 951, 1313, 1504, 952, 1314, 1505, 953, 1315, 
       1506, 954, 1426, 1140, 955, 1427, 1141, 956}], 
      Line3DBox[{958, 1316, 1507, 957, 1317, 1508, 959, 1318, 1509, 960, 1319,
        1510, 961, 1320, 1511, 962, 643, 963, 1428, 1321, 1512, 964, 1322, 
       1513, 965, 1323, 1514, 966, 1324, 1515, 967, 1325, 1516, 968, 1326, 
       1517, 969, 651, 970, 1429, 1142, 971}], 
      Line3DBox[{975, 1430, 1143, 973, 1431, 1144, 977, 1432, 1145, 979, 1433,
        1146, 981, 1434, 1147, 983, 1435, 1148, 985, 1436, 660, 987, 1437, 
       1149, 989, 1438, 1150, 991, 1439, 1151, 993, 1440, 1152, 995, 1441, 
       1153, 997, 1442, 1154, 999, 1444, 1156, 1001}], 
      Line3DBox[{1000, 1155, 1443, 998, 1530, 1338, 996, 1529, 1337, 994, 
       1528, 1336, 992, 1527, 1335, 990, 1526, 1334, 988, 1525, 1333, 986, 
       1524, 659, 984, 1523, 1332, 982, 1522, 1331, 980, 1521, 1330, 978, 
       1520, 1329, 976, 1519, 1328, 972, 1518, 1327, 974}], 
      Line3DBox[{1003, 1339, 1531, 1002, 1445, 1157, 1004, 1446, 1158, 1005, 
       1447, 1159, 1006, 1448, 1160, 1007, 1449, 1161, 1008, 1450, 1340, 1532,
        1009, 676, 1010, 1451, 1162, 1011, 1452, 1163, 1012, 1453, 1164, 1013,
        1454, 1165, 1014, 1455, 1166, 1015, 1456, 1167, 1016}], 
      Line3DBox[{1018, 1341, 1533, 1017, 1342, 1534, 1019, 1457, 1168, 1020, 
       1458, 1169, 1021, 1459, 1170, 1022, 1460, 1171, 1023, 1461, 1343, 1535,
        1024, 1344, 1536, 1025, 692, 1026, 1462, 1172, 1027, 1463, 1173, 1028,
        1464, 1174, 1029, 1465, 1175, 1030, 1466, 1176, 1031}], 
      Line3DBox[{1033, 1345, 1537, 1032, 1346, 1538, 1034, 700, 1035, 1467, 
       1177, 1036, 1468, 1178, 1037, 1469, 1179, 1038, 1470, 1347, 1539, 1039,
        1348, 1540, 1040, 1349, 1541, 1041, 708, 1042, 1471, 1180, 1043, 1472,
        1181, 1044, 1473, 1182, 1045, 1474, 1183, 1046}], 
      Line3DBox[{1048, 1350, 1542, 1047, 1351, 1543, 1049, 1352, 1544, 1050, 
       716, 1051, 1475, 1184, 1052, 1476, 1185, 1053, 1477, 1353, 1545, 1054, 
       1354, 1546, 1055, 1355, 1547, 1056, 1356, 1548, 1057, 724, 1058, 1478, 
       1186, 1059, 1479, 1187, 1060, 1480, 1188, 1061}], 
      Line3DBox[{1063, 1357, 1549, 1062, 1358, 1550, 1064, 1359, 1551, 1065, 
       1360, 1552, 1066, 732, 1067, 1481, 1189, 1068, 1482, 1361, 1553, 1069, 
       1362, 1554, 1070, 1363, 1555, 1071, 1364, 1556, 1072, 1365, 1557, 1073,
        740, 1074, 1483, 1190, 1075, 1484, 1191, 1076}], 
      Line3DBox[{1090, 1239, 1238, 1584, 1089, 1236, 841, 1088, 1234, 1565, 
       1394, 1087, 1232, 1564, 1392, 1086, 1390, 1563, 1230, 1085, 1388, 1562,
        1228, 1084, 1583, 1226, 1225, 1083, 1581, 1223, 1222, 1582, 1082, 
       1220, 817, 1081, 1218, 1561, 1383, 1080, 1216, 1560, 1381, 1079, 1379, 
       1559, 1214, 1078, 1377, 1558, 1212, 1077, 1580, 1210, 1209, 1211}], 
      Line3DBox[{1104, 1283, 1284, 1267, 847, 1103, 1237, 1266, 1596, 1396, 
       1102, 1235, 1265, 1595, 1395, 1101, 1233, 1264, 1594, 1393, 1100, 1391,
        1571, 1263, 1231, 1099, 1389, 1570, 1262, 1229, 1098, 1387, 1569, 
       1261, 1227, 1097, 1598, 1224, 1260, 1593, 1386, 1096, 1221, 1259, 1592,
        1385, 1095, 1219, 1258, 1591, 1384, 1094, 1217, 1257, 1590, 1382, 
       1093, 1380, 1568, 1256, 1215, 1092, 1378, 1567, 1255, 1213, 1091, 1376,
        1566, 1254, 1287, 1286, 1289}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{373, 759, 868, 580, 1585, 374, 760, 587, 394, 1486, 594, 409,
        1491, 609, 424, 1498, 624, 439, 1508, 639, 454, 1519, 654, 1431, 469, 
       669, 1445, 484, 1534, 684, 499, 1538, 699, 514, 1543, 714, 529, 1550, 
       729, 544, 1558, 805, 744, 559, 1567, 806, 883, 751, 566}], 
      Line3DBox[{375, 761, 869, 581, 1586, 376, 762, 588, 1403, 395, 595, 410,
        1492, 610, 425, 1499, 625, 440, 1509, 640, 455, 1520, 655, 1432, 470, 
       670, 1446, 485, 685, 1457, 500, 700, 515, 1544, 715, 530, 1551, 730, 
       545, 1559, 807, 745, 560, 1568, 808, 884, 752, 567}], 
      Line3DBox[{377, 763, 870, 764, 1397, 851, 765, 766, 1404, 396, 596, 
       1410, 411, 611, 426, 1500, 626, 441, 1510, 641, 456, 1521, 656, 1433, 
       471, 671, 1447, 486, 686, 1458, 501, 701, 1467, 516, 716, 531, 1552, 
       731, 546, 1560, 809, 810, 859, 1590, 811, 885, 812, 568}], 
      Line3DBox[{378, 767, 871, 768, 1398, 852, 769, 770, 1405, 397, 597, 
       1411, 412, 612, 1418, 427, 627, 442, 1511, 642, 457, 1522, 657, 1434, 
       472, 672, 1448, 487, 687, 1459, 502, 702, 1468, 517, 717, 1475, 532, 
       732, 547, 1561, 813, 814, 860, 1591, 815, 886, 816, 569}], 
      Line3DBox[{379, 771, 872, 772, 1399, 853, 773, 1573, 774, 398, 598, 
       1412, 413, 613, 1419, 428, 628, 1424, 443, 643, 458, 1523, 658, 1435, 
       473, 673, 1449, 488, 688, 1460, 503, 703, 1469, 518, 718, 1476, 533, 
       733, 1481, 548, 817, 818, 861, 1592, 819, 887, 820, 570}], 
      Line3DBox[{380, 775, 873, 777, 854, 778, 1576, 780, 399, 599, 1413, 414,
        614, 1420, 429, 629, 1425, 444, 644, 1428, 459, 659, 1436, 474, 674, 
       1450, 489, 689, 1461, 504, 704, 1470, 519, 719, 1477, 534, 734, 1482, 
       549, 821, 1582, 823, 862, 1593, 824, 888, 826, 571}], 
      Line3DBox[{383, 781, 875, 583, 1587, 384, 782, 1577, 590, 401, 1488, 
       601, 416, 1494, 616, 431, 1502, 631, 446, 1513, 646, 461, 1525, 661, 
       1437, 476, 676, 491, 1536, 691, 506, 1540, 706, 521, 1546, 721, 536, 
       1554, 736, 551, 827, 1583, 747, 562, 1569, 828, 890, 754, 573}], 
      Line3DBox[{385, 783, 876, 584, 1588, 386, 784, 591, 1406, 402, 1489, 
       602, 417, 1495, 617, 432, 1503, 632, 447, 1514, 647, 462, 1526, 662, 
       1438, 477, 677, 1451, 492, 692, 507, 1541, 707, 522, 1547, 722, 537, 
       1555, 737, 552, 1562, 829, 748, 563, 1570, 830, 891, 755, 574}], 
      Line3DBox[{387, 785, 877, 585, 1589, 388, 786, 592, 1407, 403, 603, 418,
        1496, 618, 433, 1504, 633, 448, 1515, 648, 463, 1527, 663, 1439, 478, 
       678, 1452, 493, 693, 1462, 508, 708, 523, 1548, 723, 538, 1556, 738, 
       553, 1563, 831, 749, 564, 1571, 832, 892, 756, 575}], 
      Line3DBox[{389, 787, 878, 788, 1400, 855, 789, 790, 1408, 404, 604, 
       1414, 419, 619, 434, 1505, 634, 449, 1516, 649, 464, 1528, 664, 1440, 
       479, 679, 1453, 494, 694, 1463, 509, 709, 1471, 524, 724, 539, 1557, 
       739, 554, 1564, 833, 834, 863, 1594, 835, 893, 836, 576}], 
      Line3DBox[{390, 791, 879, 792, 1401, 856, 793, 794, 1409, 405, 605, 
       1415, 420, 620, 1421, 435, 1506, 635, 450, 1517, 650, 465, 1529, 665, 
       1441, 480, 680, 1454, 495, 695, 1464, 510, 710, 1472, 525, 725, 1478, 
       540, 740, 555, 1565, 837, 838, 864, 1595, 839, 894, 840, 577}], 
      Line3DBox[{391, 795, 880, 796, 1402, 857, 797, 1578, 798, 406, 606, 
       1416, 421, 621, 1422, 436, 636, 1426, 451, 651, 466, 1530, 666, 1442, 
       481, 681, 1455, 496, 696, 1465, 511, 711, 1473, 526, 726, 1479, 541, 
       741, 1483, 556, 841, 842, 865, 1596, 843, 895, 844, 578}], 
      Line3DBox[{392, 799, 881, 1597, 800, 858, 801, 1579, 802, 407, 607, 
       1417, 422, 622, 1423, 437, 637, 1427, 452, 652, 1429, 467, 667, 1443, 
       1444, 482, 682, 1456, 497, 697, 1466, 512, 712, 1474, 527, 727, 1480, 
       542, 742, 1484, 557, 845, 1584, 846, 866, 847, 896, 848, 849}], 
      Line3DBox[{565, 750, 882, 804, 1566, 558, 743, 1580, 803, 543, 728, 
       1549, 528, 713, 1542, 513, 698, 1537, 498, 683, 1533, 483, 668, 1531, 
       468, 1430, 653, 1518, 453, 638, 1507, 438, 623, 1497, 423, 608, 1490, 
       408, 593, 1485, 393, 586, 1572, 758, 372, 579, 867, 757, 850}], 
      Line3DBox[{572, 753, 889, 1598, 825, 561, 746, 1581, 822, 550, 735, 
       1553, 535, 720, 1545, 520, 705, 1539, 505, 690, 1535, 490, 675, 1532, 
       475, 660, 1524, 460, 645, 1512, 445, 630, 1501, 430, 615, 1493, 415, 
       600, 1487, 400, 589, 1575, 779, 382, 582, 1574, 874, 776, 
       381}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
GIbwWvU3UzH/oIvLzBueD7cgPL1jPcL1UD+FFLUL91eI4/4Ky+Bk1I9x3XoS
wnnH3PNrP+bLglQjsD17KMLV3PajcfmRG2ErUof2SfK3Id4Qhv5n51/74er7
u3XxfwP7j2Kf77/iE4DjQ+NkPKmgkLKKd0Moux+hqG/BTz9hG4y/xYrHsfB6
SE+OR7jX8E7U57C0x9uSindKjP6HBl5fBKOvw2x8lgm8nkm8Gn1qMHTGj9sA
4PVp4nMG4Q7+M+O6Xs9kv8coxDdm8Nn6NEJZ/NPxIfFpLPxh6PqVYsRHbcEb
DryeyXiWoPtQT0Y/Q1OoURG8/5D4R4QbMvBK9KnJ6OuoR/dnPQZejD6lGTrz
p9UsN1MYytJfIW5F4jNZ+J9Y9P/2/lzHMt+PLPFh0xmA+hbUqJu4P0EO9yfw
PoWZ+AuVAbJACZC4CO6jIHEFpG/MwPvycIbOm4vSr42zOMBe/z3CiymRLn0X
slZkv0d8/nSHZXqmDL4a8jmEof9t5a/nxbsviaeTuAbLfHuwxG0w4gMGXpXe
y2MC1Z9Swv0J23B/wguEqwISX4L6HKQZeCDCNRk6D/ds/rj+gC4Dn8Si47D+
rN+yQ8ZgaF0ywsv2ZCOcvj/n4X6POtzvYY35JgR/GYs+fb39KR7EorOVBV/z
wd/a6oUhY77tVo8q1vMrUN8jlqH+hFDnZag/oURXAfUt3O/cjvAtszwQftzZ
ZtqMLFnwpnYtwmujAxFuwdIf0rg0SClBVZ8att8T4Z9rLyA8CPVpyIApjywQ
LhdYiPCmCcbOiheGgmu4X6IN90vg682KxGtZ+OtZ9Ol40n5asR8r5FeA0e9x
mGW++1PS6iCfjE/lvvR9aVOHMOJ5NcIb5ZlXz96J8sa8Yzr/LMfIS+9G+XkB
aszMMwiXNHFAOC8OQlaNuL8CdNOPMQT9XQSQ/RI3szm76zpUf9UvgepBoqFe
/6rjeHzpDD/9pdi6aC4/2T9wDvYPyD1e+y+89SsvXydM9A+M/dLZfOrLmxtf
lST+hbd/hX0OhdZeZQX/K/0SUt9+rU9fD98IP4KoX6LQmvTPNt/ruC+CjA+t
f7CiqGyZWjVn4Isr8zb71f+zXy7fEfzeqpLjGnPKN3r7z/wn3+urT1sPrCnj
eCl8/7L2+Luf+Eqcv7pH5K/6bTzzCOqP+iy9tKt+c0bPZVA/beFFb6gfP/ep
GGd8ICjD+i5Yf+x9T7GrvSdSPbRMlkx7W8e5KtKyetLdas6+8SOcAvs6gaCv
o+pMfOo4k1pEZPM3v/qpbzVHZY8T9ZaTc3XGzTzXmp/4HJy38cN5GzuePuDH
+texPs2n9f2wfljJ+ccC8Z6A1HcYZfDhYU9jcPx4nZpH8DuO6LPSwZOmlHPS
HvikLfaVB1cFVENm6r/jiA81zx884eVP/drIgmaXtw0c13UBoW1eFZyBu7YO
lF5iTX09Nud856EGztvyjGgn9UpOwYsQXY0YH2qv1RXPPRMaOBzbpteP91dy
VGu0p2Qs0AdLRkWUa/Vr4Og0nBneS7qKU/HheubSW35APDo6JyO7nnPUnl/x
/uYqThPx3gqdV9mcPEL/bbkzGDM/SwP6f290ZRD0H3WiI5QjYg9UOjgLof/R
G8Xu/s4/jZP+/R7xj+j0MQW7Y+WR/zyDllroP3l/RgDXPxWgIY38W17wGQH9
a62atjurfSLlPy8T+f8anaIA/WcEH13yaIY+sF6sMvZzZCPHxaCh/Nq1Eo7T
9/Z9a7Xsgav38kFDgxo5H+8cKBhrV8p58EOvh8pIUyCwX/HmE5dGTkngwSFL
7pZyLs11KD9rakE1HPlQ9kyvkXN/X+RMCc/nnLVL7rur+RpReuY33YFYI8f0
aa9BGs+ecxad26Bz1kQb5EVnd4g1vePMkOQoH/Z9wdFZ/DFQptQZCM1/LDDi
wTtO+V5PmXUVL3AcNH7mVT7gPEnRsDErH81QpEasz0T+bU5+fA79W9SMfjjW
zgWcD1VA/nnHpT/jKT06AfnXmrxMH/qn8XfYfz72L+Szol1C2xhMN1X0gP53
zV2uAf3rGI1RSIgAYMS+NT+g/4KMLRrQf1Dh2zlc/9QSi0R+6D98u5MC9O9V
LS1nYiwLFhS788UJNXGGRSnlvlEt4lwSHJMtNdUWqFlGvVz5tZGzZFTq+2vz
ijjlm04JKgwyBj/Wuaw1r2/kHD5vbzr7WhEnSvutTp9iJ6q44sCQWy8aOWau
DxW+CBZzpm65EbSWAyit7Rxt5YJGjl7tM4spXsWc6Nknro/u7wG+6M5Pc6Ma
OZOCC9QO7SvmRIW17jgylwM2ZZmrupxr5OzucXplem0xp4olr1LzubfTIYUx
QDTmRmcs179/xOC70D8dtzOr7cqh/4s9Vn2F/rMOP+8F/VcntK2B/j36lJtB
/zSf9m+K/S/PlxKwnmoI4j8K6ED/MU1NJtD/187cDc2a9uCJlM0V6F/3aqYS
9P/s1Yk9jXpOVF5qjAr0P//Rh9XQv1llQYNIEqAmbhQamOTYxOm/5Jlp79x/
9mVvNs70fGXTxBlpYLND9R13v3kobomhpBOwUMsrljdvwsfPOEeeJgcYJJpQ
xvYWN5wMmzhm7udTzYY94xjaShbdcXOjxqa09QrQaeIkr0uTNJn6jPv93j9E
KVEDGH69lr1ErYkT/vJ2gHY0N27+t6aM5sbts3vz5xUKTZyWG3cWS56j9x2G
jLzKljblU+t0LME644+K0H+V4XAz6H/anZN39YpMQWm8HfIvEaq0E/qn53W2
Z3YR9D/bYeVK6F96atRUrn/wOHM18l/ooXwZ+qf5pP9bL/U2Gy80A/Zv1XKg
/wKX6knQP83PPxHWCv0PPpMWAv1/vqI2u5G7bzWODV+0awJ3f3qvVc7I5SnH
oLN8RfMBDeq1cvH+uHFNnPJQh94jvZ9yxBOpO1PcdcCyMOdt0d7c+Jw20Z49
9SlH4ojM9LsdGqC6vMMzfEwTZ/W0zND1855yJqiG+UYOMaaa2geULh7VxAn0
GtKWtPwp50Jrv2GyNlJgRVbA4FmeTRypVadOXVv/lJN8MjHTgLvfN9vT32OS
B/c8VhpFPdlG51VkWfMqjp/FkP+NBxMVof+Ma8Vv7oVZghPveh2A/vsZqohA
/88Vjt7j+qcSrykj/1XjtHSg/wj+e4VyNhpg2JUXyP9Upbjl0H+hZUnF3FxL
cGTmWORfeuHdb9A/Pa7/rvXIv9mat8nQ/7MbyD8VWSiH/LvP4Ef+X9z5OO/p
Zx1q4/pAd4jf+6K6CeJ3VHvavHk3BNT7KSOdHXMcz0AdWn/ivFMlcNxl1ld+
wHF7hRmEcONM+VTtQj6Pt6ithD5P7uHNK+DLuzg4r8MbvXXhvN6sm10H49Cu
U4vOY9GlOhSHpi2+8xelGoFpFz8thHGzKzAdCOPGG1WYkVeZKzgl26C3MXjd
by/yv93+QzT0b3taEPkXjO7Qh/5DgoRSoP+9DXqaxycqAefObOQ/IVUT+Xd/
4PGMG2dKwXgZ8i/c6zXyb1s+jXseTAC4Lo3OC+/4KWf/6Z3h8DqsXnkU+Y+i
QkShfzo+LVeC0Xkv2TZRHvp/lj3itHCiIBj9wRN9T0tzrEPhdR51aabm9T1W
oHb8OvS9fij2cQb8XlRXzDxh26gEQoJvo+9RSHu1FPweNbmnCoEiTWp7zvt0
+L3b5Wp3BX7vrGYUV6bmWlJmm2aj76nL5wWr4Pd08FidfL0iaXBw+sWR8Hud
OMp3N/xenwpN3D2Cez0Lha9A94G1eT0t/7mPyTLyKtS6wmmjFYaC2R+GI/8z
bwYj/4vaMo2UEqVAskUC8i/cEYP817D4p+ND+p+4vrf8aX9DQPrX+pbkOrhx
CMP/Dc+OPVz/lJMmQP5H75oxDPrPOmWdeGSuMlV7xBndt2/XjYyA92163Jpb
oanwPn/A8IQWvM/LDjA5qvjeHNjYKaHn2luHCEv4XNhbI7VZZ5AxlRQTiZ4j
e5+NU4TPkaaybxWnLdUoMHgveu5UdpRbwOdOv6x3Mc2aauDcTH70nHoZU/gN
PqdyHBScD3HjVu8uh55rU2Yeuf/Pc02ckVdJFNuxt1HPFJD+lQ9OvTm6/2BA
+h+eID5rLUeJIv2rR93uW81dD5D+6TiQ/tdYv803Omf+03859u/bz1/JxPir
TfaJPsh/s9Bb5H/h5N4SVvkS1NgFrZ3DueuQtXMHqsF1SNSUesWECCXwZooR
WrcEaldqwnULPe7OhhBXuM5JdRE0hOscq1GL1ASCJCjq6ZQXcF1kpLl6PlwX
CSyMyRlw0YzaN6Y0E66j5ig/MYDrqO95pi02D/TBcuU4DbjuOtZjXRFcd3W+
sbsafosDNgbtHwPXaWGpUyvhOo2+P+cR79EIHYt/9uiwMXAbL8QH11FJp1+o
Qv+j3z8bctZEluG/p/axHpLaEoD078OZ9fKsqSzD/1zkVwfQ/udi//xndPcu
9ZCmSP/GyxXPq/2woTS27EL+Y2tDkf+xIN593HxZSs60PQuuq+V1a5Thurpv
uljlufeSwHfO3edwHe7s2OYK1+GJ3xvOCXuqgClHZ3rAdXtR3PU6uG4XTAcn
+WIHUSrV81PgOn/+qdKtcJ0fNMlUPvOMLqXc8/g7uC8Ien04Eu4L5BSLJ8Zu
lgF3bMcsgPuIKM7Qh3AfId9yQCf4uDEYKyKlCvcdtf0/mcB9B52/uka8n+KQ
+3bxxLSh4ESbTjb07z0hEfkvmFElHjNWGtR/DUT+hQ7tdIP+6euE9J+4c3cU
Xx8BQPq/tHaxxVdxUdAY+wT5t1AWRP5HPMk/WpYkC5zOuiD/svd9kP/X0s3J
HBljivb/Gvtf9dXX6oO/GEWZHL4vK/qac0Dlpd1WhbccQZG08daO8qBIOfdS
ilItx3BlsFyq8huO8uXmEr+D/ajc4cf4Iga94YSkep7bNqD2n/0y8d7K1aXJ
vhc3DwD3ipYg/arngvZQv9cGte+WGiLg4YhCpB/X4o/0l96OXHYmTB/cxvoL
sL6dSPWXvTerM4TSNqZty7/KGTE+uyq0tJlTENdTeUjJB5tki2VG6Q13ObrC
fu3W05s5J8prNG57iVAfPXUnB+55wqnokbtiQWITpyfOb/Dz2X7ummeY15zc
QA1utL4quj8V6odb5yJ9el4+g98bQn2+c9OR/nx1tUl3vORAE9avxPo0v/TK
Pq3tXJ19ZY7lXXW0dg2vgnHY/fXbEBgHGl/lb/cB6hs23v8A9UsDygYbKjiB
vjI1GTA+7oI3+8H4+Df23rzaygvkhz7OguN+qzg8p+u4UtueicG4WaSsOgTj
5oP7FXvifjAf3A82AuPSGB+N8f24n78J9+efwP35NE6/L3AU42t4fqib2E8b
4acJ50lG4jyJnZvyXb+DnkAc+xyGfQ51/1J7XdoKWON8xS2cr1BD8ZgPJuP4
qOH4DKuXH/ip3A98xPmZczg/I7fRCcVNReJrDozb18vfhWHcNuM8zEycJ5mI
8yTGAXGPbCbMBPn4fMUT54t7nXD/f5bR1ySF80UeRL5oo5xBETy/0ptOWnQ9
v6tx3uk2zjv54nwOmS+i+X2v8vzsJfxswfoSWP/xpPf5bz39QQyOjx6OD83X
wHFoxXGwfG2Q9Sp3EijA56sVn6/J+LzQ1485Pi/0ddIbXyfe+DoZiXFJog/2
IL5Omon3Sg4R1w/9nkgjGj8YXMF+GrGfCJxnq8XXzwh8/Thin/2xT0vscyqR
78om8mkzcXyMiPgY4/yhM5E/FMPfu5H4e/dTh8jjeVU9Nn7HNxIcufLv89XX
SiGjI88DHMN5Szmctxy9IfP5dmlTMAjfB/bi+4D/iV47r9zxpgTx9XAFXw8m
PY1HlA1SoRx0eoVAPGTzxXUQD+t4khQZ34tS/CaYAfXP3dobCfU71TNlZsQp
gjNjE19Bnzf4g5WhT4fVhX39Q6XAmTEGo+B8Hzz7OgfO977ba8MFMULUC8s9
22DcdI9tvwfjNiPVQGCEughl/0A8EcZffW3fvpHc+Bvj9y8G4/cjLPD7EUYY
18O4Ncb98XsxN3Ff6GXcFzoV4+cwfhXjbnuCRmpLCIAy7Ecb+/EW2nQ4M7w/
uIWfC4vwc2HFl52Hvd+UZrhgnyrYZ1rsicYcLxHwEt+fq/H9OeS7iVdgX02w
Vnosik8t5wGKz502rSsgQA/k4+fRdvw88rEfdi4oZCBwzlFDcbs8jG8ujNs4
z85U6rM4GIqfC/z4uZDYXCF6qdYQ3CrXRedri9uadV2/1/R7rO10nWXd7lGN
hprgNn4+1uDn46DiKmdNZ00Q45t+A57fK4EFkV3vM/X4OWuLn7NR+Pm1CD+/
IvDzKxb7ycJ+YrCf2aLZ2auPDQDRWP86oR+B4/MGx0enbcpRRRcR4IDjcAXH
QcZNqFog3gCQ149R+DqJHs8kACCuH1P8vs9g4v0aY+I9ICuMT8L93jfwdZKK
r5MAjKdi/ArGZzlp3VlUZ8i4fkTRusUA5ODrZyG+fnx41zlwxj5VsU+lWVO2
3+VeP/X4+qnC18+pHdLybb06bFLw9+s6/n559/SJMDz6yeYpXi8Z4/XSiahz
N2vVhcE5/L3Lx987KjFnT+KgpoydeN2ih9ctlzJuZs67rfDz+z4ff9/vq7wN
M5v/PeMGXqcl4XVaz5c7lPcsk6aU8X3gLL4PfFrapnRpQS9QnMpbLznj9dLY
753hX24/YtSn6PP+p328NE7239L4ANzHK4D7eLvTIfGj6Z/XmN2ZBqZgfQVC
n+R/+ob6sQHZj52N37u5hN9nEcPvs3ht3wfrg4z6XVnc1fzHuoqMep8Q+rsO
gx+I35ch9d+XrNIVXK4FyPrjdV5dklGv1BD43vtX9c3ofE9v8yGBlKav0jD4
nN13SH1+l/cX+FjeK+G7X+M/BuJqwQ2zuq73+mH+WMxfij49KFmMT8G4Pfr0
A6FJmcMhXrFhw1x0fw5f6cH18/O5P4EYl/Rj3g0/DOu/wvruLPyRLP6tMT8X
z1cRz5fNz+DmL0u586K0cTyTcDz1LOLQ+w6GvtPR/ST0oxy6n7Tc3ftuZyX3
/jDTC+GJ5QMRbm3ZwL3/8FFx8QMQ3n+/Tpf7EvM90PPo/ZcWG/J9lpcs7y3O
FSxw7vgoy8DL8Ps1e/H7NW/w+zU+LHw6DiQ+j4U/neX9mrygYoST8/V5m8CN
2wcbMj4aLqI56nM7M8h4Tir5NMzVZjZQrRgwVnBUNT6u5/x4lGSyxXoiFd9n
y5RW4TqOX/CYkolNrzgT0DprOpiO110TiPrp6E1bJkF+2MoBZZBP4zuxzmSs
w6bPxl+ks82UyweeWH8loS88emQAxJ8bTHjyJ3xS/z/FyfmyzSu3V7PxV3E3
qv/DoiaYH7jSULgS5geGo/rnFFCN66HDcT3Us6RoRvhdO2AlX9kIca0xDuFd
66Rk/XRv9Me76XN9qBqMOxN1VXJczAckX+Tm4GnccanOdxdaID5jrNmS3/HZ
9Nl8suFs882/ciwPzqsf1k/D+ieSV0mL8RmB1yz609vcUX3zofe0OTAPZuSi
e/643Vjw8OPscoj78AUHQryhRHq2hKcrOPJhF+Lzjp+z1kl59V5XRv334VO5
0rOmFmCEWy7CJ153nwXxcWgcV/AIjzsOj1ubFP5tyUxriuQrahR85OIMPps+
m082nG2+vDi5UmTc5JAfd0bcaP3gwiyU781usDKD+d5eCytMpniNAO+/90T1
Td5xMec8334DiFesFdOFOO/4nzywNlHP1YgqsPkR4UkNwrguxncEzJ22lsNd
xj7PQbj1fH00btq+KAsuH7TgcYXwuK+WvxOxnmpLFWC+FeZPHzOyFxdn+GTT
Z/PJhrPNN6YmB9WvybjROqSfLS/3wHorZb371C1Y17j0KHIKrGuIWfhN1Y52
Ajd6+SCcd/yMs0vR+vFBf1tGfXPjzFA9WLe9cqUc1Uc+Ux3TIW47/mNiwKfR
1BBcz12N67m0H7LOG9s6aj+XD0ycjdG4u8ZpToP4k6MqpQf9vag0rP8J67Px
2fTZcDb/bPNlixutn4Hj1hfH7QlLXRLn7dPJPvCjPewin2xzBE8nbUN83nG3
v7vIVzdZBPE3TZqG9Gmc/B1Cn4v9VPhHOjD05+DfMyT95Dm+VePyKbIuLIl/
F5GsC/fP3mMiYyPIqCOL4d9XJPnrQvnUoZ+32P9G7P/673/XkS9KbSPi24eH
RHadL6kfvoNX1yb1eWxZK1L/b/1jPiM+Yizx+dv4/+35/dvrjdZ5hv0cw35o
nOSvHJ55y6C3MaOeXiAW4L5EzhyQ49q3TEb1613PtiG+MaW2EeLfF0oPhXE2
dj2M8M+3s1BdO/zISU14vdUQ9W7L97zzQtbBLYtvQj5IwPpGWJ/2v/XpM4RT
/eM3/M4PT8+Eqc8blyJxNv9s+ry42TPiRvsk46ZbOWqoUqIURdbNefctU0af
zL4On6SAT/aMOjWtT+K17R3vz50bRv0ln1V/ruxJhDs26SKc93dTBp+tns42
LhvONl9e3DQYcWO7/7PVl09bh4IfEQaMunn0+2YR2GdF4liHgS+flVPIqQQM
/W74DJz23/+1P8LnR+uh9QDv78z6Pps+23zZ+GzzTV2Q/+DQObM/1gmeNqH5
k4k6o47M+9QFJN5HdDvf0pmKDBzXoxn4MUmhoPkPrRn63fAZOB3n7AvnEW4W
MSAYrWNvzTnXI9vsj/2w1c3Z+GzzZZsXW9w+iFpGtnkpUx1pt1C9mHdcwdnc
Ubs4Y4s2o47MhqeEvLD4Kt5mQ+q86F+ulHLflKFPx02JqLODh+mQz9Cn+dGB
7xHuYpyw9k/4pD6Nk37Y/LPNN9PXc98BeRPGvEyCS+Yl6moy+KZN1MBdAUqU
RqHBeLgfV9KNr4L7ca/dPa6OiVMFY2smIrzfI1+Ec6xbrbZYiwL5Z+oIHzPs
EMLXeW949SrehCLxjfe0+o6z/WZTdKZ5HMQLM6oR/qPZFfLB8DcuiD95ZkhV
17zBhFdTEd46YgzCZQymLnzZYczgs+k/WLAb4hmkHzb/bPMtU99yxHOqISM+
G5SPNhmJCAC3PWEorx6Yvgfl1RNulqI6V5zCF1SnUPc4ivLboxYb7O5dpADA
gn4o790ctx3hzUvO+Bhkt9jkej5FfBnrGwj3W7JD6UKoDhWH6x2puN7hffvG
g/v1EmB4iiLSqVmyqSsfkPzZufFcfT5wdtdIxD+uMhPhH49Imrv1UGHw2fQL
D/M/5OIMP2z+2eZrmCdrcvyhOiM+GzQ83FxtegPFpBRrmGfjHf9T33nNya1Q
VanmNO7YvXPQlH/wZSfqktW4+Dz/5N4Qt8d1zEO4jqlAvH9BvpdhEaB5A/Il
cX3cnaiPS2Dck8CLvlU2QD9fFYZvheMeVym8da3FA/ypn+7GJX0661DjXQMm
Ulo4Dzkd5yFpvnlYhIwk9zqc3/de8xfudWg1/4hKWy9A0fXfyTgPyfZ+x2yT
BWIz4iaBGSzvfcwi3te4Pid++z1xJ2BGjMumz4YrRufXG4mMpkiczX+aqYhg
5W07aoRaqJcu9z7WueG+wdxRFZyEpB452gPcKJOw1jB5Ln49NHD3US7eqhjn
I37bDkwoPxIBcQFzt80Qp+dF6/BF83RmD6i2hPw8LT6kI7/g6T7I779ZzJeL
U2+iU8Ihvm7ItRiIB+we+XbUe0MQuqnGG+qUFCxVhDqNl22Fjj0Wpx6MWS//
hPtcW1EiIq3Ofa4d0BYce9bEAkyKaCp5xMXrLcae0ObijU9FFzRx8bu7fyB+
z/mfJCB/iLTBwSeF4sB3zaNiyN9w3PkM5FuYDrk4bpY1NWR5L8RPFLIYAPkq
ggU5dRGeQFp58iUl7rolR2dRzFTuusV2Re2pixwA5mzQuAzxsZfCNkG8pI96
Khen7meWXoS4d/uAbVO7rNNifsimw3VmS8PKWLjO5O2/FKx+vf9STCf3cTNY
9oM9WfaVQiz708vd7KNJXJJFh20/y+aTp87cX9Pjkvy/3bcKF0Qvgvus5dJV
aD+VkOW5oet+6vqq7wjf1Ps60jlGKS72u21LPa1URvrZ6eXrIZ5V+7K3And/
F3F8AG9/bd4X8QdfzKrm4+4re18VQHh1zEaEH03mjVt68BFv33f1PBpXvH6V
tTx3PyiG+Y8wX+YjT38t1l+L9e+h8U1AIfZzD/sRbJ5gC+MgeY1C+mOs5KO7
zisrcTzia/jHroN49SfN1KHc/ZThG7nH8HpLlRwpBa83fRfVG7v8Dalc/4el
EJfU3vpKi4v/WGLU4MjdH4VGp5VBvPdL90KIN8toQj6QGsfj+0zm8V+x6NN+
SP3NERG7E/xtAal/cOChA7ZcHVL/2NljaUO5fuTaeiH96JkXkX7ORgnvpdz9
RXqeZyrcR6y4Gh80ifv9WuzZ+MxduSYjL6quDeLhZQkdvlxccIfpbv9zZqD3
xrcIf9e4D+E9xYJDnLn7EVKH9k/q9GudZT/eXI6idRqwzuppYCHUcXnogXSk
X+xHOobLZy0s1DamzLQdEku595OU+xU3+bn3E5elxy2CLhuCiNnGFc+5+LbU
hUbtI5/jv+sCkt/jWEzmUg9NiuTnHGm+XDZwEHXCVQHxi/bFZUF+5rGeAUve
qoDX0fH2Adz751Kq4PAB+L5esnvvsX34QX5qJMKH7BI4AnGnG25npDy0qKSd
4rYQz9ShTkMcP0dY31skn6dszxeaTz+XRxLPZbKfKpHo06Ofj9v9pm+0ER0N
9iQUp/twcS03cduDv/FD46ubZ72DOtYTekn9zg/bfNnWG92910m+j2mLdQ4T
OjcFJS1apAC1D89LG8/rS2RR4WEdbUYc2PpPBD559+VsU6TEbPqkQZ2FQ7eP
gDq69xtQPxi5rna/pazA1cn4uGM9whfJxCDcI/JWm1ZUe8byqm9oPVkScBit
J9nGNen34N2HxZJg93he/4ms8T7EN6v0OL7m8RuG/qA5xov2DFClyPXtfNSX
Jf2zL+s17juSXr7g6DiFAYz1s4ervd+HfFNA+mFbt0dK7WzpEzMIdAhqovgk
SS4a0fX6oXWuYR0adyLGJfn0uCux/g8WfdI/9cx19urNgxj+o3FfFul/PtG3
RsenWE9jxSs3BUZ8luueGtEpoQTI+LPtL3SqNnH5Qxh+gutN0L6DPL9lfT+s
ve+uRZH65xX2uuWtVKXI68fSutesLRvEAXl9pme2THF/yhzXYn+fO/frp1Hi
+HvqQtw32O4nJN7dvuB/yv9v+WHDHdHnbCCGccdu9Nn4coWf0D6aPO/TUhNu
fYoUB1pmEuj8Hjm5DeEpJSbc60qUIs+7vvszM7jP1frigfD+sbz975Xkxeg6
Ia9btn0x23XOhtPzJXG277tW0+ihc/y1GD6Thk5MycnQYVzPj7KHJOsdFaLI
OFzee3fF7hHGgIzbxFmtd7nni3rQx60Y4roLokP+5Hqg+XqYj58vFNv+muT/
7T63Oz6p393zlI1PzpctPgf77izjX6BGaeN99wy878Z9QRTZFzR0pcAaTb6W
DDKPkSrXe+f+1UqM/AabflPt/U3mNgIM/hvxcefMA3pQbHkSUof3d3nWvAr9
fFfEcYvlrVsotnULuT7ZSqxz6PWAZdnwpmgxN1CUK4XWb0r9Yo7CdZpfM2fb
5A3G1L0HSQ4QDy8WS4K4nbjoieD9xuCxdNNYuI92sH2tDPfRAR03dErv2QFL
yVpHyLfOWbsX8tf2Wr8X6stfS0B46ZED+yAeNmyA1Y4gd1D7NSUJrjOVkxKu
w3Wmvs23CefMLICtuXgVXJfe3aSnA9elvSyUbHYEWQOZY5vQuvTp9cOZkF+g
tvwMd38NYo1S0P46SniCFNxfD776wJbLp3qmRyD9AyOmpEP+OZHp2u0jXYHp
XBukzzv+Jw9/28YQ8Rscc25Avurww3Ocuftx5VNL0+A6XEbo3FS4Dq8elh2+
aaoh6OtU0A5xqcDe3+G6PUvDYZYel3/eT/oHxANy9nyFeI/INL8FU22pKoUQ
tJ6Pnfw2EOqoJemGhUgKUmUNA1EeYOWc9Fi4rz/tO8GXywfbN5iice/2a5/W
dR9RoRiLxn1p6twG9c8IxAfDcZPk4xC+QMMB4TSfHjcGj7uY5f19laDn8xUX
moG4+lS0P5p6oUa86/4rK/XVc4iXmq4th/spjnjJPa1oJ7CiNfAlxHnHzzj3
/LbsteXus36ofET7r0TB3GqI93bvqbXP34sadMIG6ae9Xy8J9QuCfOyO+nsB
q5SD1yG+YvHAeIiLftg1NXmPGyWyj8ffbBqF+Isur7u2i8uPCpyD/Ey8ql6p
1cXnHefnaD8oe33dE4hL2c7axfUDzKtkEF+7qr2qK18L+7mC/VDqwsGwjt9H
+xHa/yZ1PFgD97/OCy2t4X65Q2ghwo2Sv6H6tWs/XxHuvhvIzd6F8Nm+AxHO
XxwZ7HfbFoheExoJ8VuLt0ZAvP54yG6YHxhrtwLxpw++h/iD1G0PyXJ11HWd
Eb5wXMu6rvvxOZcyEd752WAtxGvH8VfCvMEorLME6ygH8fIAtw1iEa5X5IHw
RIV/+5yGfRoqLLeE83WJq0P4xRGWa7qOm4PzABI4D3CD5T33gYY8/2Ez+iD+
8GgvlH+oVrAb3p+7Hz96QBCdXzmFDTtRfZnlfe34TslU7j4dSL7g5QGix/Hy
AO+ntjoc9TcEPagP1yCuptuAdCT6DR4RIlljo+i5DOXHRL36be+aHzMJWIpw
VX4phH/a9m3SgqkqYGdIHPpe2Gg5o+/FgE0L0y5yhgBSJ3UdlVcXYQBInQeK
L13W8wmCle2HZOH9RyZ61kB4/xl1be+hJ4UtNvv4N6J8YFPW+hTtLvW+a0or
EL//eHklyLeoCJ7L3deDjB8G6P42oMAE7bt367bm8Xtqgm9KLxF/QuFkRcjP
mj16Avw9Flq/GetfMd+zvMlEFpD6heqOT0x6yIDHNc9Hw/v2pARXLXjf9t6p
vb+lriWjfEjyKpgvrYip2wnzpSYbxcd+1tYE58GrFRCvqbufBPHa8z7DDBpV
qDNhwR5Qx8sraRjU6S2bm5d7VheQ+32O6au7QxpVwPjtwmMgf9StE4Mg3z0n
fatssi5YsS4MjWuRFZ3QNd9LjhuyZpyfrHSbDTnuf7qPDiXy/4aNpcJCbTYU
mZ8PkRHIzW3xAGQdAbDsu3cReYaf+QeWukMaS36e9llD1FMi8PtZKsR7GUIa
vPez6P1OOt7v1GwIfrfmgxwIey6SD3UuLtY+AnXuXVJaLO9RklHS95I4HNdz
4cgvcNxXhj03zyxuyVAuTt8IfX70vKMC+Y467+9fjNNh7Pta0L6Pj7GOVfsU
oyPDL0vR+iOx/vS29q2zNNQpWv8D1r/XwffkzEgF0PZDEvm8F6aKfBrj95W2
EevwKLyej2V5jymS2M8WzNXU/1wtAdqx/l2sH+cXl3hPXBOQcZgTZnAvqkmQ
UiLiIKxtgfIJn4g4JE079iF8sRhjHzQqfLvx9ngdQMYBx9mGjLNc6nq54zek
Geeru/X2G9Enh6BOpZmlOOSfST+XA6/bF+nFb6COi2OfOIibsOiE7FGTKxEP
AK+wzgusw3Yd0jj5fVm8DuaXZH9+7+h83QkN2StFDVqM71fBAkHlO2s4Vn9a
t2L7frF9jwYd6tveuciaIutHC98GB5TJjqIGiU5A9588w1674H3miXvWCr7F
+kCgtR+qQ1lO8d0K8TkhX1tXVowGy6ZcQvWjerFBA+f+pj61MSU+gG+cKbjg
lIvqU5aV0nugjvfpJxUR/oog9pAcqk9l+NyNg3iVw9evVlw/D2yVkf4QPjO0
rtbavOV1pochtdohCK1vLw+J/W19KtHd3HKe8wgQg9fD6/B6+E5HkrID9/mi
E5rFq3MpdEpC3LtcaNnhmdYg5Y4z0jliPvQU1El7cMyGq0Pdtk2Rg/xg3buy
kB/SI+uCj6gr8J/tjNarkzWrUd2qSWb27Lk7HcFnbxeEP15QjvA+Y+ReHn5u
B1Ssh6F6VvoVMVTPev1UE9WzanR6Iv4Z/mFxELc5a7ph3alRIKYgBq0TsiPX
oHVg0szvfoKJUlTVwF6ozmXRVoHqXL6//b1oxfS/+L1ow1/9XvQwlt+LNmP5
veheLL8XTV8nJJ7E8rvQAizjciVaXH/xu9Bb//J3odnqXzw2s/6lSj2aNStX
B5zeXILWe+f6r0V1KM7momkNB6QAWf+69N6un6uMMaP+dflccEKspjmj/pW6
YUvn0BQdRv1rumysp8N1W3BEt5RX/5q5esPv6mKVUdJrQm8o/XFdLG7XyaKr
6zUYdTH7qNaRdQcEwcDZdUj/9iklpE/Jj9766h2gzJt49TIzATlUL7v39uUX
2WGajLqVqlFgvl6RJqMultN3waGZ4caMuliHYSD6fSGybpUyRyS6+ZP5z/Xw
Brwe/tt6WeyE0aUHuetnctzbk8KvJf8Y9sf1spjdm5LaDxv+rJetxHWu+t6l
+6UX61BknatvbyW5HxZ6jHpZYnvLzRM+wwBQm4h0zl4fj3T26k4W8h4kARj6
piseqhgLA1L/xfRVPT5ZDmToOzimHs/m+qTraFK4jvZi66VSlycmjDra6mOf
3kdmDwLhRF1sqb/PlwrNYSBpqQrip51ejtbn932fVE3n8mmdM1hnxmKjnrrz
2jNIna2pHrvGT7Fg1NeonYYb1GNkQB6uo5nhOtp7uVO2pd+MGevqDBevqHAR
GVB0PBrx93xrQfW4O+rhF/hcjKjTF4QQ/+CcKsQP26l8bKGgMVWM8zwqOM8j
o1YfEu9XmXEX53lW4zxPR+av35/S26OtWf52FMjakYz4i/kaEiE/zunUPk9R
e0aep9o5/+OSmfrgc6YRyqvI7shAeZWkReZnXpo4AKXZGZUwPvvu7dWF8TlU
MT58/EhTUBZcjuLjtHkoBfmFLO8ZUXYHwi8G6oMvH9uR/snRFtcg/7KdkP4S
UwcgmVSP9Nc4P9Hpmuc5eXgC4qul9EF+mquT0h4Yy4JFon1QvuWb/qPp8DpZ
vu/jiBMOdiDaaB7K5/hfKmmF19XhGx5C8PcSRbJOoXzLgKrrKP8zMGG8RUqQ
AyPPU8ny/g5bnidi/2jJHE1jQOZ5KveEicBx3fJ9EZ53cUz77/I8K1jyPKes
++6zCpSkpAbLP4Hf601zL/WF3+sWtR0b5IpMQVH90BcoP2Oc9QLeB9oNXzvc
OjcMjAu/WA7x0955BRCPOBH+ZLuELSPPY7IzIDPNzY0i8yp5LO/X3AVCXik/
XMHW8kOIf6llbH+IBy6tRb+juNBIAeVt1qTXVP0neZ5yBxnDjmfS4PSD5Uhf
wMhUAur30E3Tm5lrSU26OAvd//lu6qL8RrqA87zGAxpUJ5Hn2THqUyz3+QW2
XH2B8NjSTShP8maJ37Z7HYLAbHUhwv290xE+PKT3mlwb8595ngCcn3l7e+iI
ZdznFJnnKTeIG9+DT9aKfN+k4BqI4j53wHWbCQiffGUz4kstCGqHz80/zf8o
r5pjKtVhBFqO5iE8d3kz8hn9/HQONw5AfNYdhA+IFkD5pTfp21vrD0hRZP7n
CUv+Z3Ik9C9sRb4HcWbNpbLC+yI2qg/qUN6mp/HABBj/SJb8T/oeIXlrbhzI
Pv/72vKPAj4ZA32sc9uIpxMYIzzRdKwkReZtehuf8XTnPk/JvI2tL//5TD5x
K7K/Xe6xifXanSaM/I95aGGaj6guQ8dxz4+m7JHyFJn/OeK7Pv7+SHFA5n8q
ZPXdUoy/2tD5GXGcn9EbuCnnWw9ZK7IP/HzTYlf79KEgV+AC4tu/HoT0k6Qc
arK11Bj5nxgfoZMG5sKA1NcaKqPx7pgU9QTnf/xw/mf56Psxl28qADr/U4nz
P9cltHbnKSr+zP+8wnmYjYevO4XbDmLkf55rnhx6XUzYiuyvTsgXOlyhMhSo
1zejcfcnd6L8j8G4AzP4xkl3m/951U3+p1X913mPpbfrn5uuuGMzz+Ya2nf/
CB6O9t3eblsu7JWUZeQxTr8O/Zy3UoQ6f+E44reETkZ81A8WoW5F5hN04mNR
3oDmv8d8G5QnkWPkB3SSDpbXXNQFpB+2fM6KH0Y+3g9lGHmAgVvSP/jx9aRy
A96hvEFDyzGUN2DLhwwVmNZpbikCRC9/vA91RM+aIx158Ud9a+YoATK/oet5
0CnggA+VKSDFSTKo4zgVWQnOyXj183euyP4T+nyR9Skap99nL8Hvs5/P/Aj1
wS6BBBuof3CYuhDUP8iC0zpkPmHCRLd5Zt6jfvocjn1K9nc/Uxw6kFqVE24B
8cCbB/t01SH71YMWfMiTe2QAorT3IH6fiRGI33RawOmp9RAGvu2o9hEfb1kq
DOsHEfps/c90fqaKyKuw9S2X4byNG87bSPYYgvKHZJ5Hk6VunjFVQrTtR6sN
mWd73mA50KFSkXE9DGbJs6ngerc2oS9ws1Yn66kqIK/D1YemD5CK7Mm4bp8P
+3W+1BP3vZ/Dfe8ncN/7/wFzDXRC
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{357.85121363651746`, 265.01567629199246`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 3.9999999999999396`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.8177930017883189, -2.967013535643454, 1.406429978895},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7472351732986526`*^9, {3.747235547414041*^9, 3.747235595045229*^9}, 
   3.747235638366301*^9, {3.7472357187412786`*^9, 3.747235758316436*^9}, 
   3.7472441327457657`*^9, 3.747244167671472*^9, 
   3.778207043063962*^9},ExpressionUUID->"fca57958-0330-46a0-ada7-\
5fb39143a5a5"]
}, Open  ]],

Cell["Values on upper square side.", "Text",
 CellChangeTimes->{{3.747244241853691*^9, 
  3.747244253137257*^9}},ExpressionUUID->"93373fee-08d0-4ce1-b228-\
16f1ab6ad186"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u9", "=."}], ";", 
  RowBox[{"h8", "=."}], ";", " ", 
  RowBox[{"h7", "=."}], ";", "  ", 
  RowBox[{"u6", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f9x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f6x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f9x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f6x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f7x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f7x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f8x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f8x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H8", "=", " ", 
   RowBox[{
    RowBox[{"u9", " ", "f9x8"}], "+", 
    RowBox[{"u6", " ", "f6x8"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H7", "=", 
   RowBox[{
    RowBox[{"u9", " ", "f9x7"}], " ", "+", " ", 
    RowBox[{"u6", " ", "f6x7"}]}]}], ";"}], "\n", 
 RowBox[{"u8", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f7x8", " ", 
      RowBox[{"(", 
       RowBox[{"h7", "-", "H7"}], ")"}]}], "-", 
     RowBox[{"f7x7", " ", 
      RowBox[{"(", 
       RowBox[{"h8", "-", "H8"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f8x7", " ", "f7x8"}], "-", 
     RowBox[{"f7x7", " ", "f8x8"}]}]], "]"}]}], "\n", 
 RowBox[{"u7", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f8x7", " ", 
      RowBox[{"(", 
       RowBox[{"h8", "-", "H8"}], ")"}]}], "-", 
     RowBox[{"f8x8", 
      RowBox[{"(", 
       RowBox[{"h7", "-", "H7"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f8x7", " ", "f7x8"}], "-", 
     RowBox[{"f7x7", " ", "f8x8"}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.747244285133322*^9, 3.7472442932477417`*^9}, {
  3.747244357513423*^9, 3.747244395981002*^9}, {3.7472444444691753`*^9, 
  3.7472444943399754`*^9}, {3.747244536294989*^9, 3.7472446109090633`*^9}, {
  3.747244703814904*^9, 3.747244886472413*^9}, {3.747245508972411*^9, 
  3.747245526225157*^9}},ExpressionUUID->"a3b6ac47-be08-4b13-9f73-\
32b329bf82fe"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "9"}], " ", "h7"}], "+", 
    RowBox[{"18", " ", "h8"}], "+", 
    RowBox[{"2", " ", "u6"}], "-", 
    RowBox[{"11", " ", "u9"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.747244888826683*^9, 
  3.7472455298511343`*^9},ExpressionUUID->"8e1190be-ddbc-4351-a4cb-\
5bb9097d404a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"18", " ", "h7"}], "-", 
    RowBox[{"9", " ", "h8"}], "-", 
    RowBox[{"11", " ", "u6"}], "+", 
    RowBox[{"2", " ", "u9"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.747244888826683*^9, 
  3.7472455298531446`*^9},ExpressionUUID->"6585608b-f888-40b6-9156-\
aa2924f040e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"func3", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"u9", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "+", 
    RowBox[{"u8", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], "+", " ", 
    RowBox[{"u7", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], "+", 
    RowBox[{"u6", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"func3", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u9", "\[Rule]", "4"}], ",", 
      RowBox[{"h8", "\[Rule]", "1"}], ",", 
      RowBox[{"h7", "\[Rule]", "3"}], ",", 
      RowBox[{"u6", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747245255461561*^9, 3.747245382650403*^9}, {
  3.7472455414840393`*^9, 3.747245543230255*^9}, {3.747245606610799*^9, 
  3.747245629338726*^9}},ExpressionUUID->"42fc626f-072d-430f-b543-\
a7a9ecb5dd3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u6", "+", "u9", "+", 
       RowBox[{"u6", " ", "\[Xi]"}], "-", 
       RowBox[{"u9", " ", "\[Xi]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"4", " ", "\[Eta]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Eta]", "2"]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}], "-", 
    RowBox[{"9", " ", "h8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Xi]"}], "-", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "+", 
    RowBox[{"9", " ", "h7", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"3", " ", "\[Xi]"}], "+", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472453468691463`*^9, 3.7472453836101294`*^9}, 
   3.7472455340342493`*^9, 
   3.747245632077084*^9},ExpressionUUID->"2fdaf8f1-61d7-4eab-ac71-\
e47d741396e5"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
NYjPZbyamGCkZYk6wycj4SRaYxWMOjew64UCap0iwuZ/tH668rkzP9D+SWz+
M5n7Ku8dc9B+yF/9esDC90vz0c57/9RLHqPcfjB5460stBPf36pYN1NyVgT+
/z/xyQJmhybh1/puw/zdH3OZemq98IDN3+jpg3uDoorQzi9s/mdtv6b1l/xE
O1vY/K9kZxq8cOT8pQn/lCuNObJFmO/yh1K0E+L50z+JyxbWp2E/WvJPvDGH
Mcqd9njeqRRsD42sv32O8ucnsfnLKpqbvT9dgXZqsvmPuXxaeKl8Ddp58Z84
yg+G35dnlK1dh3aq/5P+CxOiuO37cVJPrbtjmCHt1sbP+orQzsh/4q8pTI50
p+6Mwly0s4n1k7soP3wDm7/uHt+Tr73q0c63bP4auukKU842oZ0D/2mfX5kh
Xo8mq39sRjuL/snfgbn8JEkmZV4r5Xe5MkdFT0rNduP8Sfh8L5OzQDv8J+U/
O4b2Uf6zkNuf/KedbK92H8n5zx1s/iJhpTc+nm9DO0//0368mItqg0znFLWj
nzCLfe4JD+17/71ekGWfM/ji1FmFGp3UejmE8NlsKtTWaUT70/+Ul7yfOFw+
IL0K7a/5F38YPr14LVYN2e1o/142/zXTn0xru9qJ9rv+o38A+RRoHfJxeDfa
H8U+d8fFTM//9v8j/tQ7ERp8uOfjbM7vhf0IJw+rIONB3Dyo9qfeybOe29py
JZw/X/svfmw4m/9uPq8PO604PxY+p5hGRGy+1Yt2rmHz58tfE/7f/vmfuH0O
8fhuFHNfjfNLRdl4v5LfZP2vO36hneP/9CMyxjlriUAC528b/IufuZDNX9+h
87Vdcy/aJ8LmP2efol/EWz6cl8ex+Zsc0BBW/S//ObNtxarcgGLSprShRmQc
5zfC/sbK9QuUfHs60U6HP+MSueXZJJe3sQ3trPsXPzCDzf/EUb2EcVc5PzCc
zf9iirPsHWPOD7Rn84//dO/9f/u393YX7pJdV04MOi8ZPTHi/AfYrxAbnuhh
4t+NdrLzCBHeHZ2qvZXzV1//i1/nwObft6Ms3TSV8+susPmvfNVqOaVPEO0U
YvO/qWxw7r/91Y2x5meP5VYTH++fy7WEOL8O9ser3/zi11/Vw41jf+ZTkt91
7cWY4A5qffH//bQNbP711pbiAemcn7aIzT+6x85x6AZhtDOCzX+h7Pqu//Y/
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
7/X+r4rXqrE1aCfwiNTXsf0B5VQ8LYOpUbpoNGELt16D9xfGUetZ4Kr3cguG
mXyjzq0lMHunfItNffODOj+cwCwr2h7nodBMnR/+/+tQ4Ip6gWLKV5rI3+fQ
EhgpMZ2vGedqqXbixxyg1o/A9/363O1cmUWdK/NjJpYYmlcsKqLOAfoxzzSn
JLtsb6fO93Lrvr/PB/oxN4rNxsXMoM95+pHTOx5JWvKX0XaS89R6DbjgBcv3
uaHFtJ3k0dprj2dHl9F2kuvn5LPjb3fRduL6i7KTtFzWXDx+Qit1/jCBTJTQ
3bNctIaud2JIrYOAl9p5t8mll9P1TkQchf28ptZQ5wwTyI7iWIErt3vo+iVa
rybPWurcQ9cvMc6fXNcm/os6R5dBrDXyr0yb20j3LxJHrSOAHzlp2um5tYbu
X+RVulZBJV8j9b5DBtkfEbjiuiIfj+pH5MzVpgajiZzfDnyiaeuxfdWdhIpD
kn0mqqunrePmO7wPjPLDgQdrdPwsLK2nxz1Szd4bT8UnydvpElk2fU1oP/Cv
KQf7QvgEcB6hf6+HGsdIg1fC2qO5/DxqHCNTvyfWHPLvQTvBf2uZId3geovW
v5zMYO+Np+LhROTDvcjDezh/BvgUkmhZ5cz5k8C9rYSPaor+b78ReFuhomDt
FUEetV9DRPI+is382kjPa2QNe288tS9DPHevefi1nbMTeKCMspNrH+d3ARc3
EC4++eB/+1d4f2HAZ5t5A4R5f8cN6ojam+seN+s4e4BfG2W1Ke/3egGeC9w8
cN5GwfJ/90P+XtfXEanowcutf/uHf7erKFLG3gP/N08lV9n73v8el1JJsb+m
t+2cKur9l1Qyd9AiHf3jfdS4kUsi2HvdqfdZyKujWmTRqjr6PRHSPzmmraGP
j0fN76Ro5zoP+TH0exbc/e3U+zhEsNu/WdRPgEf5IcTt54jLPl8b6feV8J52
6n0lYjW7z3qFuhCP8n/IzAMPVKqvcvnQ965T73+RXZpLRpZFcH4yuy9MpoRJ
u+sFcusUOKfxokJAda09V++T2PRub9Q/yyaIYDtk98HJPt9VfNNkRHnUOQpm
g/Xmld01F/GcQQ67L/xpteDw7V8eMZR/yLhurHeZ/sMS/QFIv0Tn3RwF7+eE
8jMZx/4Fo8NOfEDO+slM9PIFzlYGbwh13oOJqjvpInUqGjm7fmEChrd1iI6J
wvYA551e7D4q/Emca1fseT9izbZP4PvZ9gO/IwD5LGLPI9lN/Kg9LYkP2/9B
Nn0k1T7vs+d8XnxOWXj+Yd3/bG9wjuhoyETBWde49sae5ySG93dOb5nBrV/g
PM/zOyPCrvj873YI6aOfXTu/YArXDtnzruTrhawV+8O4/OEczjdie0H41r/n
/7/aLeRzTu/a+Gsuwv+aHvSEfcZfrH8O7bmAPS/X8epY3t3rJdy5VfZ8muEI
zSipd1w9NrPjUjk7LkF69rwoWVw5cHvBRm7eZM95kt77NeJCL7lxCbhGqam9
Q3sf5gPnxM4JLx49+yK3rwH1vv/TxTezV/BjP4XzWgP9xlc6TODiBg3UvPy/
2gm0B6WMXYMGNAtg/hDHeFA38kBVApc/e84Zf4cF8oF6t9vZmDHVhot7wHo8
y0t0W6cWlw97rht/JwV0Y891kxuzq83UNzfiOAP9cr9Lfs4UU1EcZ9hxgLgu
f97AN0IMOZzXeqyvM0Z4OzfvQP7KRd+PJnZy583gPMYw8+RLSVFvcFyC/f0h
eXq6Yjf34XvKwFdKBOw5Z/ORoeI5TEOoIP/kEu7chRh1HoaKCzEvFr94OU6J
43AeyWVP4+yxMyLwXAqc/+Hjizvhs1xamTqfz2xbXTE5x/SwCvhLsC52Lp8l
MPh1JLXOKme2KQVG81mk0u/LMLUilolC/Fl47gjPz1/2+Jwm/RTthOfuSb2l
bn/yajjlPzBL1uk4SMZ4MVT9MrPeezYeTPZn/vb/S5gn8stcnQryKH87l9F5
ov2eV/6Tnt8Zr/oVn6ftbqDWEamM5azLxY0OtD8QxbxJffrz+LYW+j0yRib6
5XqT/Q2YHt6nW2l5ZNxyyV+YHjjjU+rZ6NpM50+y5y3bJBJDr3e4e4+p91Lx
HmPqnA/52Cdq/fMBN//Cec6gQ9PvSYRx/eg11R//9nM4fxLygf4ys8PN6Yw9
FweD/iKj90TCSJJeFzSQkWz8CsdDuBeIva8Y6hfOMR40DGw2vsWNh3iPvWRT
yyQBblyC/CGOhPtx1L3E1P4jo8cnvmfhD24fnB3PmfXjV7r3CHLvQfexfPuI
Rbleru30/i/59H5iao17GXI4750hKnKweVEFlreard+f7PgP+U9g0z/7OGKn
+K4uel+eVGn7Fzx/yL1PCuexBXedul8gWIf5w/lqK8q/BX/j8+QJl9Wsufea
66h2RZ27IC7Tr/n+Jz4PnH1Pgby+LKc3o5ubl8EPMZ6kemjiRy5uY/Av7ZM9
30ImfTU5q3KQaz9wLtqjdsaCxkSu/cA5Z/h9MXgu+CdLB9Vuy//KxUvhHHU/
e88wcPqeYRjnPVh7OoLb1qfYcOs19vwkOfnuXMysLkH0B+h7gIHT9wBDPvps
f6x8oH1r+yrufS72PCdJuWlXavpaGPOn7+kFDvd7pLD39EL7gf6if/vDhqOt
IjxKT2atj9RsF33uvCWMh+PY+28pP5OpNvjDqXpn+IjGgaenX9PrKWYle58t
1Q6ZdSyn2i0j5NzmEzg1nl5/MZqCO/lsB3yh2y3z7sGt6l7ZGOq5Ucwd9r5Z
qn8xdiyn+iOTc1ZngaJ3FvXcKCZuVsFlv6A05Gx/ZGTjIwas+5lOjcPcPbFU
/2W+HLpnoJDPjaswzs9k7339mz9Xms1yeC6k9z9j4C0/rwA5O/4Ql9l2H2fs
5fYFIT3c10qNV0RswKnS2w9/0eUlWnvOHEvZXMr51ay/GnGkwW1gSSldXrw3
FXgjxaE9w3sfzm4L7i9Q7EV7IH+NJCHhGRu6MZ8GavyBfOC9jNZrV/P6X/JR
/jk3nkB68HsXJrpXyjlxHN4XGFymVLf9CBffgPP5rSMkq4wGc+tN2C+YO1ux
Uc9cDNebeO/jpkd5F2VdGOo+DSIfHbnz5AIuf1iPvJKfVxWfJ8yjzu3/U8/T
f/tdwOG8dCt7Thj8BDiX7sPeSwkc3vt7y3Lwu+zYc4/rzZdU7DjN+but7Hm8
2NF1o787/SDUe6CMk9/OzctuXAmH/OE8bTt7/yRweF+vieXUeyuM+z6fiCua
76j3gwqZRyIXtM0ruXPv7L4z08TePwkc3rODeymp9Q4jb7J71wbrekKdK2Au
svdSAt9A3VdJtUNm5Ea3T0Nqmun3iZiCQbO9+S1LKD82gXlw4dsy7cHF9LkR
5ih7LyXwdyw3Yvnffp0fcyP+zLMjpI0+58PwjfpzXyXwPpb3s/dYUvmQTJ35
0t87O+j9hf93Toa+x5LaT/l/5z3oeyypc61k51rTY4fFuPgwxCff6r1xHL2n
n36vgax82LL950ouH4gTHtJeqxPayL2XxL5vSxY8H/7yRZIw7+/zEnUk/uGw
IaYjuX4Kfp2Lokhd8GIxzJ99T4Tkz0q+eno/d84B92ftwtzWj+X8EPY8D+PZ
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
aYelet+sX7To+STnblKdYuw7ObJ6wTwnEvWCcV3w0Qb2dh3vSOfR4JM9E9y1
FtRyPOCoI4z7Bm5a1Pn7DU2e85IrPnbwtMqv4jix7/Q07uyR4JHPcYJ3OzZo
rm8ex0N+zubqyka3CzhOxiHqNsvdmMG6xuSlpTouc5JY91yqv9HgcFHTPqr0
A1Mn8p8dIQ+v1XA+Y31AXgbOX8Cz3tyw63SmKeq5S3nDq2ucUjy/8z3Fc9fs
axGd5fWZHM9xYVb347f7ZvO64DpDshep/pDa436GRbw2Prk8n+3BSzY3Gdh5
uaRjAl7++khKnkU2427BW08/5/dc6yf7x31w+WuH1latol/2/W5i38d1GS9v
NGB2X0tJj1VuD2A8aD+yi1tuVZdv5PJ9H+NE++zMyodbmqr8//ZT7l9OrX03
rNYrZf/gjs5u7dLPFTLuk/noXhdmtKvUYP/UEzqxpf/1KjX2j+du3MItzeSY
1D/4qSzDlna1Uv+MD5z2NWrfci32D64/f/rbn1N4Xc6fPy1Da2d3lvoHf+Tk
Pm+jVyHjWcGnGl4d33SyNuYh+eii0GlBodq8LviGmDZVHY9oKuHvwv7SIX1P
gXMzb+Hn+cj5s8O3972C1lmKh/Vw1LPB86pp4rS+qn0e8isknqta7pTD8wNe
94jIl4ffCfyp/hjvCXr+jNfEdb2zUyc06lVLnXr0/+PAcrP4r9+YvwF+de7l
6+r5XK843zrG7hkcsL6Q/m2e5wZm553NyYf/+RcuP+dtLM55RT4b59uivK0J
G7UL6e8F1ws+F+gSXkQ/Lbj1x76TH2/XUEKfF/MkzO/gh9nOhagX8gvHdx/t
n7Ds9dueFDGfATxYcOj3gScOGTOrz0Et5eN6OL4Hea5q/If5aH0t5X0ZbyI4
9IIx39wf6jpk1RUpnIVdCp4SWNm4oEUR8k84Pz1sdfvlvNYWdqAU/5ujprZc
GaWtRH4d438Nh6zfOVJbiXw88Oj7B9K03bWVyMPHvj/3Wcyw/Cu+D+TzQU/M
h/q4fT3zAfsL+NE6gym9nqopcS6A5/t5ySTnnc2L8dzJc3cfNdNoXYR8e/JG
S1969oj9zuuC9+5abOsf9535+eAvNcdM2NZGE9clT18RF7RHTUOJ/Bw8r+yM
ox0KtUuYnwOeKzh0t3mO/DZn4raSQtSDITcXHPk5nJ9fQ/te6V3I/Bw5x3sN
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
qFPHOMX/AYxDJTs=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1nAcYltP7x5/32c9rJorMQohE9hZF0qasKCOjaJFCVlnZslNoIcooeyZR
MrJHdkJCsvWz/t9P3/O/rve5zv3ezznnWefc5x7f+zQ9bmD3AXEURY8WUZSo
/CKLol9V3ppG0RjRu9ai6A/R/+p8a9HzyiiaLH4n0U1Urqr/G6gcVlejKoqe
UWe5yknidVSddVU2UNseOl1T3Ua6SDPx99H/ReI3EX2g+O11jRPEe03nF4u/
vvgHib+T+HuL/6D4s8W/Sf/76lrf51HUSvztdK0N9X8f8S8TvYraXC7+bqq7
i/5fq/v5UbzVdFwr/p7iNxC9le5rjNrdq7KHrrWFyrXE31rlWeIfk7r+d7ru
neK1V50GKueo/c/wVR6pOqNFf6U6v+r/1qrzl/popv9X6roP6/9Rqe/na/Em
qH0H8dZR+Z7464qeo3KG7nNX1VmqZ3o/9TuZq3Jz3ccBKq/U+VL9d1Kd00X/
lrv+TNG76/wBoh9X/3uIPlD0E6LfV/1H9b+P+rgq87f7Qf930/8TVI5V24vE
30L8j7mG+pwo+krxLlH7HUQfrb6u0P/tRC9Vnf119BLvJZ3/UP3vJPobtXtX
9Eyd662+d1C5i/jTVGfH1Pc5XfSBoo8X/arob1T/Df0/U/V3U9lO/MfE/yD1
d39Z5Vuqs534J+k+/+Na4heit9axLe9c131e9VYR/0GVnxV+n+30/ltWHhsn
qrxA9RqK/4zqfKNnWVv0szyHrt1a5YWqs7raXKf6h6lcU8etotuov2N1/hbR
y3Vv54j/k9ruq/q99G3XSDwORuamL8zd92qiNxR/dZU/8q7U7mwdy3XuVpWj
cs+zUcwp8dbUn0X6f4P4D+j/2Mxzjzm4oXh/6Xrd9H+C7mcv/f9CdV5VnUr/
O/J9dH5vHduon1NVHh77Hn4M93C+2hytZz1F/HX1f0u130//h6jPSap/kviN
E7/r1pXn5zK1OUT8VUV/Jf7o3G0vy12H+t/r+mupbJj4Xhsk/o8saRjoL0Uf
E/s/9IG67lm67l3q4yy9ix91LzeqPEH8+eJ/pT6v1rPtKP5y/d+Ea6r9/fpf
qd45zHfVuVl19havpvImHXuJ/k/1N+abqU5H0Ynqnyp6uK51o+rsqTr/iH+9
6N1ErxDdk++vOp/rOkfqHrbX/wtU/27V6a46zVTW1c9I1dlRfa8hejPxhqtu
Q9F3iN9W/ONSj5mf1M91ekdT1fYG1btG9AbiXa2yceG5c6b6H6dzbVWnrrIf
skzt/9H5U0R/J/ov0ZsXloe5rnOi+B+J/yPXEj1P9JeiTxa9WPTvom9XXweo
z9VVHiv+S+J/If6t+r+v+KnK8TraiV5V5Z+6p61Ev6X+T1L9T1T/J9XvrvJs
XXeh7ntP3euWKvsjR9VmZ9X/VeevyTwff+b96fiIsapykI7HRGcqh6ivV0W3
U9ulon9ijCOT1d9OOkap/c2qt4f4b6t8XH2eKF5blY/p6Ms4VXmgjj6id1d5
u+61qcbDHSrniXe8jgfUfqDaP6oyVXmornGP6K1UZ37p8fdK6TnLfD1Yxy2p
x+nn6jMR8Y/6+U3/z2auxJ53PdTP6+Jfq7Z3qr6qRtfovvfR/xWiL9b5G8Xf
RvRzKrfS0Vz0BNW5XvQGopuon49Vb7noq1TekFo2TEstF5ijV4rfQv+3ED2R
+aNrLhPdWMdTumh//e+k8gkdp7AmqnxUxwnIIpULVJ6GTFP9vXTv54g+m/ei
/nfX/wdVnq7+n9H5usrDdb37RbdkndR3b6R77KJ643PLkHEqN9S5HcW7W+Us
1rPIdS5R/a665qv6phcju0W/LPol1ky+h8oXmR+ij1U5Q0dv0buqfJhxKXpP
lX/rHvqrv3fV9ympv9ffunYj/d9B589W34NUZ774U9X/C+J3V/05KjsVnneb
iF5Hx/aqf4Hqn6x+7hb/L/VzUOH52FjnH9L5Y3TdnVW+r/+nqZ8PkA2p30NN
5c/Mpdhz4SMdg0R/rLKL+K+o7dWi99TxP9UfwVxTm4bIlsxyDvnHeHpHdfqF
/i9XndXEG8daWlkOnMxapv4yHd/q3Cq8O9VfU+XajDPkpcr3uD/xdxI/LS3f
GojuId6hOr5WvRfFX8I6ovu5UHShOm+Kbql30Sm1DCzF30/8hSr7pn5vv+s+
LtV9byP+l+K1Vv0eyEX1vy/zR3VmM/dT6xtPi26TWn97QfTlattKbZcwhwrr
Hn8WXgeRJ5+mXi/Gib5Ydf+XW38bpP4v0/+W4n+lOnvpuv25J95N6XEyWOUl
mfWoL3RulK7XQnRntf9Q5waE77KT2h6t8zepbU/xDtKxlPVb5cE6vhM9VvU2
Fn2byt1U7ybRv4q+BX019lrcBL1Q9JUqm7P2x/7W16jvRurjHpXjdOgXXa17
OVbn++j4Xf/3UL0/VZ6DTBbvCvRkZJz468Ve11roaBhbhmzHeBV9ncqr1OE6
qnuXyhaV7/kZ8S/Sf72u6NrEMumXyLrBRDF3Q39U2Ub1vhfvUl23r3iFjm3U
R7PUMmOM/m+ic4N4B4xf9Dn1NUTlfB0XiR7EvNW5xapzbljHG4Q1+hL1I1Z0
nf6/XPrdPqVymJhvij8UOa1zlY5tdd3zVP9d8ddVuXNqvf4hnVui+hvrWq/z
3Kp3ovhbipepfRvxx+hZTlW9N2KvTxvqXG/VWUt1p+rcK+Ifr/Lf1OOfdf4y
ffe6eG9Utj8+VZ3zmGPiH656U9XHnaIvVp2FlXXYF2Prsavp/1x0GpX35J53
fVT+nVo3QEeYL95rOu7T/6HqZzOdO199zla9n8TfW3Waqf18xieyRHV2Em89
0T/HrjNB19pe5S86Joruq7Z9I9tQy2PXo06m8nMdj6mvM9RPU9ZdXaup+n9Z
vE1UDhK/jfrfnDEVbC5srwHi76JyffHXqPzeeH+riz5G9Aai78K20bU/YQ3X
dT7R8ajajxY/03s/S3W2CvwR6JHib6L6b6v+tNzv9jSV14i/Ozq++M9W1iP+
p/J95JyOAWpbBX0GvWas6h+HHaM6W+j8O6xBOvduqP+Q6FWCHoI+cqXq/6ln
f1L1FzK/dQxlvolf6PxzlfubJ/5fqcfLm0EnhPeyjntrfmaene87TW3fVJvP
K485xt7a6HXi38eziR6gd/BRbLuOe3srPMtH4R6w3Sg/CvdD+WGg19J9HcSY
UV/91Wdble+pz5Y6v0zH9eh54v0o+k90hrBes26j++wc9J8DK9MHVOajG32s
tm8wxiOvxVvo3Ar100rl69g84r/GWi3et8gu/f9a5RLmKWNJ55aK/gE7K/Av
Qo7ErtdNdZoG/RY9twz9PFtzv/Q/VuVgXW9kYrm9V2oZ/Iz+P0Z/ied529Rz
a67+D6nM/wW7mLElei/xtkcOBrpeuJ8zRL+ia8wQPV/lUP2/NDGffpD7f+e2
Qy8NtuhB4u8huoPKfbABE9tiO+rYKPFa+YPu7XsdY9Apw9g7TfS2es4j1cct
uc9T73n9b642b9Ysk3flW+kYov+viN+FMa1vuzPynjGsfjYX/w2d30zlLuL9
wXgWfwfWFh1TI3+r/+l4X/WGhfEwW3RvPfvjOj9d19pU7U8Wb0rp7/uc+CcW
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
hnYqPa6YO9g6kxmPatMcPbTm8Up8466aZWtSOK7K2sr4nRjG8CzmqI7J+p8W
bsd43w/bNDGfMTgpjMMDNE9O4h5D3BUfKfOkXeF7IAaPbEJGFantR2Qw+tyF
Qd6ic56T2jZcW+UjepZV9D1uIAaOna1jvOrUeXbkSc1jdbzqfqny79Ln/2UM
Jh7Dt6X2B9/BuhfZ/3q7jq6i/8n9/ReltheR4T9ib6n9NNE9dc/3Jo4Fv5I6
hkEs40nRx1T2ieHLIi7CnH08tbxAbhAzfrBy/PZHlWsgzxhnOveX6nwm+i1s
m8L+UnzvG5eWpQeLnqR2a4s+S3Wb4idXeY7eQ7/UdX5V23XF3xG/Z92yDJn2
BHKm9DvvWliWIdOIl9+ZON4xXfRqzCfmADK0snxaqvJ+7G3R31aOP1+rY9PI
Y7uz+hpRd4zoyprvb3Dqd/UfNkDm50PujMjcN7KpY2lZfR3rpOqtx/oW5OJV
teAvVv0u6GQqvyxtK80uveZgd6yMuyS2z5nnaxWWjdgLqxX+tr8wX0v3ewnj
TnUnoQeo/rb61q+pfFL9nyne0zX7id6sbKNhq7XOPQb7oZ8n1l3RYS+KvWaP
rFlvPS/YaCN0nFezjxi7bZ/AJ75HbAWd75rS179HZR/0bvEWo1vp/xzmG/JQ
/29T2xeZS6JvjX2OONVLrLe8p9LnJ6nskJs/U/c5tbTugP9m48pyAj/rRLWd
ENufS2yNeB9z74jCccVWajdd7Q8XfxuVk0vXxQc8ovSz7RJiF3NrXlOfyRyP
w380EdtOdKPMegoYAPTa50vXoX8wBdjsz6vtDqX9COgS2PTY9vgWsrCegKfZ
vbCO9EBhO5+23dV/L+aV+J8m9ruwPmBH8d3QXdBbhqne5yrPzOzr2i12/8PV
z2DeJfq1+nlRdVZLbb/i78DXgd8f2dsotZ6Fb2C0jp56z5epPIO5lfv7n5bZ
t/kr31597pzb1j9d/HPV/h310zh1O2ITn0W2f/GftMEuq3xtbOhLYuuTtL8z
t66IzwFfKf4HfCuP1+wbRy8/Ve/lpcjfZZ3c85C5+mxhH8iz4v8Vef0i1oKf
4T+Vd6f2g+APAZtxfOz4ThbWeOQk/vl/Iq9ZxEi2UL1VVY5FtoleRfQtifEX
YEGI705NHa+7LDUOZa2aY8Ob6z9m7E3oabnnO7GGo3TdI2PHjJcVlgm/6/zj
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

           "]], Polygon3DBox[CompressedData["
1:eJw1nHkcD9X7xWc+s39ItGhRWbKWFqF9k0QhLUTRgrQoS4gSLYTSQlqVlPZN
eyRJVGjfF21EqbSQdn2r33l35vfHvD73mXvnznxm5t77POecZxr2G3LM4EoQ
BCckQRDrd3gRBF31uyAKgh2rQbC97LVqcI321cqDYJc0CEbLflp2qgOaq/5P
2Sfr+CPU/l61eS0MglO0ba/y9aofrbafqL82qn9Rvz1k76r6Q3T8UPW3WseP
174hKg9W+4vV5m3ZnVTeT31cqbbnqf/Vsj9Vmxqqa6pj18j+QvWvqP5UbY1z
XzfXP06/B6jNZ2rzjvo/Xcfdo/O31e+lssepfRuVr1P9+Wr/sdq3Vv0s2ffI
/kv2QbKXqc8+at9Z+/7JgmCRjhkW+Z6MUPlT1XMDT+c/qvy1tsmyq7ref9TX
y2pzgdpvp22Kyl/omnbWuReozd2yP1L7QSrvo33vqXyHjrlXff1P7Q/W+deq
/e6qG6g2k9X+A20TVXei2hyqusGyV6hurOxBKr+qPk6SvZpnqPIn2qdugiZq
+5X6flH7jlH9Ku2br/JZ2jdG/T0he3+uV//xH5XvUfsvZS/W8SNUv07HjFT5
bO27UPZitTlQ5UN5xrq+C/V/18leqe0t1b2ltg/pxHVlv6FjT9O+LVU+Xdvu
Ku+m/m9T/cc6fojqz9C+XOXPdFxNlZup/mu1ra3tFdXvr3PUUHmHwtdyu9ps
ofYHaZuqutE6/7eqO1j2NbIvkL1Wdh1tr6r9KWofq+4u2bNVDtV/e53/PZ1v
vP7PkYHfly0KX2sT7b9K9cP1+52On6Z9O6m8n+qbq/0tKt+t+jN4v2WfoPrW
Kg/T/q/V/lLZLVTei+cle5KuaU+V31ebc2Q3U3mKjr9R93uQ2r6jPsbKfkN2
pLY761q+U9tz1W692s9Sm51VflPbRWrbUtutjB1t26puF7X/Qe1f0n/spfbb
av83slfpdxvVt1T997If03EH8iz0u6f2fcgxar9M9s06/9U6/lWdf4C2prnv
/xLGt47ZVOVW6u9C2R/I3kbHvyP7Eh27j7Y7VH5e21CVv1Cbc1R+UW22Vl9P
y+4l+wb9v7N17Ntq84v6m6pzvKH6M7XtpPJI7euj+qWq37nq8TVUx7ZT/XKV
W3M+2RfL3kPlG5kv1H4l/0ftT5O9G/OLzjtT9gDuoeoO1zEv6/jNCv+X/jr2
FtXXK3yt47SvqvpbZE9R+Tsds6/qV6ufljrXYrU5ifGn+u6y79f7dZbqb5J9
mdp/pfZ7yZ4iu7fsJbJ3kn2O+vxG7Wdo33b0r62++rpI+8byrqp9f9W9rva7
qf2+uj8Xye6j8xay31GbFmrbXNsG1U1V+36qf03td1X9Cl3HX6p7g2eqYz5W
/c2yx2v/7ar/SdfcRnWvqO5U2WervzWqn659tVW+TVtD3lftu0jljTquqexW
gcf0ZPXXQeWndb76vO9qs0ptJ2tfDZWnqX4g4131rVR/OXOC7Lmyd5C9Uudv
yljQ+Y+V/YXsZowl2d1lz9Z/miT7S7VPZa/XOTfT+R/QvndVnqj+9lJ5tuq3
Uf2G1P3vreP7y56g+j1lP6T6rat+nzbX8Q9qXw/1fYu2YSp/oPrf1fZSbW1l
Pyh7K7Vvkvtdn6tzDZX9uNrfoPp1qq8he7za7yr7Xtl1y/FRW/3fqX3d1Ha6
7O1kn8ccpHI9bSer/Lj6G6z23+u3pupv5h6pvA3zs+ofU3mQ6iep/wNU96j6
ryf7EPV5Ne+n/t8msn9Qu1o6/hbGjMrX6/htZA9XH+fzLHU/mnC/1b632iey
91T9o9r3ntpvJbub7Eayb9c5LmdeVVmnDa6TPVfnu1vljSrX0vEXZZ4vrpd9
ruzOsm+VPVDHbSr7Dv3+xdqv7VKVt1ThSPW/ueyZsi9U+61VvlbHH6f2x8l+
SPY5qqsj+2ld8zLZy3VtF8o+UPbvsuuqn8myR2fu6yodP0J2yhyq/h/Tvvd1
zHNq30Dl5urvftU/JHtv1fdQ3WFVr2+M9dpq80Lu9bCz7DqMAZWfVv9Pqhzp
+Npqf73ss8r392fdlH91vvasbar/SfYzqn+H62Nt4P2W3UL2XZHn0yu0dZH9
rOxGqp+s+p1k3x15Pn5f57xTz6qVtv/xbJk/uDbVN1P7q2QfK3ux7Kayj5D9
W+g19HDOr+PfxLfQ/7tI9Z/pd6PqlzIf65pqqc9jVO6g8obC88vPqn9Z+25W
+WDt+0n2ItkHFX5/1sl+huef+/1dL/t52Tep3E/9zVf5PPW3uc73lo7ZEPpc
l1U9X/wa+ppmqjxP7V9QuabqN2N+0f37WPf73MBr3H2Z59Yv9P8qqv869fhr
pfYnyO6j/vuq7hn1ebzKW6r98apfpnYPqv4S2fVkT4/s712d2pc6U/vexJeU
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
mOw9Gd8Vr6FohOBgmZ/YB18MPwt3PLNcU2kPNwinDLcMPs2zgTNEg/R4ZH7g
Ge07IfV4gJ+Gk4SbfLyMVRpp3166xmEcUzGnBbcFBoK+Ap0F2MhThbEYeNgb
qh4fcLtoLtBe3B/Z1wMP6ZkaI4H/hQcGOxmh9p8HPsdxpU/A/+D/gIWxJhGb
jQq8VhH/oM9Ep0lsBC8DlgqmOivy/IZ+6IrQmqEZ2moFnl8ng1dG1iptDKyX
uDk2H3iKzrdDat4I/ug61vfIazpre+vYfDl8GdzVlND6KebP7wJriuBwa2fW
73WMrd/ZNLM+7zDZTap+H8BT6uDHqe8HYus7rw6tsYIHhEthjZsWeS3AN8e/
nR+bx4TPrITWVB2UmS/uG1tvOFL383L8b22jVJ6qNiyZrIfos4hB55bPfju1
/zm1nm+f2Pq3X8BiiL1i6+d+ld2RtTe23o6Yldh1/9j6NDBPsM/2sfVO8D1g
Byem1ruA8YD1tI2tl/tT7XfTtX0tu2HVfNIa1XfXMduk9p3wPYlnXlfd1ZG1
Laz/M2L7pjvjT6v+TbinzHqpg4iB1F8ls568XWx9YphZX3VwbP1hu8xax36x
9Sz4q+g30TDiv64u1+5jwTBlr80934IpgC2wpvMuHh97rd8hNjYERjSuHC9o
ay4L/T6/W8Yi4BWbJPYRwH6HlL4DPh2+WM/Yvh5r/OrQczNrPz7Cl6HnYnwH
+Iu9Q/OVA1L7aPh+x8b23fBn26t+Rej4BJ/sC5UPSO2r4XN9FXquwxfDp+P/
nhLb18NHA/t8KLXvhs+I79hD9Xuofq/MeqATYuvjOT++4jGx9Z77ZdbLnkjc
JbtLZn31WbIPgJ+TfZ/sM2PrGw6VfZvsAbH1td+UsX9PXeNOzP+ZfcOTYut5
28ueKftU4jbZP8puqrbLZW+LXfqqfbRvj8S+KljOkbLrMTfnvn+/qX0LfLfM
8WCn2Pq7jpn19mfExgeT3LEmL2FLsM7MWtfesfMXiAc6h9boEK8QpxKfv6pt
F8Z/4tgYDuG2xDE82NaDqWP7f+PSDs21kDfxZxmPwYWgiWF9gD9Ab4/Piu86
ITW2e2lqG5+2YWpMGWwZ3RPYPZga2Nqc1FwEegG0A2Cmo1NrVPCXvq84f2GX
xGXwO3A8NAVoC1ij0RvAP28aOQdiu9Q+CL4IGr/NEusM0BvQBn76wsLY9Aup
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
fpkY/8C/RhODNga88xP1939kc80j
           "]], Polygon3DBox[CompressedData["
1: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
98X+Dw8DC+4=
           "]]},
         Annotation[#, "Charting`Private`Tag$5890#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0r9LlVEYB/DHe6/Xe63UFktLJdDNH0ggDioNEYEtpZM1RE1dUAcFFSGi
EMWhHyAmkaOtDelfoNAalpZaVkNTNEVDFOjniMPh832e97znnPfce+HO6I2R
soh4YTRnIlLO8g9XuZOPqJELHnyVm+QfbOcv9vIfr7FYEXGTdaw3SnIHp9jN
OV7ic17lKw5wjXcLEZv22JAvFyM6sxHT6v/O8F7vdTqL+kwu4oP6LLd4X69O
3pYfmFMqp96B/FHvonWG9R7qfVLXm7vDczxv7MoN3GMjP3PG3Kl8uoiIL+jh
mDVm9TPyvt64ei7didzkvW+c0JvXy5rzXf3GGfbVk75xU13iOm9xlde5witc
ZB9n2cVJtrHVuCfXcogV7Odf5+vhT7bxrfsbsl+j/M6cvH1b1NXqHMvVy85V
pX7JU+k350ku8QQXWckFFtPvaO1B7xbSfcsD8jPPLB9Pma7oCX12PGYu3aHm
7czR1cUj+bSQSXt4+Pv4P3YI4MlEDg==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1753, 2243, 2244, 2235, 2249, 2405, 1056, 2345, 2250, 2251, 
       2237, 2346, 2697, 1913, 2236, 1989, 2106, 2676, 1914, 1754, 2477, 2531,
        2107, 1915, 2252, 2253, 2699, 2515, 2108, 1916, 1991, 2475, 2532, 
       1993, 1917, 1992, 1159, 1995, 2427, 2642, 1994, 1979, 1997, 2646, 1918,
        1996, 1980, 2109, 2677, 1919, 1755, 2533, 1920, 1756, 2534, 1921, 
       1757, 2535, 1922, 1758, 2476, 2536, 2245, 1923, 1999, 2647, 2182, 2183,
        2001, 2177, 1924, 2000}], 
      Line3DBox[{1759, 1981, 2348, 869, 2729, 2238, 1982, 2350, 870, 2239, 
       1990, 2110, 2698, 591, 2240, 2478, 2537, 2111, 1925, 2003, 2479, 2538, 
       2112, 1926, 2004, 2648, 1983, 2113, 1927, 2006, 2649, 1984, 2114, 2428,
        2643, 1760, 1985, 2115, 2429, 2644, 1761, 1998, 2539, 1928, 1762, 
       2540, 1929, 1763, 2541, 1930, 1764, 2481, 2542, 1931, 2010, 2653, 782, 
       2246, 1932, 2011, 2654, 514, 2012, 1933, 2247}], 
      Line3DBox[{1765, 2347, 2430, 2718, 2406, 2349, 2431, 2719, 2407, 2002, 
       2256, 1072, 2013, 2480, 2543, 2116, 1934, 2014, 2655, 2005, 2118, 1935,
        2016, 2656, 2007, 2120, 1936, 1766, 2651, 2008, 2122, 2432, 2650, 
       1767, 2009, 2433, 2652, 1768, 2434, 2581, 1769, 1076, 1770, 2482, 2544,
        1937, 2124, 2678, 2023, 1938, 2125, 2522, 2720, 2024, 2254, 1939, 
       2025, 2661, 1986, 2026, 1940, 1771}], 
      Line3DBox[{1773, 2435, 2582, 1772, 2352, 2353, 2721, 1774, 2354, 2028, 
       2257, 2029, 2709, 2296, 2297, 2208, 1219, 2117, 2015, 1775, 2657, 2017,
        2119, 2018, 1776, 2658, 2019, 2121, 2020, 1777, 2660, 2021, 2123, 
       2022, 2659, 1778, 2436, 2583, 1779, 2437, 2584, 1780, 2438, 2585, 1781,
        2483, 2586, 2030, 1782, 2662, 2031, 2032, 1783, 2663, 2033, 2255, 
       2034, 2258, 1784, 2645, 1987, 2027, 1988, 1785}], 
      Line3DBox[{1787, 2439, 2587, 1786, 2416, 2417, 2733, 1788, 2418, 2035, 
       2298, 2588, 2484, 2395, 2301, 2302, 2300, 2485, 2710, 2299, 2036, 1789,
        1250, 2037, 1790, 2664, 2038, 2039, 1791, 2545, 2440, 2589, 1792, 
       2441, 2590, 1793, 2442, 2591, 1794, 2040, 2592, 2486, 1795, 2487, 2593,
        2041, 1796, 1257, 2042, 1797, 2665, 2043, 2259, 2044, 2261, 1798, 
       2666, 2045, 2248, 2046, 1799}], 
      Line3DBox[{1801, 2443, 2594, 1800, 2419, 2595, 2529, 1802, 2420, 2421, 
       2303, 2596, 2308, 2307, 1803, 2305, 2306, 2711, 2304, 2310, 2309, 1804,
        2312, 2313, 2712, 2311, 2047, 1805, 1267, 2048, 1806, 2546, 2444, 
       2597, 1807, 2445, 2598, 1808, 2446, 2599, 1809, 2049, 2600, 2488, 1810,
        2489, 2601, 2050, 1811, 2490, 2700, 2260, 2264, 2263, 1812, 1274, 
       2262, 2357, 2356, 1813, 2731, 2409, 2410, 2408, 2355, 1814}], 
      Line3DBox[{1818, 2547, 1941, 1816, 2423, 2548, 1942, 2424, 2051, 2149, 
       2516, 2685, 1943, 2380, 2379, 2726, 2525, 2327, 2381, 1944, 2383, 2382,
        2727, 2526, 2328, 1945, 2126, 2492, 2549, 1946, 1824, 2550, 1101, 
       1826, 2551, 1947, 1828, 2552, 1948, 1830, 2055, 2553, 1949, 2127, 2494,
        2554, 2329, 2384, 1950, 2385, 2276, 2703, 2517, 2269, 2399, 1951, 
       2128, 2523, 2722, 2358, 2270, 1952, 1835, 2556, 1954, 1837}], 
      Line3DBox[{1836, 1953, 2555, 1834, 2056, 2266, 2702, 2495, 1833, 2267, 
       2268, 2265, 2521, 2701, 2324, 1832, 2325, 2326, 2323, 2730, 2402, 2401,
        1831, 2493, 2608, 2054, 1829, 2607, 2449, 1827, 2606, 2448, 1825, 
       2605, 1100, 1823, 2053, 2604, 2491, 1822, 2052, 2321, 2520, 2715, 2322,
        1821, 2319, 2320, 2315, 2713, 2317, 2316, 1820, 2318, 2714, 2519, 
       2314, 2426, 2425, 1819, 2530, 2603, 2422, 1815, 2602, 2447, 1817}], 
      Line3DBox[{1839, 2450, 2609, 1838, 2557, 1955, 1840, 2057, 2150, 2704, 
       2277, 1956, 2386, 2278, 2279, 2558, 2151, 2280, 1957, 2389, 2387, 2388,
        2559, 2330, 1958, 2129, 2496, 2560, 1959, 1841, 2561, 2451, 2610, 
       1842, 1110, 1843, 2562, 1960, 1844, 2058, 2331, 2716, 1961, 2130, 2497,
        2563, 2332, 2390, 1962, 2391, 2281, 2282, 2564, 2271, 2400, 1963, 
       2131, 2498, 2565, 1964, 1845, 2566, 1965, 1846}], 
      Line3DBox[{1848, 2452, 2611, 1847, 2453, 2612, 1849, 2059, 2152, 2705, 
       2283, 2284, 2132, 2285, 2499, 2567, 2153, 2178, 2179, 2133, 2286, 2500,
        2568, 2154, 1966, 2134, 2679, 2060, 1967, 1850, 2569, 2454, 2613, 
       1851, 2455, 2614, 1852, 2061, 1119, 2135, 2062, 2333, 2728, 2392, 2396,
        2393, 2136, 2287, 2359, 2501, 2723, 2360, 2288, 2289, 2137, 2184, 
       2502, 2570, 2155, 1968, 2138, 2680, 2063, 1969, 1853, 2571, 1970, 
       1854}], Line3DBox[{1856, 2456, 2615, 1855, 2457, 2616, 1857, 2064, 
       2156, 2518, 2667, 2290, 2139, 2185, 2503, 2572, 2158, 2180, 2181, 2140,
        2291, 2706, 2065, 2160, 1971, 2141, 2681, 2066, 1972, 1858, 2573, 
       2458, 2617, 1859, 2459, 2618, 1860, 2067, 2460, 2668, 2142, 2068, 2334,
        1711, 2397, 2394, 2143, 2292, 2361, 2504, 2724, 2362, 2293, 2294, 
       2144, 2186, 2688, 2069, 2162, 1973, 2145, 2682, 2070, 1974, 1861, 2574,
        1975, 1862}], 
      Line3DBox[{1864, 2461, 2619, 1863, 2462, 2620, 1865, 2071, 2157, 2072, 
       2692, 2209, 2210, 2187, 2669, 2073, 2159, 2074, 2188, 2211, 2189, 2670,
        2075, 2161, 2076, 1866, 2671, 2078, 2079, 1867, 2575, 2463, 2621, 
       1868, 2464, 2622, 1869, 2080, 2081, 2683, 1870, 2403, 2082, 2404, 2083,
        2717, 2398, 2336, 2337, 2335, 1343, 2272, 2084, 2273, 2338, 2212, 
       2672, 2085, 2163, 2086, 2190, 1871, 2673, 2087, 2088, 1872, 2576, 1976,
        1873}], 
      Line3DBox[{1875, 2465, 2623, 1874, 2466, 2624, 1876, 2089, 2164, 2625, 
       2506, 2213, 2339, 2214, 2505, 2693, 2295, 2077, 2215, 2216, 2191, 1352,
        2165, 2090, 2192, 1877, 2674, 2091, 2092, 1878, 2577, 2467, 2626, 
       1879, 2468, 2627, 1880, 2093, 2094, 2684, 1881, 2095, 2241, 2628, 2507,
        2340, 2341, 2217, 2508, 2694, 2166, 2096, 2193, 2342, 2218, 1362, 
       2167, 2097, 2365, 1882, 2527, 2725, 2363, 2411, 2364, 1883, 2578, 1977,
        1884}], 
      Line3DBox[{1898, 1978, 2580, 1897, 2366, 2412, 2413, 1742, 1896, 2367, 
       2368, 2171, 2695, 2226, 2225, 1895, 2200, 2201, 2170, 2690, 2199, 2198,
        1894, 2343, 2351, 2344, 2634, 2242, 2275, 2274, 1893, 2509, 2633, 
       2102, 1892, 2632, 2471, 1891, 2631, 2470, 2579, 1890, 2101, 1372, 1889,
        2196, 2197, 2169, 2689, 2195, 2194, 1888, 2223, 2224, 2146, 2707, 
       2222, 2221, 1887, 2219, 2220, 2630, 2168, 2100, 1886, 2629, 2469, 1885,
        2675, 2099, 2098, 2147}], 
      Line3DBox[{1912, 2105, 1397, 1911, 2376, 2414, 2415, 2732, 2528, 1910, 
       2377, 2378, 2176, 2514, 2687, 2234, 1909, 2206, 2207, 2175, 2691, 2205,
        2204, 1908, 2233, 1549, 2174, 2375, 2374, 1907, 2524, 2641, 2373, 
       1906, 2640, 2474, 1905, 2639, 2638, 2473, 1904, 2104, 2637, 2511, 1903,
        2202, 2203, 2173, 2513, 2686, 2232, 1902, 2230, 2231, 2148, 2708, 
       2229, 2228, 1901, 2227, 2696, 2512, 2172, 2103, 1900, 2636, 2472, 1899,
        2510, 2635, 2369, 2371, 2370, 2372}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0oxHEYB/BHzssdq1gtbBRRlMGkvBQiL2fglpPCKoON8RZvqcMg0i3I
ZrsYKZOZTCd1ZiGfGz59n+f7/H/1b82sT65VRUSGXHVEPhFxzHsyYqMm4sTc
VBtxKku6Td2Vucg1Zd2W7pt7+wsPzHozx0Eq4tW+4/4mz3VpFjh0K+tybl/y
UrfIEkduP7p9t19Z0F3osnKZpD5Pij//MKB7rHxLM2e0UOfNoNuTuUQbBdpp
dPuQz3zSw6ruRvYy6t0wt+aEHGPbvc8+RD/jug7uzPVy132i8s4+wwhT9k6K
5ga555tpOW/Pkqbb3sWK+R8RGzVl
       "]], Line3DBox[CompressedData["
1:eJwVzr8rhHEcB/CPDh3uH2DBxk7MBpHtpmNw+TE45TFLkclguDJISZ1cSSfD
3WSTwW1KiqxsSjmdFa9nePX+ft6f7/fpGV7ezCcdEbFAORNR6YwY7I44k0Py
oDdiqyvi3HxNlY+eiG1d3fmOojsNuau7l0vmF9mk4Ztvct/uXS76ZpFjd1rm
sv5bXupWONGvyl/dkd2frJkv9CW5Tp/+lFy69y9Xug0S+nVVBsh6M6V7SO8x
Qo1D/aictnuUn0yQ6Otykjm7J/nFDDfM0uKZNnvuF+Qt8/zwyo4+5/2ac5MS
4+ax9D+d/wHg/jXh
       "]], 
      Line3DBox[{912, 1156, 1186, 1157, 2532, 1190, 1165, 1201, 2648, 1166, 
       1404, 1205, 1221, 2656, 1206, 1408, 1224, 2658, 1240, 1225, 948, 1252, 
       2664, 1416, 1253, 959, 1267, 1424, 1268, 969, 2604, 1280, 1431, 1281, 
       2549, 979, 1293, 1438, 1294, 2560, 989, 1307, 1445, 2679, 1308, 1000, 
       1322, 1452, 2681, 1323, 1011, 1339, 2671, 1460, 1340, 1022, 1356, 2674,
        1467, 1357, 1031, 1372, 1474, 1373, 1040, 2637, 1387, 1480, 1388, 
       1050}], Line3DBox[{913, 1158, 1189, 1159, 1192, 1167, 1204, 2649, 1169,
        1405, 1207, 2651, 1209, 1409, 1226, 2660, 1228, 949, 1086, 2545, 960, 
       1093, 2546, 970, 1100, 2550, 980, 1108, 2561, 990, 1116, 2569, 1001, 
       1123, 2573, 1012, 1130, 2575, 1023, 1137, 2577, 1032, 1144, 2579, 1041,
        2638, 1151, 1051}], 
      Line3DBox[{916, 1161, 1060, 2677, 917, 1194, 1067, 2539, 931, 2581, 
       1075, 940, 2584, 1082, 952, 2591, 1089, 963, 2599, 1096, 973, 2607, 
       1103, 2552, 983, 1111, 2562, 993, 1309, 1446, 1119, 1004, 1324, 1453, 
       2668, 1126, 1015, 1341, 2683, 1461, 1133, 1026, 1358, 2684, 1468, 1140,
        1035, 2633, 1374, 1475, 1147, 1044, 2641, 1694, 1695, 1154, 1054}], 
      Line3DBox[CompressedData["
1:eJwNzi1LQwEYhuHXT1DQkwwrokEwTDDYhAWxKMzJLDbBHzARhh+4P2BcUYMy
g8GyzbANDAOVFYt5SUFwaYsDbV7h5rnf5znncBYPj/KFkYjI4mosYmk84mcq
4pqneZ8/8DVelanpiHX+zBd4j19ORGzIjm5ZN+Rl3Zb80K3qRt032NX9+WZX
n7gr2NfdeuZbdzwZ8YJ5fUNW8WiryYG9KF+xYm/KOp7wazuRb8jY7rzT4jvI
4QKn2NTn7G3k3Xso4QzbtgN9B5/4wpx/m7EV+Dtm+T0SnOMfygMquQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzzEvQ2EUBuAjt5Uw6Wqhi4SGbjqSGLoifkBJTBJtIv4AicFoqN5NohaD
0SDU1EXCJBH9AWXRSIcKk+cOT8573u/my3eLO/XN/bGI2KKVRMzlIvoTEam8
KH/JV/Kz/MK3/cY+PRnxbu9xZy/aP+TTfMSn2dXN60byme7H3B2PuOda/2Am
+pQcf+7d03V4ZEp3QYHE93Vdgxl705w1L/Xn8hoLHLCkb5lls+08lauUOGRF
f8sqA17J6098uy532GDIGyOOnNXMLtvZv9Djl+PsbeYTDSruWs7eIv8DqNIw
ww==
       "]], Line3DBox[CompressedData["
1:eJwNyj9LggEUhfFb6gs6RX4Ci5A2WxuC+ggKtRs4RZlEaxFBUIlQuNReW41B
b9DW0mAIgWC7/YEaWmzrNzw8555zS/Wt6uZERKzhIhNRzkaM8hGXcio/4Nt9
5e7JB7mI3ULEi3yrG3LDfah/k1PdB5+4P/k4iZjFqZ+x+1z/x23dHNr6Buf0
Z5zwPS+iYyvzBqb1XS5yylnbEs+jhZL+GjMo2N65h7BV+Ab7+gX+Qh+TtmVu
6u94BT94RWKr8iNq+MUAef2R/7r8hHWMMcSefsq+LT+jhVX3Dv8DOWcwQw==

       "]], Line3DBox[CompressedData["
1:eJwVzj9LQnEUBuAjaaFzLjWEKdFcH0Fnh/aWlmhJ2qKloARLEUUnM8hAaAha
W/oC9tf2JpcgaK+p5w4P7znv/XE5hZ3a1n4qIqoM5yIu0hFNvrIRS/MRPfMj
J+btXMSxXGaqO81EXOvq9jMKfOp3k863c3uDVb71e/qWvmVvUuJP39d1zR3W
aHu3oBvQT27gRrcuF3Uj8mR0MzcXzbcc2kvyR7ch7znSbcpfXVke2B9khYn/
PfHMWH8pB7zwyhtXDHnnzpup/EjuYcSK+/8B+i8tGg==
       "]], 
      Line3DBox[{925, 1506, 1507, 1195, 1509, 2647, 1508, 1196, 1172, 1214, 
       1511, 2654, 1510, 1215, 1173, 1234, 2661, 1174, 1235, 1175, 2645, 1246,
        1666, 1665, 1564, 1260, 2666, 1421, 1261, 1735, 1736, 2731, 1737, 
       1679, 1678, 975, 1105, 2555, 2556, 985, 1113, 2566, 996, 1120, 2571, 
       1007, 1127, 2574, 1018, 1134, 2576, 1027, 1141, 2578, 1036, 1148, 2580,
        1046, 1397, 1398, 1399}], 
      Line3DBox[{1047, 1149, 1380, 2635, 1037, 1142, 2675, 1364, 1028, 1135, 
       2623, 1019, 1128, 2619, 1008, 1121, 2615, 997, 1114, 2611, 986, 1106, 
       2609, 976, 2547, 1098, 2602, 966, 1091, 2594, 956, 1084, 2587, 944, 
       1077, 2582, 935, 1070, 2718, 1731, 1733, 1732, 926, 1064, 2729, 1721, 
       1554, 1720, 1719, 907, 1056, 1658, 1565, 1177, 1505, 1504, 1176}], 
      Line3DBox[{1048, 1150, 2636, 1038, 1143, 2629, 1029, 1136, 2624, 1020, 
       1129, 2620, 1009, 1122, 2616, 998, 1115, 2612, 987, 2557, 1107, 977, 
       2548, 1099, 1752, 1751, 2603, 967, 1092, 1750, 1749, 2595, 957, 1085, 
       1748, 2733, 1747, 945, 1078, 1671, 2721, 1670, 936, 1071, 2719, 1734, 
       889, 927, 870, 1555, 1164, 908, 2697, 773, 1553, 1155, 1667}], 
      Line3DBox[CompressedData["
1:eJwVzjEoxAEUx/F3HUe3WHRSUlds1Cl1RKHcxapQYrliUSxWm0FKMVjOIkT/
Qd2xy3iz2MhoM1gP+fyHb7/3vr83vGJtd2knExHr6O+IGMtFlLDVGbGJvPkw
H9Gje7e/YQXLqPJd+pxuVI6gylcwp8vaf7MRi3IBDf6AH5cZ+7euIuexzSf8
MP7wqZvlT/kZeckV8JP+oJvmTnRT8pzrRhvPun1+kp/AA9r+q8k639Lfmm9w
jy/dEL9hftRdyys08aEb0K2lt7qy/RVn3Itc5RO+ZH7CHS7sffyRm4LsTf/j
j/k9rmiuY5D/B7sbLgc=
       "]], 
      Line3DBox[{1052, 1152, 2639, 1042, 1145, 2631, 1033, 1138, 2626, 1024, 
       1131, 2621, 1013, 1124, 2617, 1002, 1117, 2613, 991, 1109, 2610, 981, 
       1101, 2605, 971, 1094, 2597, 961, 1087, 2589, 950, 1080, 2659, 1227, 
       938, 1073, 2650, 1208, 929, 1065, 2643, 1168, 914, 1058, 2642, 1191, 
       1662, 1661, 1560}], 
      Line3DBox[{1053, 1153, 2640, 1043, 1146, 2632, 1034, 1139, 2627, 1025, 
       1132, 2622, 1014, 1125, 2618, 1003, 1118, 2614, 992, 1110, 982, 2551, 
       1102, 2606, 972, 1095, 2598, 962, 1088, 2590, 951, 1081, 2583, 939, 
       1074, 2652, 1210, 930, 1066, 2644, 1170, 915, 2646, 1059, 1193, 1160, 
       1561}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
4e3F0eeSDDx25P7Yggph3rMoXHYykw1NKw5ax6sL/w6ClE/lE51g6TDj6uFc
PnwMs7r8SLYDn4qtM14wuxsSVqqHNCzhQtbW8qVNtylYmhjBOl7WAcLhAU56
Q7Arw7wmubEK3fcV1hurCucLoi9/+KMvt/2lTuy+HXkSuZcHql8NH/lS+zE3
dZxxs64dNpxovqQjNgzBN0+uXFAdjm5nbPvfLO8ENtFPuSb/9NPZRD+1vtJ+
YGwHH07FdbUvFH7OIyeK6qXl26HsMM9yffUQ2JvE561ZXQGyndnlVdR28CL6
nT3R78KIfrfybRnHVI+Fv7/t8Nu5qhUeJJaHN6swQdIzbJP/QRpOenDe/1kU
HU/JrM/TdqHCmEhwZrQqA8c3dZyGaCr6ty9oW3ubCqavIquqZJh4Mv1g3eMg
CtrHiJbQQ6iQXbnsoIXMIKgeqNRyje7CBMO66/PS2sBjVQEjx6EYrtCH13x8
RoZtywciP9Xx4cfls7TczXS46q2Y9juvExcs/3jTnsOCr/mBesfP94Kfm1n2
7PIs3BByZ/XjhkEQaWo/b72sAhbaT13r/r4Y1j9YwDXbIQA+8T7M3D/upy6Z
8shi39IquGMc0xeQkgnjGyqWazsJIFBFZnLO23rw3EPesSrrNXY7DIaZKgtg
m88Fpfhv0UUiImFD9QZxRY/Hfgv/CWDiy4Yf41sji+4Vka3Ile0YcktQu8do
GIw3Z6pPVauD2A+5nIQtLNwntt8+4gcT3pH6vgg2kSAipDFk5kMmNjD8p09K
ocPi9ZobdCIG4Waz4uQikRYsLuFtc1Pvgr0lHdULHrfD1vF1bsWOuWAIEHlG
dRj6hygP5PtPbV1duFNizkE2PNwn176BwQTnwORFpldycdRP6vDbUgpI64sr
kebzYckbuU6ZHRU42+hW0b2AboioTjQwnTMEyXX7e1Zr02B7/6vpb0UYmM9V
Lto9nwpuat1JXqNMSNBN77aQpGG5UYv4VeF6ZzXfq633bB+UN+d5Dm3hoHz9
Q1b1EzLcOXXzSdxzDlhMSncGSQruu6AsYWraA+yZTT3qwnXwAZ+meT3T2Rj+
yXz3Ss8+eDdf8eeiYB7A4Lb0Jus+zEhrUzw72AFZ4lpsnWC68O+fraobz0RZ
J5URpwASxKSJLXHt4oPDleML1ov3oPHDhVyyThuENdOnp8YxQWvXo+SUOQyM
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
/wFyuVoU
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{368.36011906531246`, 259.1618136413145},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.13515851642867893`, 3.999998107143255}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3635997168043583`, 1.3044481043763634`, 2.040051842897937},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7472453468691463`*^9, 3.7472453836101294`*^9}, 
   3.7472455340342493`*^9, 
   3.747245632364023*^9},ExpressionUUID->"9d2b94c8-d83a-45df-9d01-\
e0ce0cb2a81f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1313, 744},
WindowMargins->{{0, Automatic}, {Automatic, 37}},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Linux x86 (64-bit) (April 18, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "1"->{
  Cell[903, 31, 2592, 49, 
  175, "Input", "ExpressionUUID" -> "8fb1514c-0104-4773-81f8-5374490bfabb",
   CellTags->"1"],
  Cell[3498, 82, 1035, 24, 
  155, "Output", "ExpressionUUID" -> "d9b991f9-9df9-42f4-abb8-496fd0158cee",
   CellTags->"1"]},
 "2"->{
  Cell[4886, 120, 1438, 37, 
  142, "Input", "ExpressionUUID" -> "dac6af6f-a763-463b-8f0c-54edeab5a9af",
   CellTags->"2"],
  Cell[6327, 159, 925, 25, 
  155, "Output", "ExpressionUUID" -> "f6adceeb-43ca-46c5-aebe-26a07af80db6",
   CellTags->"2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"1", 375381, 7859},
 {"2", 375636, 7866}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 7, 76, "Text", "ExpressionUUID" -> \
"df0af1b1-3a3c-47a7-9951-0fa3d88ecfd0"],
Cell[CellGroupData[{
Cell[903, 31, 2592, 49, 175, "Input", "ExpressionUUID" -> \
"8fb1514c-0104-4773-81f8-5374490bfabb",
 CellTags->"1"],
Cell[3498, 82, 1035, 24, 155, "Output", "ExpressionUUID" -> \
"d9b991f9-9df9-42f4-abb8-496fd0158cee",
 CellTags->"1"]
}, Open  ]],
Cell[4548, 109, 313, 7, 76, "Text", "ExpressionUUID" -> \
"4c93b521-7017-4400-aece-65e399dc9ad6"],
Cell[CellGroupData[{
Cell[4886, 120, 1438, 37, 142, "Input", "ExpressionUUID" -> \
"dac6af6f-a763-463b-8f0c-54edeab5a9af",
 CellTags->"2"],
Cell[6327, 159, 925, 25, 155, "Output", "ExpressionUUID" -> \
"f6adceeb-43ca-46c5-aebe-26a07af80db6",
 CellTags->"2"]
}, Open  ]],
Cell[7267, 187, 764, 19, 109, "Text", "ExpressionUUID" -> \
"15332393-42c1-4a1a-b499-4be2dc3c0775"],
Cell[8034, 208, 2791, 65, 326, "Input", "ExpressionUUID" -> \
"683d50e5-0c9a-435f-8b97-5e489baae5ff"],
Cell[CellGroupData[{
Cell[10850, 277, 2910, 69, 558, "Input", "ExpressionUUID" -> \
"08bc5194-601e-4ed8-9898-508c99859ec5"],
Cell[13763, 348, 293, 8, 94, "Output", "ExpressionUUID" -> \
"5871c64f-d42d-4bbf-b9bb-66e8ca0a4993"],
Cell[14059, 358, 225, 5, 94, "Output", "ExpressionUUID" -> \
"d534e7a9-0742-4fdd-8830-7272b49d82c4"],
Cell[14287, 365, 226, 5, 94, "Output", "ExpressionUUID" -> \
"60f7308b-2f3e-4236-96b8-3092bacc901e"],
Cell[14516, 372, 295, 8, 94, "Output", "ExpressionUUID" -> \
"b3940952-a15f-4419-919b-d2dfcf81e278"],
Cell[14814, 382, 292, 8, 94, "Output", "ExpressionUUID" -> \
"1b21e993-816d-473f-a488-2593c066c47e"],
Cell[15109, 392, 292, 8, 94, "Output", "ExpressionUUID" -> \
"fb590d23-2870-4009-b92c-6192c1377afa"],
Cell[15404, 402, 225, 5, 94, "Output", "ExpressionUUID" -> \
"9623cb63-234d-4a00-9869-50c50567c0fb"],
Cell[15632, 409, 221, 4, 94, "Output", "ExpressionUUID" -> \
"fd152bf6-fe5e-49ee-8cae-f5a44b83bcb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15890, 418, 2073, 59, 205, "Input", "ExpressionUUID" -> \
"6fbc62bd-b199-49f6-bd9e-3408cc55cef0"],
Cell[17966, 479, 936, 23, 94, "Output", "ExpressionUUID" -> \
"d5d9a303-211a-40ef-9611-2fdabd132c6e"],
Cell[18905, 504, 934, 23, 94, "Output", "ExpressionUUID" -> \
"41e832b4-2a0c-4f16-bb7b-f3f242f2fc4b"],
Cell[19842, 529, 910, 22, 94, "Output", "ExpressionUUID" -> \
"3838393b-0db3-46c9-9ba9-34e58d2795c0"]
}, Open  ]],
Cell[20767, 554, 2598, 83, 290, "Input", "ExpressionUUID" -> \
"89884231-5da7-40d1-b933-8109a950d644"],
Cell[CellGroupData[{
Cell[23390, 641, 290, 7, 75, "Input", "ExpressionUUID" -> \
"2e48ecc5-bcd4-45b3-a623-a0232b1b0374"],
Cell[23683, 650, 1837, 64, 148, "Output", "ExpressionUUID" -> \
"bf607cdc-e5b4-4ba3-946f-c4a7dbda5d2e"]
}, Open  ]],
Cell[25535, 717, 2065, 73, 175, "Input", "ExpressionUUID" -> \
"0e6a71dd-720a-4634-a5c5-ecbdf84d1506"],
Cell[27603, 792, 1841, 63, 326, "Input", "ExpressionUUID" -> \
"d2de4df1-1d37-4e9c-95cd-2f64a26bbe0a"],
Cell[29447, 857, 6007, 148, 883, "Input", "ExpressionUUID" -> \
"0e82e99e-b1d1-4a59-a16b-c7ffddc94570"],
Cell[CellGroupData[{
Cell[35479, 1009, 3168, 67, 343, "Input", "ExpressionUUID" -> \
"8fab94d3-de1c-47b8-b80e-d4700abfdc8a"],
Cell[38650, 1078, 1060, 28, 94, "Output", "ExpressionUUID" -> \
"d806be67-b735-4ad4-90f5-d5cb66fd8a71"],
Cell[39713, 1108, 677, 12, 75, "Output", "ExpressionUUID" -> \
"ec3ed568-6fcd-4dfd-94fc-371151b79c0e"]
}, Open  ]],
Cell[40405, 1123, 220, 5, 76, "Text", "ExpressionUUID" -> \
"812d5e44-d59e-4346-9383-bee3fcfd6fd1"],
Cell[CellGroupData[{
Cell[40650, 1132, 2473, 57, 142, "Input", "ExpressionUUID" -> \
"0f4047af-738a-4581-8389-67edc1d2fb3f"],
Cell[43126, 1191, 2035, 55, 111, "Output", "ExpressionUUID" -> \
"c2ab192f-43ea-4be6-82e0-64cc737f8afc"]
}, Open  ]],
Cell[45176, 1249, 336, 8, 76, "Text", "ExpressionUUID" -> \
"a96b0494-bfde-4c2b-9b48-3ecb30b95dff"],
Cell[CellGroupData[{
Cell[45537, 1261, 2591, 65, 241, "Input", "ExpressionUUID" -> \
"9a28b2a2-1891-409d-877e-52e60ce69707"],
Cell[48131, 1328, 518, 9, 75, "Output", "ExpressionUUID" -> \
"e0ad22ed-4661-4707-8200-b6c5c926aff9"],
Cell[48652, 1339, 2262, 48, 131, "Output", "ExpressionUUID" -> \
"63ae291a-a229-4453-9401-9755e8475abd"]
}, Open  ]],
Cell[50929, 1390, 732, 18, 103, "Text", "ExpressionUUID" -> \
"2fecb08d-21c7-4007-903d-80b83eaf5437"],
Cell[CellGroupData[{
Cell[51686, 1412, 753, 15, 75, "Input", "ExpressionUUID" -> \
"2b9d5036-8cf7-43eb-876e-6970a8bcb494"],
Cell[52442, 1429, 229, 4, 75, "Output", "ExpressionUUID" -> \
"4670eec1-986d-4154-84ca-0d52e683a8f9"]
}, Open  ]],
Cell[52686, 1436, 296, 6, 76, "Text", "ExpressionUUID" -> \
"d2346763-a10a-4fe7-8e24-205cde59d090"],
Cell[CellGroupData[{
Cell[53007, 1446, 5503, 167, 379, "Input", "ExpressionUUID" -> \
"d158fc37-cb8e-4df5-8253-7e15f79fd4ee"],
Cell[58513, 1615, 15811, 471, 579, "Output", "ExpressionUUID" -> \
"41c9d4e2-0fb8-4e99-9a51-4376645c3b39"]
}, Open  ]],
Cell[74339, 2089, 876, 18, 113, "Text", "ExpressionUUID" -> \
"630d47ee-cf86-4b3d-95d4-6b531a70e30a"],
Cell[CellGroupData[{
Cell[75240, 2111, 2005, 50, 208, "Input", "ExpressionUUID" -> \
"66824fbf-9f63-4594-9907-eeec04fe53c4"],
Cell[77248, 2163, 3284, 86, 173, "Output", "ExpressionUUID" -> \
"97854792-9e49-4350-a533-e12bebc651d1"]
}, Open  ]],
Cell[80547, 2252, 1422, 40, 109, "Text", "ExpressionUUID" -> \
"010a9d8b-6ffe-4641-9f89-c9c6a318c7ca"],
Cell[81972, 2294, 5771, 125, 868, "Input", "ExpressionUUID" -> \
"df121a8c-0f30-484d-aa6f-9090c50fa5f2"],
Cell[87746, 2421, 330, 7, 76, "Text", "ExpressionUUID" -> \
"9b7a9287-3aba-4129-8072-dbc0b31b25f7"],
Cell[88079, 2430, 708, 17, 75, "Input", "ExpressionUUID" -> \
"fffc131d-8b39-432f-a6e2-11fce584e948"],
Cell[88790, 2449, 345, 7, 76, "Text", "ExpressionUUID" -> \
"08b5d9af-4ed3-4409-9bf0-b83e399ffe64"],
Cell[89138, 2458, 2887, 46, 142, "Input", "ExpressionUUID" -> \
"ea526ec7-9fa1-46e9-819c-60a5ddfa06e3"],
Cell[92028, 2506, 175, 3, 76, "Text", "ExpressionUUID" -> \
"2cbc14a8-1eec-4118-b70d-db90b2ec5fc4"],
Cell[CellGroupData[{
Cell[92228, 2513, 561, 12, 75, "Input", "ExpressionUUID" -> \
"b53324cb-9c99-448d-8826-5c4006cd0fef"],
Cell[92792, 2527, 225, 4, 75, "Output", "ExpressionUUID" -> \
"0302b956-9092-4af2-b5cc-bc26a5fc8416"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93054, 2536, 581, 12, 75, "Input", "ExpressionUUID" -> \
"6cfe0558-4e56-4a4b-ac61-91407c18d06a"],
Cell[93638, 2550, 223, 4, 75, "Output", "ExpressionUUID" -> \
"71c3f668-aeb6-4b21-9dda-9907013d420f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93898, 2559, 587, 13, 75, "Input", "ExpressionUUID" -> \
"aac840a4-55c7-4b20-a587-e52f151b2f41"],
Cell[94488, 2574, 273, 4, 75, "Output", "ExpressionUUID" -> \
"be377cb6-c8d7-44aa-b6c8-34f9454c2eb0"]
}, Open  ]],
Cell[94776, 2581, 712, 12, 141, "Text", "ExpressionUUID" -> \
"2205cce2-af8f-4c29-8563-ce94e23636d7"],
Cell[CellGroupData[{
Cell[95513, 2597, 442, 10, 75, "Input", "ExpressionUUID" -> \
"365c6957-dc72-4cf4-8d44-2da0bc856268"],
Cell[95958, 2609, 227, 4, 75, "Output", "ExpressionUUID" -> \
"5b61f849-84fc-4bb1-8e31-2349fce7c757"]
}, Open  ]],
Cell[96200, 2616, 274, 6, 76, "Text", "ExpressionUUID" -> \
"c4242e91-f91f-440d-a6e4-c16c7ec7b465"],
Cell[96477, 2624, 1678, 42, 340, "Input", "ExpressionUUID" -> \
"5bd2a4f9-65a3-40c1-864f-d51f35445352"],
Cell[98158, 2668, 199, 3, 76, "Text", "ExpressionUUID" -> \
"86c3eedb-ac1e-4d71-984c-b708fee7727c"],
Cell[98360, 2673, 448, 11, 75, "Input", "ExpressionUUID" -> \
"731295f9-4de9-490d-89cd-4a18f9e45075"],
Cell[98811, 2686, 186, 3, 76, "Text", "ExpressionUUID" -> \
"fd263ef4-a38d-4273-a220-fb61215b35b7"],
Cell[CellGroupData[{
Cell[99022, 2693, 377, 8, 75, "Input", "ExpressionUUID" -> \
"172b5aa3-c9ed-4f92-b460-993a10882ffd"],
Cell[99402, 2703, 271, 4, 75, "Output", "ExpressionUUID" -> \
"179fb8e2-bb61-403b-b4e3-914193bc35ed"]
}, Open  ]],
Cell[99688, 2710, 263, 6, 76, "Text", "ExpressionUUID" -> \
"a97f7b90-499b-41e9-8826-a1ae92d2354c"],
Cell[CellGroupData[{
Cell[99976, 2720, 374, 9, 75, "Input", "ExpressionUUID" -> \
"29c505a4-83bf-4a7e-8818-6e7728f890bd"],
Cell[100353, 2731, 240, 4, 75, "Output", "ExpressionUUID" -> \
"e79cc618-ba04-4935-b314-a34bea4c20bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100630, 2740, 195, 4, 75, "Input", "ExpressionUUID" -> \
"5b29d558-e1ec-4592-b4b1-34ce80f7ae68"],
Cell[100828, 2746, 188, 5, 75, "Output", "ExpressionUUID" -> \
"d571430c-c155-42ee-bc5d-f54cae33b499"]
}, Open  ]],
Cell[101031, 2754, 366, 7, 109, "Text", "ExpressionUUID" -> \
"742047f1-ed43-4641-ab18-7bd9c70aebae"],
Cell[CellGroupData[{
Cell[101422, 2765, 262, 6, 93, "Subsection", "ExpressionUUID" -> \
"e047eee7-2ffd-4b43-9b7b-153595f44f2f"],
Cell[CellGroupData[{
Cell[101709, 2775, 958, 25, 175, "Input", "ExpressionUUID" -> \
"bdb19c3b-46e4-4f49-a9a0-194f1293c4da"],
Cell[102670, 2802, 515, 14, 75, "Output", "ExpressionUUID" -> \
"d7481d03-1e21-486c-a8d3-9c21b8f08041"]
}, Open  ]],
Cell[103200, 2819, 176, 3, 76, "Text", "ExpressionUUID" -> \
"43978c5a-1d6b-48e0-a3e0-c051c87df63a"],
Cell[CellGroupData[{
Cell[103401, 2826, 236, 5, 75, "Input", "ExpressionUUID" -> \
"62bc474a-f3c3-4a4c-bd0c-02bc3388ac88"],
Cell[103640, 2833, 344, 10, 75, "Output", "ExpressionUUID" -> \
"ce0126cf-6262-4afd-864e-88db0436979a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104021, 2848, 1442, 40, 310, "Input", "ExpressionUUID" -> \
"8462d0e6-062c-4bac-a8a7-f50caf57550a"],
Cell[105466, 2890, 754, 24, 75, "Output", "ExpressionUUID" -> \
"b6cc48e4-bbb0-48fb-84a5-5f5a15595c5f"],
Cell[106223, 2916, 237, 5, 75, "Output", "ExpressionUUID" -> \
"c4a5e4f3-9059-49e9-a7a5-20158f19bff8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106497, 2926, 1369, 40, 142, "Input", "ExpressionUUID" -> \
"62891c5a-db81-42c1-8add-31a23355d474"],
Cell[107869, 2968, 762, 20, 99, "Output", "ExpressionUUID" -> \
"6fdbb83c-3ca4-41c1-98d8-e19927752679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108668, 2993, 397, 10, 142, "Input", "ExpressionUUID" -> \
"748d1ee5-d672-4889-bf4a-a6eb761e3a07"],
Cell[109068, 3005, 197, 3, 75, "Output", "ExpressionUUID" -> \
"a22c0a44-504c-4258-ae59-edb4a1372a31"],
Cell[109268, 3010, 757, 20, 99, "Output", "ExpressionUUID" -> \
"c4a1b3d3-c409-4a99-b9b5-4c2c6522d1ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110062, 3035, 1258, 38, 142, "Input", "ExpressionUUID" -> \
"5a94e752-de15-49ff-b4b8-35fdda8e92b9"],
Cell[111323, 3075, 1083, 36, 94, "Output", "ExpressionUUID" -> \
"43d8a49c-1ad7-4432-a9d0-c38f0a3ab2cc"]
}, Open  ]],
Cell[112421, 3114, 3576, 80, 571, "Input", "ExpressionUUID" -> \
"53d4a450-c250-4399-b8ce-a226f1d846db"],
Cell[CellGroupData[{
Cell[116022, 3198, 312, 7, 75, "Input", "ExpressionUUID" -> \
"8ce8e24e-1338-4bfd-a80e-9852df620d22"],
Cell[116337, 3207, 174, 3, 75, "Output", "ExpressionUUID" -> \
"d11b17d9-f293-4a58-989e-272e0ca44ad5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116548, 3215, 345, 8, 75, "Input", "ExpressionUUID" -> \
"f9f3cc29-103d-4d6d-ab7c-3bc95ee223b9"],
Cell[116896, 3225, 221, 3, 75, "Output", "ExpressionUUID" -> \
"f61c3407-e467-4e89-a0b8-832670a6fafb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117154, 3233, 262, 6, 75, "Input", "ExpressionUUID" -> \
"6cbc3baa-c3ea-4875-9593-689a83671a27"],
Cell[117419, 3241, 153, 3, 75, "Output", "ExpressionUUID" -> \
"b6def720-913b-445f-a71f-198cd849d86f"]
}, Open  ]],
Cell[117587, 3247, 105, 0, 75, "Input", "ExpressionUUID" -> \
"90a5edb4-1367-40a0-b310-d3fbf7df3838"],
Cell[117695, 3249, 239, 6, 76, "Text", "ExpressionUUID" -> \
"76b908d4-6119-45c6-8849-43cc94364b48"],
Cell[117937, 3257, 4356, 97, 637, "Input", "ExpressionUUID" -> \
"135b5e62-0e84-4fe3-8779-224687d252fc"],
Cell[CellGroupData[{
Cell[122318, 3358, 382, 9, 75, "Input", "ExpressionUUID" -> \
"6e1c9417-2d74-438a-9470-be35d9beb395"],
Cell[122703, 3369, 431, 10, 87, "Message", "ExpressionUUID" -> \
"ec34fa6e-4202-49e0-8269-d0580d40d5a1"],
Cell[123137, 3381, 984, 17, 141, "Message", "ExpressionUUID" -> \
"71baeefc-56ac-4fd9-ab1f-62608de8cee4"],
Cell[124124, 3400, 431, 10, 87, "Message", "ExpressionUUID" -> \
"91a17ad2-69d0-4c8a-b821-e1063685ef56"],
Cell[124558, 3412, 993, 17, 144, "Message", "ExpressionUUID" -> \
"5bb97032-ffd6-45af-899c-0cda07dbec08"],
Cell[125554, 3431, 431, 10, 87, "Message", "ExpressionUUID" -> \
"be62d733-fd20-467c-a924-4ce510e654f9"],
Cell[125988, 3443, 404, 9, 59, "Message", "ExpressionUUID" -> \
"b5f7e49c-e837-4f8c-a75e-920c83d0e9ed"],
Cell[126395, 3454, 993, 17, 144, "Message", "ExpressionUUID" -> \
"abb0c5da-feee-4af3-a9a0-c1bc957a0ae3"],
Cell[127391, 3473, 403, 9, 59, "Message", "ExpressionUUID" -> \
"c594f1b7-30aa-4c32-ba2b-f520dc2e9826"],
Cell[127797, 3484, 159, 3, 75, "Output", "ExpressionUUID" -> \
"ed858bc4-523f-43b8-87d4-58fbd69b6863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127993, 3492, 211, 5, 75, "Input", "ExpressionUUID" -> \
"4c4220e4-855c-4298-9fa8-9d7eb00f112c"],
Cell[128207, 3499, 155, 3, 75, "Output", "ExpressionUUID" -> \
"f4deaac4-2123-4d00-9c00-02a3dc634c14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128399, 3507, 272, 5, 75, "Input", "ExpressionUUID" -> \
"be13d489-6882-4519-8f84-a045e4e31078"],
Cell[128674, 3514, 554, 15, 94, "Output", "ExpressionUUID" -> \
"0fcbddda-6838-4abd-ab69-5b67f991e6bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129265, 3534, 441, 12, 75, "Input", "ExpressionUUID" -> \
"e558a82f-a9a5-4d95-8700-2d7819d49bf3"],
Cell[129709, 3548, 314, 5, 77, "Output", "ExpressionUUID" -> \
"d46ffd88-adc8-431b-b087-6fd7caf831b6"]
}, Open  ]],
Cell[130038, 3556, 237, 4, 76, "Text", "ExpressionUUID" -> \
"068d3ea3-85c6-43ac-92de-3ddfd2569205"],
Cell[CellGroupData[{
Cell[130300, 3564, 4366, 142, 532, "Input", "ExpressionUUID" -> \
"00654596-25c2-4307-97d6-fdee656080f1",
 InitializationCell->True],
Cell[134669, 3708, 397, 11, 94, "Output", "ExpressionUUID" -> \
"b43b5928-e151-4c44-b17a-0b2bb8cc4c9e"],
Cell[135069, 3721, 416, 12, 94, "Output", "ExpressionUUID" -> \
"18a17199-874e-4358-871c-693dd9e5dbcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135522, 3738, 1359, 41, 201, "Input", "ExpressionUUID" -> \
"84e53fdf-1f06-4517-ae5c-18b5a7ec6c22"],
Cell[136884, 3781, 1524, 47, 94, "Output", "ExpressionUUID" -> \
"ca2f65c1-23e0-4228-a317-736948421d88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138445, 3833, 672, 19, 75, "Input", "ExpressionUUID" -> \
"21d3b345-3937-4b2e-9c7d-26cfb24fb164"],
Cell[139120, 3854, 62335, 1016, 479, "Output", "ExpressionUUID" -> \
"fca57958-0330-46a0-ada7-5fb39143a5a5"]
}, Open  ]],
Cell[201470, 4873, 170, 3, 76, "Text", "ExpressionUUID" -> \
"93373fee-08d0-4ce1-b228-16f1ab6ad186"],
Cell[CellGroupData[{
Cell[201665, 4880, 4062, 131, 532, "Input", "ExpressionUUID" -> \
"a3b6ac47-be08-4b13-9f73-32b329bf82fe"],
Cell[205730, 5013, 391, 12, 94, "Output", "ExpressionUUID" -> \
"8e1190be-ddbc-4351-a4cb-5bb9097d404a"],
Cell[206124, 5027, 370, 11, 94, "Output", "ExpressionUUID" -> \
"6585608b-f888-40b6-9156-aa2924f040e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206531, 5043, 1200, 34, 109, "Input", "ExpressionUUID" -> \
"42fc626f-072d-430f-b543-a7a9ecb5dd3f"],
Cell[207734, 5079, 1283, 38, 94, "Output", "ExpressionUUID" -> \
"2fdaf8f1-61d7-4eab-ac71-e47d741396e5"],
Cell[209020, 5119, 165817, 2720, 438, "Output", "ExpressionUUID" -> \
"9d2b94c8-d83a-45df-9d01-e0ce0cb2a81f"]
}, Open  ]]
}, Open  ]]
}
]
*)

