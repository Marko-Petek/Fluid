(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    497037,       9971]
NotebookOptionsPosition[    481004,       9591]
NotebookOutlinePosition[    482165,       9631]
CellTagsIndexPosition[    482077,       9625]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
1) We acquire element corner positions for right half of NorthBlock in form \
[block row][block col] = {{x1, y1}, {x2, y2}, {x3, y3}, {x4, y4}}.\
\>", "Text",
 CellChangeTimes->{
  3.745986504487837*^9, {3.745987118104638*^9, 
   3.745987128986507*^9}},ExpressionUUID->"df0af1b1-3a3c-47a7-9951-\
0fa3d88ecfd0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodePos", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
integrateThis.txt\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos", "=", 
   RowBox[{"ToExpression", "[", "nodePos", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10"}], "]"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "4", " ", "corner", " ", "node", " ", "positions", " ", "for", " ", 
     "element", " ", "in", " ", 
     RowBox[{"23", "'"}], "rd", " ", "row", " ", "and", " ", 
     RowBox[{"10", "'"}], "th", " ", "column", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"most", " ", "upper", " ", "right", " ", "element"}], ")"}], 
      "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7458457674887457`*^9, 3.7458457869975853`*^9}, {
   3.745845911179164*^9, 3.745845955900465*^9}, {3.745847100200148*^9, 
   3.745847103277301*^9}, {3.74584720338974*^9, 3.745847204041778*^9}, {
   3.745847454079063*^9, 3.745847455173891*^9}, {3.745847495406001*^9, 
   3.7458474995972357`*^9}, {3.745847638705782*^9, 3.745847639789097*^9}, 
   3.745848566911585*^9, {3.7458490250440893`*^9, 3.74584903051862*^9}, {
   3.745849107087812*^9, 3.745849108489716*^9}, {3.745849197517704*^9, 
   3.745849207233582*^9}, {3.745849303410995*^9, 3.745849305011517*^9}, 
   3.745849349513859*^9, {3.745850679292458*^9, 3.745850681530842*^9}, {
   3.745851687673954*^9, 3.7458516895487957`*^9}, {3.7458541862399597`*^9, 
   3.74585418661661*^9}, {3.745854434900872*^9, 3.745854448018777*^9}, {
   3.745860137815242*^9, 3.745860211231867*^9}, {3.745860249715366*^9, 
   3.745860255913795*^9}, {3.745860323628289*^9, 3.745860332975169*^9}, {
   3.745860380932459*^9, 3.745860419660714*^9}, 3.745860488964347*^9, {
   3.745861017164814*^9, 3.745861044687859*^9}, 3.7458611375917597`*^9, {
   3.7458615066448793`*^9, 3.745861524776675*^9}, 3.745861776505211*^9, 
   3.7458618718206*^9, {3.7459181211483927`*^9, 3.745918157260955*^9}, {
   3.7459182439617*^9, 3.745918249985384*^9}, 3.745918369234597*^9, {
   3.74591841755075*^9, 3.745918417980631*^9}, {3.745920309154969*^9, 
   3.74592031233805*^9}, {3.745922474557002*^9, 3.745922478604609*^9}, {
   3.7459368935762463`*^9, 3.745936899561632*^9}, {3.7459865287023706`*^9, 
   3.7459865309264603`*^9}, {3.745997363418561*^9, 3.74599736727638*^9}},
 CellTags->"1",ExpressionUUID->"8fb1514c-0104-4773-81f8-5374490bfabb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.919337273913974`", "0.966333490772628`"},
     {"0.96577959498667`", "0.96577959498667`"},
     {"1", "1"},
     {"0.95`", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.745919393003442*^9, 3.745920316023924*^9, 
  3.745921272684781*^9, 3.745922479574286*^9, 3.745929380272242*^9, 
  3.7459369201571174`*^9, 3.745949013566182*^9, 3.745997377536256*^9, 
  3.746791304116083*^9, 3.746975865919129*^9, 3.7469760879582157`*^9},
 CellTags->"1",ExpressionUUID->"d9b991f9-9df9-42f4-abb8-496fd0158cee"]
}, Open  ]],

Cell["\<\
2) We transpose last two dimensions of previous array and thus transform it \
into following form : [block row][block col] = {{x1, x2, x3, x4}, {y1, y2, \
y3, y4}}\
\>", "Text",
 CellChangeTimes->{{3.745987182137971*^9, 
  3.745987192708918*^9}},ExpressionUUID->"4c93b521-7017-4400-aece-\
65e399dc9ad6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"elements", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"nodePos", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "23"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
  
  RowBox[{"(*", 
   RowBox[{"23", " ", "x", " ", "10"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10", ",", "1"}], "]"}], "]"}], "//", 
  "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "x", " ", "coordinates", " ", "for", " ", "all", " ", "for", " ", 
     "corner", " ", "nodes", " ", "of", " ", "element", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"23", ",", "10"}], ")"}], "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.745860129214368*^9, 3.7458601347891283`*^9}, {
   3.745860272931795*^9, 3.745860346321751*^9}, {3.7458604322073174`*^9, 
   3.745860482341137*^9}, {3.74591829770245*^9, 3.74591834922665*^9}, {
   3.745919353818584*^9, 3.745919384527342*^9}, {3.7459213372493258`*^9, 
   3.745921340971883*^9}, 3.745922502479542*^9, {3.745987169043118*^9, 
   3.7459871716948233`*^9}},
 CellTags->"2",ExpressionUUID->"dac6af6f-a763-463b-8f0c-54edeab5a9af"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0.919337273913974`"},
      {"0.96577959498667`"},
      {"1"},
      {"0.95`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7459369331848593`*^9, 3.7459490183703337`*^9, 
  3.745997384081119*^9, 3.7467913084592333`*^9, 3.746975871099807*^9, 
  3.746976094003199*^9},
 CellTags->"2",ExpressionUUID->"f6adceeb-43ca-46c5-aebe-26a07af80db6"]
}, Open  ]],

Cell[TextData[{
 "We write down quadrilateral shape functions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "1"], TraditionalForm]],ExpressionUUID->
  "37c9b589-35c5-4aab-8d72-dee734d3ce9e"],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "4"], TraditionalForm]],ExpressionUUID->
  "37295c17-587b-47e7-a4ad-dde315295a83"],
 " which transformations use to transform area elements from reference \
rectangle to arbitrary quadrilateral. We also write down the transformations \
P (from reference square to x coordinate in real-world) and Q (to y \
coordinate)."
}], "Text",
 CellChangeTimes->{{3.745987254711897*^9, 3.7459873087730427`*^9}, {
  3.74598735090838*^9, 
  3.7459874951087923`*^9}},ExpressionUUID->"15332393-42c1-4a1a-b499-\
4be2dc3c0775"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Quadrilateral", " ", "shape", " ", 
    RowBox[{"functions", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["S", "1"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "2"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "3"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "4"], "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Xi]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, 
   3.765298052719966*^9},ExpressionUUID->"683d50e5-0c9a-435f-8b97-\
5e489baae5ff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "=", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Xi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S1", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S2", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S3", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S4", ",", "\[Xi]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S1", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S2", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S3", ",", "\[Eta]"}], "]"}], "\n", 
 RowBox[{"D", "[", 
  RowBox[{"S4", ",", "\[Eta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765298052719966*^9, 
   3.765298157270832*^9}, {3.765298309839787*^9, 
   3.765298341364978*^9}},ExpressionUUID->"08bc5194-601e-4ed8-9898-\
508c99859ec5"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342515175*^9},ExpressionUUID->"5871c64f-d42d-4bbf-b9bb-\
66e8ca0a4993"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "\[Eta]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.76529834251674*^9},ExpressionUUID->"d534e7a9-0742-4fdd-8830-\
7272b49d82c4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[Eta]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342519232*^9},ExpressionUUID->"60f7308b-2f3e-4236-96b8-\
3092bacc901e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Eta]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.7652983425217857`*^9},ExpressionUUID->"b3940952-a15f-4419-919b-\
d2dfcf81e278"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342522934*^9},ExpressionUUID->"1b21e993-816d-473f-a488-\
2593c066c47e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342524001*^9},ExpressionUUID->"fb590d23-2870-4009-b92c-\
6192c1377afa"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[Xi]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.765298342524912*^9},ExpressionUUID->"9623cb63-234d-4a00-9869-\
50c50567c0fb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "\[Xi]"}], "4"]], "Output",
 CellChangeTimes->{{3.7652981536498737`*^9, 3.76529815905762*^9}, 
   3.7652983425257*^9},ExpressionUUID->"fd152bf6-fe5e-49ee-8cae-f5a44b83bcb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"x1", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S1", ",", "\[Xi]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"x2", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S2", ",", "\[Xi]"}], "]"}]}]}], "]"}], "+", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"x3", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S3", ",", "\[Xi]"}], "]"}]}], "+", 
     RowBox[{"x4", " ", 
      RowBox[{"D", "[", 
       RowBox[{"S4", ",", "\[Xi]"}], "]"}]}]}], "]"}]}], "]"}], "\n", 
 RowBox[{
  FractionBox["1", "4"], 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y1", "-", "y4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"y1", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S1", ",", "\[Eta]"}], "]"}]}], " ", "+", " ", 
    RowBox[{"y4", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S4", ",", "\[Eta]"}], "]"}]}]}], "]"}], "+", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"y2", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S2", ",", "\[Eta]"}], "]"}]}], "+", 
    RowBox[{"y3", " ", 
     RowBox[{"D", "[", 
      RowBox[{"S3", ",", "\[Eta]"}], "]"}]}]}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.765298503207992*^9, 3.765298544170575*^9}, {
  3.7652985790583687`*^9, 3.765298671977188*^9}, {3.7652987174333677`*^9, 
  3.76529874562918*^9}, {3.76529877708928*^9, 3.765298804832368*^9}, {
  3.765298839282596*^9, 3.765298908570709*^9}, {3.765298951227159*^9, 
  3.765299010688916*^9}, {3.765299042319044*^9, 3.765299045155999*^9}, {
  3.765299115574234*^9, 3.765299139363817*^9}, {3.765299251442712*^9, 
  3.765299282052559*^9}, {3.765299312509245*^9, 
  3.7652993238300037`*^9}},ExpressionUUID->"6fbc62bd-b199-49f6-bd9e-\
3408cc55cef0"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "-", "x2"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x3", "-", "x4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.765299325376741*^9},ExpressionUUID->"d5d9a303-211a-40ef-9611-\
2fdabd132c6e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y1", "-", "y4"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.765299325377989*^9},ExpressionUUID->"41e832b4-2a0c-4f16-bb7b-\
f3f242f2fc4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"y1", "-", "y4"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"y2", "-", "y3"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7652985342441807`*^9, 3.765298544921358*^9}, 
   3.765298581122016*^9, {3.765298630283996*^9, 3.765298672712469*^9}, 
   3.765298746863859*^9, {3.765298789580371*^9, 3.765298806607079*^9}, 
   3.7652988491790113`*^9, {3.765298883795001*^9, 3.765298909655867*^9}, {
   3.765298953310321*^9, 3.765299011724189*^9}, {3.765299124899325*^9, 
   3.765299140981628*^9}, {3.7652992526482286`*^9, 3.7652992831683397`*^9}, 
   3.7652993253809147`*^9},ExpressionUUID->"3838393b-0db3-46c9-9ba9-\
34e58d2795c0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J11", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dx", "/", "d\[Xi]"}], " ", "=", " ", 
    SubscriptBox["J", "11"]}], "*)"}], "\n", 
  RowBox[{"J12", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dx", "/", "d\[Eta]"}], " ", "=", " ", 
    SubscriptBox["J", "12"]}], " ", "*)"}], "\n", 
  RowBox[{"J21", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dy", "/", "d\[Xi]"}], " ", "=", " ", 
    SubscriptBox["J", "21"]}], " ", "*)"}], "\n", 
  RowBox[{"J22", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dy", "/", "d\[Eta]"}], " ", "=", " ", 
    SubscriptBox["J", "22"]}], " ", "*)"}]}]], "Input",
 PageWidth->Infinity,
 CellChangeTimes->{{3.76529941782962*^9, 3.765299426746271*^9}, {
  3.7652995026199617`*^9, 3.765299542884617*^9}, {3.765299622989242*^9, 
  3.7652997792400208`*^9}, {3.765299861825385*^9, 
  3.7652999110138617`*^9}},ExpressionUUID->"89884231-5da7-40d1-b933-\
8109a950d644"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J11", " ", "J22"}], " ", "-", " ", 
  RowBox[{"J12", " ", "J21"}]}]], "Input",
 CellChangeTimes->{{3.765299997822549*^9, 3.7653000506240377`*^9}, {
  3.765300084580875*^9, 
  3.765300108948758*^9}},ExpressionUUID->"2e48ecc5-bcd4-45b3-a623-\
a0232b1b0374"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "16"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y1"}], "+", "y2"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "x4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x2"}], "+", "x3"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "x2"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y1"}], "+", "y4"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "y2"}], "+", "y3"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.765300017330967*^9, 3.765300052002729*^9}, {
  3.765300090031405*^9, 
  3.765300109701242*^9}},ExpressionUUID->"bf607cdc-e5b4-4ba3-946f-\
c4a7dbda5d2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x2", "-", "x1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y4", "-", "y1"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y2", "-", "y1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x4", "-", "x1"}], ")"}]}]}], " ", ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x2", "-", "x1"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y2", "-", "y1"}], ")"}]}]}], ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y3", "-", "y2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x3", "-", "x2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}], "+", "\n", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y4", "-", "y1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x4", "-", "x1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.765300712265255*^9, 3.765300861331669*^9}, {
  3.765300891483268*^9, 
  3.7653011612140713`*^9}},ExpressionUUID->"0e6a71dd-720a-4634-a5c5-\
ecbdf84d1506"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Determinanta", " ", "Jakobijana"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], "S1", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}]}]}], " ", ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y2", "-", "y1"}], ")"}]}]}], ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S3", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}], "+", "\n", 
   RowBox[{
    FractionBox["1", "4"], "S4", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y4", "-", "y1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x3", "-", "x4"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x4", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y3", "-", "y4"}], ")"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7653011690414047`*^9, 
  3.7653012373483887`*^9}},ExpressionUUID->"d2de4df1-1d37-4e9c-95cd-\
2f64a26bbe0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Determinanta", " ", "Jakobijana"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"\[CapitalDelta]xD", "=", 
    RowBox[{"x2", "-", "x1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xU", "=", 
    RowBox[{"x3", "-", "x4"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xL", "=", 
    RowBox[{"x4", "-", "x1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]xR", "=", 
    RowBox[{"x3", "-", "x2"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yD", "=", 
    RowBox[{"y2", "-", "y1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yU", "=", 
    RowBox[{"y3", "-", "y4"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yL", "=", 
    RowBox[{"y4", "-", "y1"}]}], "\n", 
   RowBox[{"\[CapitalDelta]yR", "=", 
    RowBox[{"y3", "-", "y2"}]}], "\n", 
   RowBox[{"detJ", "=", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"S1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]xD", " ", "\[CapitalDelta]yL"}], "-", 
          RowBox[{"\[CapitalDelta]yD", " ", "\[CapitalDelta]xL"}]}], ")"}]}], 
       "+", 
       RowBox[{"S2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yR", " ", "\[CapitalDelta]xD"}], "-", 
          RowBox[{"\[CapitalDelta]xR", " ", "\[CapitalDelta]yD"}]}], ")"}]}], 
       "+", 
       RowBox[{"S3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yR", " ", "\[CapitalDelta]xU"}], "-", " ", 
          RowBox[{"\[CapitalDelta]xR", " ", "\[CapitalDelta]yU"}]}], ")"}]}], 
       "+", 
       RowBox[{"S4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[CapitalDelta]yL", " ", "\[CapitalDelta]xU"}], "-", 
          RowBox[{"\[CapitalDelta]xL", " ", "\[CapitalDelta]yU"}]}], 
         ")"}]}]}], ")"}]}]}], "\n", 
   RowBox[{"(*", " ", "Jakobijan", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"J11", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]xD", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]xU", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dx", "/", "d\[Xi]"}], " ", "=", " ", 
      SubscriptBox["J", "11"]}], "*)"}], "\n", 
    RowBox[{"J12", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]xL", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]xR", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dx", "/", "d\[Eta]"}], " ", "=", " ", 
      SubscriptBox["J", "12"]}], " ", "*)"}], "\n", 
    RowBox[{"J21", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]yD", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]yU", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dy", "/", "d\[Xi]"}], " ", "=", " ", 
      SubscriptBox["J", "21"]}], " ", "*)"}], "\n", 
    RowBox[{"J22", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]yL", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
        RowBox[{"\[CapitalDelta]yR", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"dy", "/", "d\[Eta]"}], " ", "=", " ", 
     SubscriptBox["J", "22"]}], " ", "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Inverz", " ", "Jakobijana"}], "*)"}], "\n", 
   RowBox[{
    FractionBox["1", "detJ"], " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"J22", ",", 
        RowBox[{"-", "J12"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "J21"}], ",", "J11"}], "}"}]}], "\n", 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765301332520296*^9, 
   3.765301553113529*^9}, {3.7653015850388727`*^9, 3.765301965598299*^9}, {
   3.7653021013620243`*^9, 3.7653021387562532`*^9}, {3.765302181022146*^9, 
   3.765302209313533*^9}, {3.7653022525144367`*^9, 3.7653024750566387`*^9}, {
   3.7653026415780487`*^9, 3.765302658392433*^9}, {3.765302872150064*^9, 
   3.765302873037838*^9}},ExpressionUUID->"0e82e99e-b1d1-4a59-a16b-\
c7ffddc94570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transformation", " ", 
    RowBox[{"functions", ".", " ", "Row"}], " ", "and", " ", "col", " ", 
    "are", " ", "indices", " ", "of", " ", "element", " ", "inside", " ", 
    "\"\<elements\>\"", " ", 
    RowBox[{"array", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_", ",", "row_", ",", " ", "col_"}], "]"}],
     ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"elements", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_", ",", " ", "row_", ",", "col_"}], "]"}],
     ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"elements", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"P", "[", 
    RowBox[{"\[Xi]", ",", "\[Eta]", ",", "23", ",", "10"}], "]"}], "\n", 
   RowBox[{"%", "//", "Simplify"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Example", ":", " ", 
     RowBox[{"transformation", " ", "P", " ", "for", " ", "element", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"23", ",", "10"}], ")"}], ".", " ", "Below"}], " ", "in", " ",
       "its", " ", "simplified", " ", 
      RowBox[{"form", "."}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919681229632*^9}, {
   3.745921324255247*^9, 3.7459213281801558`*^9}, {3.745921592509398*^9, 
   3.745921596367093*^9}, {3.745922528225753*^9, 3.7459225694182453`*^9}, {
   3.745987328926044*^9, 3.745987332854678*^9}, {3.745987471990408*^9, 
   3.745987517043964*^9}, {3.765297923714888*^9, 3.765297930751667*^9}, {
   3.7652979736094627`*^9, 3.765298007735532*^9}, {3.765301332520296*^9, 
   3.7653014638704967`*^9}},ExpressionUUID->"8fab94d3-de1c-47b8-b80e-\
d4700abfdc8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2298343184784935`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2375`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2414448987466675`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.745919670106556*^9, 3.745919682308362*^9}, 
   3.745921536841199*^9, 3.745922546103797*^9, 3.745929393940815*^9, 
   3.74593693758119*^9, 3.7459490233460255`*^9, 3.7459973885215187`*^9, {
   3.7467912915789843`*^9, 3.746791311426702*^9}, 3.746975878493594*^9, 
   3.746976096975872*^9},ExpressionUUID->"d806be67-b735-4ad4-90f5-\
d5cb66fd8a71"],

Cell[BoxData[
 RowBox[{"0.958779217225161`", "\[VeryThinSpace]", "+", 
  RowBox[{"\[Eta]", " ", 
   RowBox[{"(", 
    RowBox[{"0.016220782774838988`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0008894197318260189`", " ", "\[Xi]"}]}], ")"}]}], "+", 
  RowBox[{"0.02411058026817403`", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{{3.745919670106556*^9, 3.745919682308362*^9}, 
   3.745921536841199*^9, 3.745922546103797*^9, 3.745929393940815*^9, 
   3.74593693758119*^9, 3.7459490233460255`*^9, 3.7459973885215187`*^9, {
   3.7467912915789843`*^9, 3.746791311426702*^9}, 3.746975878493594*^9, 
   3.746976097040468*^9},ExpressionUUID->"ec3ed568-6fcd-4dfd-94fc-\
371151b79c0e"]
}, Open  ]],

Cell["\<\
We write a method that writes out a Jacobian of element at (row, col).\
\>", "Text",
 CellChangeTimes->{{3.745987556862546*^9, 
  3.745987601806695*^9}},ExpressionUUID->"812d5e44-d59e-4346-9383-\
bee3fcfd6fd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jacobians", "[", 
   RowBox[{"row_", ",", "col_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Xi]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Eta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Xi]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"\[Xi]", ",", "\[Eta]", ",", "row", ",", "col"}], "]"}], ",",
         "\[Eta]"}], "]"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"Jacobians", "[", 
   RowBox[{"23", ",", "10"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"Jacobian", " ", "for", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}]}]}], "*)"}]}]}], "Input",
 CellFrame->True,
 ShowCellLabel->False,
 CellChangeTimes->{{3.74585745930462*^9, 3.745857464795348*^9}, {
   3.745857532494648*^9, 3.745857536686823*^9}, {3.74585764122339*^9, 
   3.745857654929455*^9}, {3.745857729687118*^9, 3.745857839838368*^9}, {
   3.7458579159421463`*^9, 3.745857916292018*^9}, {3.745859055044464*^9, 
   3.745859061952943*^9}, 3.745859293592911*^9, {3.745859335100322*^9, 
   3.745859373061286*^9}, {3.745859609670923*^9, 3.74585961298776*^9}, {
   3.745859646701056*^9, 3.745859726205474*^9}, 3.745859842881434*^9, {
   3.745859874485846*^9, 3.745859893524721*^9}, {3.745863427819624*^9, 
   3.7458634970951557`*^9}, {3.7458635762053843`*^9, 3.745863632864564*^9}, {
   3.745863674650038*^9, 3.74586367590348*^9}, 3.745863759883274*^9, 
   3.7458637901747007`*^9, {3.745863826475223*^9, 3.7458639988829823`*^9}, {
   3.745919415231194*^9, 3.745919542165091*^9}, {3.745919591597352*^9, 
   3.745919614207572*^9}, {3.745919646565135*^9, 3.745919700631599*^9}, {
   3.745921355719667*^9, 3.745921360764748*^9}, {3.745921553276702*^9, 
   3.7459216627084427`*^9}, 3.745987544571939*^9, {3.745987609379793*^9, 
   3.745987612855929*^9}},ExpressionUUID->"0f4047af-738a-4581-8389-\
67edc1d2fb3f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"0.011610580268173992`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
       RowBox[{"0.012500000000000011`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.007665681521506484`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
       RowBox[{"0.008555101253332503`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "\[Eta]"}], ")"}]}], "-", 
       RowBox[{"0.00013847394648949796`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Eta]"}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"1", "+", "\[Eta]"}], "4"]}], 
      RowBox[{
       RowBox[{"0.008416627306843005`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
       RowBox[{"0.008555101253332503`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7459215432804832`*^9, 3.745921570897068*^9}, {
   3.7459216497923*^9, 3.7459216637473993`*^9}, 3.745929396671747*^9, 
   3.7459369438421555`*^9, 3.745949038156413*^9, 3.745997393873905*^9, 
   3.7469754854190817`*^9, 3.746975881421979*^9, 
   3.746976100212117*^9},ExpressionUUID->"c2ab192f-43ea-4be6-82e0-\
64cc737f8afc"]
}, Open  ]],

Cell["\<\
We write Jacobians for 230 elements of right half of NorthBlock into an \
array, then store their determinants, and then compute and store their \
inverses.\
\>", "Text",
 CellChangeTimes->{
  3.745987646734977*^9, {3.7459876839973917`*^9, 
   3.7459877585264482`*^9}},ExpressionUUID->"a96b0494-bfde-4c2b-9b48-\
3ecb30b95dff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Jacobians", "[", 
       RowBox[{"row", ",", "col"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"detJ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Det", "[", 
       RowBox[{"J", "[", 
        RowBox[{"[", 
         RowBox[{"row", ",", "col"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inverseJ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Inverse", "[", 
       RowBox[{"J", "[", 
        RowBox[{"[", 
         RowBox[{"row", ",", "col"}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"row", ",", "1", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"col", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"detJ", "[", 
  RowBox[{"[", 
   RowBox[{"23", ",", "10"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"inverseJ", "[", 
   RowBox[{"[", 
    RowBox[{"23", ",", "10"}], "]"}], "]"}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"determinant", " ", "of", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}], " ", "and", " ", "inverse", " ", "of",
      " ", "same", " ", 
     RowBox[{"element", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.74586401789872*^9, 3.745864056589757*^9}, {
   3.74586411407899*^9, 3.7458641787921247`*^9}, {3.7458642433434353`*^9, 
   3.745864259912466*^9}, {3.74586475391324*^9, 3.7458648274779253`*^9}, {
   3.745918009772092*^9, 3.7459180492181807`*^9}, {3.745921368256702*^9, 
   3.7459213887702436`*^9}, {3.7459214304118633`*^9, 
   3.7459214338992853`*^9}, {3.745921469062749*^9, 3.745921523384083*^9}, {
   3.745921700689022*^9, 3.745921718056126*^9}, {3.7459217883840857`*^9, 
   3.745921789617581*^9}, {3.745922608488481*^9, 3.745922612573736*^9}, 
   3.745987636066799*^9, {3.74598769083892*^9, 3.745987692081154*^9}, {
   3.745987762768702*^9, 3.7459877682211514`*^9}, {3.74599447226998*^9, 
   3.745994538118328*^9}, {3.745997416852703*^9, 
   3.745997422507172*^9}},ExpressionUUID->"9a28b2a2-1891-409d-877e-\
52e60ce69707"],

Cell[BoxData[
 RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
  RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{3.745921725542904*^9, 3.7459217938756227`*^9, 
  3.7459226152741547`*^9, 3.745929401651759*^9, 3.745936949071759*^9, 
  3.745949045866823*^9, 3.745997432133645*^9, 3.7469754921947823`*^9, 
  3.7469758861735897`*^9, 
  3.746976104685482*^9},ExpressionUUID->"e0ad22ed-4661-4707-8200-\
b6c5c926aff9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"0.01697172856017551`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.00013847394648949796`", " ", "\[Xi]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "0.016220782774838988`"}], "-", 
        RowBox[{"0.0008894197318260189`", " ", "\[Xi]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]]},
     {
      FractionBox[
       RowBox[{"0.0001384739464894702`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.00013847394648949796`", " ", "\[Eta]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]], 
      FractionBox[
       RowBox[{"0.024110580268174003`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.0008894197318260189`", " ", "\[Eta]"}]}], 
       RowBox[{"0.0004114443795457532`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.000012848834458634462`", " ", "\[Eta]"}], "+", 
        RowBox[{"3.4618486622374273`*^-6", " ", "\[Xi]"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.745921725542904*^9, 3.7459217938756227`*^9, 
  3.7459226152741547`*^9, 3.745929401651759*^9, 3.745936949071759*^9, 
  3.745949045866823*^9, 3.745997432133645*^9, 3.7469754921947823`*^9, 
  3.7469758861735897`*^9, 
  3.746976104688284*^9},ExpressionUUID->"63ae291a-a229-4453-9401-\
9755e8475abd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Number", " ", "of", " ", "integrals", " ", "to", " ", "compute"}], 
  " ", "=", " ", 
  RowBox[{"230", " ", 
   RowBox[{"elements", " ", "\[CenterDot]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["5", "2"], " ", "overlap", " ", 
        RowBox[{"factors", " ", "\[CenterDot]", " ", "n"}], 
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}]}], "2"], " ", "+", " ", 
      RowBox[{"5", " ", "forcing", " ", "vector", " ", 
       RowBox[{"factors", " ", "\[CenterDot]", " ", "n"}]}]}], 
     ")"}]}]}]}]], "Text",
 CellChangeTimes->{3.745987833152452*^9, 
  3.74598787048892*^9},ExpressionUUID->"2fecb08d-21c7-4007-903d-80b83eaf5437"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"230", "  ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"25", "  ", "13", " ", 
     RowBox[{"12", " ", "/", " ", "2"}]}], " ", "+", 
    RowBox[{"5", " ", "12"}]}], " ", ")"}]}]], "Input",
 CellChangeTimes->{{3.745865397549535*^9, 3.7458654016884193`*^9}, {
   3.74586716470231*^9, 3.745867166316972*^9}, {3.745867230070262*^9, 
   3.745867230792966*^9}, {3.745867307865114*^9, 3.7458673450032387`*^9}, {
   3.745867440036338*^9, 3.745867473032077*^9}, {3.745867527666387*^9, 
   3.745867529439221*^9}, {3.745921845703678*^9, 3.74592191678828*^9}, {
   3.745921993841278*^9, 3.745922129640036*^9}, 3.745987821488402*^9, {
   3.745987881588521*^9, 
   3.745987882810186*^9}},ExpressionUUID->"2b9d5036-8cf7-43eb-876e-\
6970a8bcb494"],

Cell[BoxData["462300"], "Output",
 CellChangeTimes->{3.7458654026789293`*^9, 3.745867345684099*^9, 
  3.7458675330674667`*^9, 3.74592213556035*^9, 
  3.745936954037362*^9},ExpressionUUID->"4670eec1-986d-4154-84ca-\
0d52e683a8f9"]
}, Open  ]],

Cell["\<\
We write down 12 basis functions on reference square (functions of \[Xi] and \
\[Eta]), their partials along \[Xi] and their partials along \[Eta].\
\>", "Text",
 CellChangeTimes->{{3.74598791803904*^9, 
  3.745987960350068*^9}},ExpressionUUID->"d2346763-a10a-4fe7-8e24-\
205cde59d090"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{
    FractionBox["1", "8"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x", "+", 
         SuperscriptBox["x", "2"], "+", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "1"}], ")"}], "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "x", "+", 
         SuperscriptBox["x", "2"], "+", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "2"]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "x", "+", 
         SuperscriptBox["x", "2"], "-", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "x", "+", 
         SuperscriptBox["x", "2"], "-", "y", "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "+", "1"}], ")"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "1"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "=", 
    RowBox[{"\[Phi]", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "\[Xi]"}], ",", 
       RowBox[{"y", "\[Rule]", "\[Eta]"}]}], "}"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"d\[Phi]d\[Xi]", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"#", ",", "\[Xi]"}], "]"}], "]"}], "&"}], ",", "\[Phi]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d\[Phi]d\[Eta]", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"#", ",", "\[Eta]"}], "]"}], "]"}], "&"}], ",", "\[Phi]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Phi]", "//", "MatrixForm"}], ",", " ", 
   RowBox[{"d\[Phi]d\[Xi]", "//", "MatrixForm"}], ",", 
   RowBox[{"d\[Phi]d\[Eta]", "//", "MatrixForm"}]}], "}"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Example", ":", " ", 
     RowBox[{"Basis", " ", "functions"}]}], ",", " ", 
    RowBox[{
    "ksi", " ", "partials", " ", "and", " ", "eta", " ", "partials", " ", 
     "side", " ", "by", " ", 
     RowBox[{"side", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.745865673896501*^9, 3.7458658558476562`*^9}, {
   3.7458659241477413`*^9, 3.745865929187855*^9}, {3.745917841566265*^9, 
   3.745917991479117*^9}, {3.745918063373268*^9, 3.7459180754849043`*^9}, {
   3.745922293809897*^9, 3.745922324774239*^9}, {3.745922373178953*^9, 
   3.745922450376917*^9}, {3.745922627893914*^9, 3.745922630577613*^9}, 
   3.745987909973558*^9, {3.7459879652362347`*^9, 3.745987968985034*^9}, {
   3.745993461638286*^9, 3.745993464665224*^9}, {3.745993535606844*^9, 
   3.745993556362589*^9}, {3.745993753932816*^9, 3.745993774198823*^9}, {
   3.745993804468244*^9, 
   3.7459938548177757`*^9}},ExpressionUUID->"d158fc37-cb8e-4df5-8253-\
7e15f79fd4ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Xi]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "\[Xi]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "\[Xi]"}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Xi]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Xi]"}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "-", "\[Eta]", "+", 
            SuperscriptBox["\[Eta]", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Eta]"}], ")"}], "2"]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Eta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Eta]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "-", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Xi]"}], ")"}], "2"]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}], "+", "\[Xi]", "+", 
            SuperscriptBox["\[Xi]", "2"]}], ")"}]}]},
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "\[Eta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "8"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "\[Eta]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.745922454326682*^9, 3.745922635029648*^9, 
  3.7459294112020817`*^9, 3.745936958443617*^9, 3.745949052670593*^9, 
  3.7459974566388206`*^9, 3.74679176050212*^9, 3.7469755008137817`*^9, 
  3.7469758939651213`*^9, 3.746976117106924*^9, 
  3.7472272682111588`*^9},ExpressionUUID->"e0ba11da-bb8e-456f-8364-\
a287d7473289"]
}, Open  ]],

Cell[TextData[{
 "We write out coefficients of 5 terms appearing in A \[CenterDot] \
\[CapitalDelta]X that depend on position. Later, we'll form 25 integrals \
(each coefficient with each) for each unique ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "j"], " ", 
    SubscriptBox["\[Phi]", "k"]}], TraditionalForm]],ExpressionUUID->
  "de41931c-4c35-45cb-b806-348443689d01"],
 " combination (12 \[CenterDot] 13 / 2 = 78), for each element."
}], "Text",
 CellChangeTimes->{
  3.745988000881611*^9, {3.745992615916394*^9, 3.745992660577537*^9}, {
   3.745993933484066*^9, 3.745993963022484*^9}, {3.7459940297639713`*^9, 
   3.745994038857335*^9}, {3.745994124232102*^9, 3.7459941342959757`*^9}, {
   3.745994168842821*^9, 3.7459943745091953`*^9}, {3.745995276384069*^9, 
   3.7459952882508297`*^9}},ExpressionUUID->"630d47ee-cf86-4b3d-95d4-\
6b531a70e30a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef", "[", 
   RowBox[{"row_", ",", "col_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Xi]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Xi]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "1", ",", "2"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Eta]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"inverseJ", "[", 
       RowBox[{"[", 
        RowBox[{"row", ",", "col", ",", "2", ",", "2"}], "]"}], "]"}], " ", 
      RowBox[{"d\[Phi]d\[Eta]", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"coef", "[", 
  RowBox[{"1", ",", "10", ",", "12"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"5", " ", "factors", " ", "of", " ", "element", " ", "in", " ", 
     RowBox[{"(", 
      RowBox[{"1", ",", " ", "10"}], ")"}], " ", 
     RowBox[{"column", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfUOnbc2JF68dz99SXQuie+b93ASiNcVCtoPoDrb2
PSCao+LPQRC97uHaUyD6R+qjsyB6E0/GJRC9S4jnBYieMqPi0CkgLf/tP5jO
mbr4JIhO+5x0DkS/6bj6EES/+PHrGYg+80TkNYj+lvIBTIf01f0A0XEnFvwG
0UYZeTyngfSXEAZ+EP0kda8HiC6IVPYE0SJmHzLOAOkm20mZINrcNDEXRE+9
Ul8EoldJPt/0HEhfe355C4h2k/j5/yWQ9vjJxvAKSCtJLGAF0SKvWjhB9KL7
Z66BaO+vbjdA9C+/B89B9Io4848g+oa3qOEbIC355LwxiF7jkfzy5KvXjvM4
z70C0QDCW9mx
  "],ExpressionUUID->"66824fbf-9f63-4594-9907-eeec04fe53c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"6.190486669773892`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", "\[Eta]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"122.56261188667688`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[Xi]"}]}], ")"}]}], 
     RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.`", " ", "\[Eta]"}], "+", 
      RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]]}], ",", 
   FractionBox[
    RowBox[{"6.190486669773892`", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", "\[Eta]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "109.54598021152214`"}], "+", 
       RowBox[{"1.`", " ", "\[Eta]"}]}], ")"}]}], 
    RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[Eta]"}], "+", 
     RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]], ",", 
   FractionBox[
    RowBox[{"119.2846986722579`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.3333333333333333`"}], "-", 
       RowBox[{"0.6666666666666666`", " ", "\[Eta]"}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", "\[Xi]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"18.237489224042807`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", "\[Xi]"}]}], ")"}]}], 
    RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.`", " ", "\[Eta]"}], "+", 
     RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"119.2846986722579`", " ", 
      RowBox[{"(", 
       RowBox[{"19.61867602057167`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "\[Eta]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.3333333333333333`"}], "-", 
        RowBox[{"0.6666666666666666`", " ", "\[Eta]"}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", "\[Xi]"}], ")"}]}], 
     RowBox[{"42.19846280670999`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.`", " ", "\[Eta]"}], "+", 
      RowBox[{"1.238097333945014`", " ", "\[Xi]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.745931971886272*^9, 3.745932193253624*^9, {3.745932234418688*^9, 
   3.745932275475174*^9}, 3.745933926605238*^9, 3.745936969106026*^9, 
   3.7459974701846247`*^9, 3.746975508630897*^9, 3.7469755786626873`*^9, 
   3.7469759025791607`*^9, 
   3.746976167900189*^9},ExpressionUUID->"97854792-9e49-4350-a533-\
e12bebc651d1"]
}, Open  ]],

Cell[TextData[{
 "Write a method that will integrate terms of form:   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "[", 
    SubscriptBox["row", "i"]}], TraditionalForm]],ExpressionUUID->
  "b9a83bd2-245f-4709-a9a1-31fc10477414"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "3fe3424f-3dad-4114-a39d-32a9a3cbb533"],
 ", j][[n]] \[CenterDot] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "[", 
    SubscriptBox["row", "i"]}], TraditionalForm]],ExpressionUUID->
  "dd7bd4dc-3478-477b-be15-b651c0315f1c"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "a05d5dd5-35e2-4bd5-b389-6af4e804500d"],
 ", k][[m]] \[CenterDot] detJ[[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["row", "i"], TraditionalForm]],ExpressionUUID->
  "b3f48af5-e143-4b41-ba1c-5156c64cb16b"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["col", "i"], TraditionalForm]],ExpressionUUID->
  "0b4a7871-2589-4d46-94ef-6ae26b731be6"],
 "]],   where i represents an element from 1 to 230;   j,k represent \
elemental functions \[Phi] from 1 to 12;   n,m range from 1 to 5."
}], "Text",
 CellChangeTimes->{{3.745993140090949*^9, 3.745993140882901*^9}, {
  3.745993179549076*^9, 3.74599322394958*^9}, {3.7459932737746487`*^9, 
  3.745993365041719*^9}, {3.745994683434701*^9, 
  3.74599497327698*^9}},ExpressionUUID->"010a9d8b-6ffe-4641-9f89-\
c9c6a318c7ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "startRow", " ", "and", " ", "endRow", " ", "give", " ", "us", " ", 
    "freedom", " ", "to", " ", "split", " ", "integration", " ", "across", 
    " ", "multiple", " ", "processor", " ", 
    RowBox[{"cores", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"IntegrateTerms", "[", 
    RowBox[{"{", 
     RowBox[{"startRow_", ",", "endRow_", ",", "colCount_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "row", ",", "col", ",", "j", ",", "k", ",", "rowCount", ",", "n", ",", 
       "m"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rowCount", "=", "endRow"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"Reap", "[", "\n", "\t", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"row", "=", "startRow"}], ",", 
           RowBox[{"row", "\[LessEqual]", "rowCount"}], ",", 
           RowBox[{"++", "row"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{
              RowBox[{"Reap", "[", "\n", "\t\t", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"col", "=", "1"}], ",", 
                 RowBox[{"col", "\[LessEqual]", "colCount"}], ",", 
                 RowBox[{"++", "col"}], ",", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{"Sow", "[", 
                   RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "j"}], ",", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"k", "=", "j"}], ",", 
                    RowBox[{"k", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "k"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"m", "=", "1"}], ",", 
                    RowBox[{"m", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "m"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "j"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "k"}], "]"}], "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", 
                    RowBox[{"detJ", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                "\n", "\t\t", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
          "\t", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7459384641692367`*^9, {3.745938502681242*^9, 3.745938502841786*^9}, 
   3.7459443770670123`*^9, {3.745944860165071*^9, 3.745944860774439*^9}, {
   3.745945032203983*^9, 3.7459450335384235`*^9}, {3.7459451196222115`*^9, 
   3.7459451366616435`*^9}, 3.7459455625765977`*^9, {3.745947216469322*^9, 
   3.7459472171176176`*^9}, 3.7459491434936795`*^9, {3.745994665264627*^9, 
   3.745994672789562*^9}, {3.7459949974581537`*^9, 3.745995005390809*^9}, {
   3.745995039162722*^9, 3.745995105789192*^9}, {3.745997098433312*^9, 
   3.7459971143576393`*^9}, {3.745997220019031*^9, 
   3.7459972236080313`*^9}},ExpressionUUID->"df121a8c-0f30-484d-aa6f-\
9090c50fa5f2"],

Cell["\<\
We shall perform 3 parallel executions of IntegrateTerms method. We specify \
row ranges over which each thread will integrate.\
\>", "Text",
 CellChangeTimes->{{3.7459951280050917`*^9, 3.745995209012987*^9}, {
  3.745995328034932*^9, 
  3.7459953292229757`*^9}},ExpressionUUID->"9b7a9287-3aba-4129-8072-\
dbc0b31b25f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rowRanges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "16", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "23", ",", "10"}], "}"}]}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7459448989603148`*^9, 3.745944962749708*^9}, {
  3.745944995757431*^9, 3.745945021926447*^9}, {3.7459450549661307`*^9, 
  3.7459450622626095`*^9}, {3.7459452572780523`*^9, 3.745945275444468*^9}, {
  3.745995219259081*^9, 3.745995232598958*^9}, {3.7459971214944477`*^9, 
  3.7459971287362347`*^9}},ExpressionUUID->"fffc131d-8b39-432f-a6e2-\
11fce584e948"],

Cell["\<\
Set up a shared array where each thread will append its result after it is \
finished. This takes about 2 h 45 min on a 3.2 GHz, 4 core machine.\
\>", "Text",
 CellChangeTimes->{{3.745995354962442*^9, 3.745995405223477*^9}, {
  3.7459956091463833`*^9, 
  3.745995676665224*^9}},ExpressionUUID->"08b5d9af-4ed3-4409-9bf0-\
b83e399ffe64"],

Cell[BoxData[{
 RowBox[{"results", "=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "results", "]"}], "\n", 
 RowBox[{"ParallelDo", "[", 
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"results", ",", 
     RowBox[{"integration", "[", 
      RowBox[{"rowRanges", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.745924162608917*^9, 3.7459242685869713`*^9}, 
   3.745924318355905*^9, {3.745929799146524*^9, 3.74592980577112*^9}, {
   3.745929917010956*^9, 3.745929971269308*^9}, {3.7459316612756567`*^9, 
   3.745931797751738*^9}, 3.7459318428923283`*^9, 3.745931910996675*^9, {
   3.745932299627763*^9, 3.7459323984798717`*^9}, {3.745932433780085*^9, 
   3.745932470680882*^9}, {3.74593251226827*^9, 3.745932541079899*^9}, {
   3.7459331855052023`*^9, 3.7459333072332897`*^9}, {3.745933340073318*^9, 
   3.745933346471951*^9}, {3.7459334122312202`*^9, 3.7459334256386747`*^9}, {
   3.7459334979673033`*^9, 3.745933519004055*^9}, {3.745933553280377*^9, 
   3.745933570478187*^9}, {3.745933637834435*^9, 3.745933689611847*^9}, {
   3.74593372994412*^9, 3.7459338932453117`*^9}, {3.745933983553006*^9, 
   3.745934008802096*^9}, {3.745934073388218*^9, 3.745934088038616*^9}, {
   3.745934172829108*^9, 3.7459342750913754`*^9}, {3.745934572997957*^9, 
   3.745934594241065*^9}, {3.745934655209078*^9, 3.7459346650780277`*^9}, {
   3.7459348079213247`*^9, 3.7459348167285223`*^9}, {3.745934887800741*^9, 
   3.745934925562989*^9}, {3.74593505361414*^9, 3.745935111447016*^9}, {
   3.745936432874097*^9, 3.745936437280925*^9}, 3.7459370992414045`*^9, {
   3.7459375619789424`*^9, 3.7459375622412148`*^9}, {3.745937727801487*^9, 
   3.7459377360045524`*^9}, {3.7459377802193136`*^9, 3.745937787698306*^9}, {
   3.7459380071703515`*^9, 3.7459380202493987`*^9}, {3.7459381404419465`*^9, 
   3.745938141634782*^9}, {3.7459382894175415`*^9, 3.745938324537649*^9}, {
   3.745938356354534*^9, 3.7459383656756277`*^9}, {3.7459384150505934`*^9, 
   3.7459384785846567`*^9}, {3.7459385164394217`*^9, 3.745938580175974*^9}, {
   3.745938808096481*^9, 3.745938836553373*^9}, {3.745938958777487*^9, 
   3.7459389628964715`*^9}, 3.745939164951605*^9, {3.7459395937608013`*^9, 
   3.7459396098916407`*^9}, {3.745944828894695*^9, 3.7459448426369452`*^9}, {
   3.7459452298374367`*^9, 3.745945252038077*^9}, {3.745945292646467*^9, 
   3.7459453398542185`*^9}, {3.745945375347333*^9, 3.7459453765640707`*^9}, {
   3.745945575870072*^9, 3.745945577133667*^9}, {3.7459458742858057`*^9, 
   3.7459458769642696`*^9}, {3.7459472416938643`*^9, 3.74594724224539*^9}, 
   3.745947283707509*^9, {3.745992839661702*^9, 3.745992840955309*^9}, {
   3.745995236469133*^9, 
   3.745995264699793*^9}},ExpressionUUID->"ea526ec7-9fa1-46e9-819c-\
60a5ddfa06e3"],

Cell["We export results to 3 files.", "Text",
 CellChangeTimes->{{3.7459954255123577`*^9, 
  3.7459954864695797`*^9}},ExpressionUUID->"2cbc14a8-1eec-4118-b70d-\
db90b2ec5fc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results1.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
   3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
   3.745947138293415*^9}, 3.745959558579385*^9, {3.745999863651536*^9, 
   3.745999866368115*^9}},ExpressionUUID->"b53324cb-9c99-448d-8826-\
5c4006cd0fef"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results1.txt\"\>"], "Output",
 CellChangeTimes->{
  3.7459596300592537`*^9},ExpressionUUID->"0302b956-9092-4af2-b5cc-\
bc26a5fc8416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results2.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
  3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
  3.745947138293415*^9}, {3.745959558579385*^9, 3.7459595626026177`*^9}, {
  3.7459998689859*^9, 
  3.7459998721249*^9}},ExpressionUUID->"6cfe0558-4e56-4a4b-ac61-91407c18d06a"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results2.txt\"\>"], "Output",
 CellChangeTimes->{
  3.745959638789843*^9},ExpressionUUID->"71c3f668-aeb6-4b21-9dda-\
9907013d420f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\FizikalneAplikacije\\\
\\results3.txt\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"results", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7459468602797127`*^9, 3.745946936150809*^9}, {
  3.745946966457739*^9, 3.745946976836982*^9}, {3.745947100492478*^9, 
  3.745947138293415*^9}, {3.745959558579385*^9, 3.7459595626026177`*^9}, {
  3.745999874725041*^9, 
  3.745999876459989*^9}},ExpressionUUID->"aac840a4-55c7-4b20-a587-\
e52f151b2f41"],

Cell[BoxData["\<\"C:\\\\Users\\\\Marko\\\\OneDrive\\\\Dokumenti\\\\\
FizikalneAplikacije\\\\results3.txt\"\>"], "Output",
 CellChangeTimes->{3.7459469383608775`*^9, 3.7459469800234957`*^9, 
  3.7459596462788134`*^9},ExpressionUUID->"be377cb6-c8d7-44aa-b6c8-\
34f9454c2eb0"]
}, Open  ]],

Cell["\<\
We check validity of array dimensions by querying last element in first \
results array. First  results array has only 7 rows, which means it is the \
result of computation assigned to third thread (it finished first because \
other two threads had 8 rows to compute). That was an oversight. We\
\[CloseCurlyQuote]ll have to figure out  which of results[[2]] and \
results[[3]] has been calculated by which thread, since they have an \
identical number of rows (8).\
\>", "Text",
 CellChangeTimes->{{3.745995466262289*^9, 3.745995592592169*^9}, {
  3.745995710585335*^9, 3.745995715803362*^9}, {3.7459957629045143`*^9, 
  3.745995929250495*^9}},ExpressionUUID->"2205cce2-af8f-4c29-8563-\
ce94e23636d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "[", 
  RowBox[{"[", 
   RowBox[{
   "1", ",", "7", ",", "10", ",", "12", ",", "1", ",", "5", ",", "5"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7459596089397116`*^9, 3.745959614656392*^9}, {
  3.7459599100244045`*^9, 3.745959910621808*^9}, {3.745959958955529*^9, 
  3.745960009778599*^9}, {3.745960056080757*^9, 
  3.7459601611218147`*^9}},ExpressionUUID->"365c6957-dc72-4cf4-8d44-\
2da0bc856268"],

Cell[BoxData["0.2468967080737511`"], "Output",
 CellChangeTimes->{{3.745959964500696*^9, 3.7459600108308105`*^9}, {
  3.7459600642070217`*^9, 
  3.7459601621949425`*^9}},ExpressionUUID->"5b61f849-84fc-4bb1-8e31-\
2349fce7c757"]
}, Open  ]],

Cell["\<\
After some effort we discover the correspondence of results to row ranges. \
\>", "Text",
 CellChangeTimes->{{3.745997935983198*^9, 3.745997982374411*^9}, {
  3.745998136371594*^9, 
  3.745998145835148*^9}},ExpressionUUID->"c4242e91-f91f-440d-a6e4-\
c16c7ec7b465"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Rows", " ", "17"}], " ", "-", " ", "23"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"results1", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results1.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results1", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Rows", " ", "1"}], " ", "-", " ", "8"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"results2", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results2.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results2", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Rows", " ", "9"}], " ", "-", " ", "16"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"results3", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", 
       "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results3.txt\>\"", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "results3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.745996816033514*^9, 3.745996827594061*^9}, {
  3.745996997493169*^9, 3.7459970553172493`*^9}, {3.745997787986829*^9, 
  3.745997860558496*^9}, {3.74599789303384*^9, 3.745997901248081*^9}, {
  3.745998152473055*^9, 3.745998158501986*^9}, {3.745998632325129*^9, 
  3.745998674300931*^9}, {3.7459999988597*^9, 
  3.746000016083068*^9}},ExpressionUUID->"5bd2a4f9-65a3-40c1-864f-\
d51f35445352"],

Cell["We rearrange the results in correct order and merge them.", "Text",
 CellChangeTimes->{{3.745999900225193*^9, 
  3.745999919674183*^9}},ExpressionUUID->"86c3eedb-ac1e-4d71-984c-\
b708fee7727c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"results2", ",", "results3", ",", "results1"}], "}"}], ",", 
     "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7459982125624027`*^9, 3.7459982907835283`*^9}, {
  3.745998452581296*^9, 3.745998455188814*^9}, {3.745999772881865*^9, 
  3.745999780968862*^9}},ExpressionUUID->"731295f9-4de9-490d-89cd-\
4a18f9e45075"],

Cell["We check validity by accessing last element.", "Text",
 CellChangeTimes->{{3.745999929478181*^9, 
  3.745999954537073*^9}},ExpressionUUID->"fd263ef4-a38d-4273-a220-\
fb61215b35b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "[", 
  RowBox[{"[", 
   RowBox[{"23", ",", "10", ",", "12", ",", "1", ",", "5", ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.745998296648452*^9, 3.7459983692348127`*^9}, {
  3.74599845954808*^9, 3.7459984960600243`*^9}, {3.745999752571426*^9, 
  3.745999803202227*^9}},ExpressionUUID->"172b5aa3-c9ed-4f92-b460-\
993a10882ffd"],

Cell[BoxData["0.2468967080737511`"], "Output",
 CellChangeTimes->{{3.745998318617022*^9, 3.745998371157708*^9}, {
  3.745998472153515*^9, 3.7459985058117247`*^9}, {3.745999746598075*^9, 
  3.7459998047999363`*^9}},ExpressionUUID->"179fb8e2-bb61-403b-b4e3-\
914193bc35ed"]
}, Open  ]],

Cell["\<\
Now we export the ordered array again, so our C# program can read it and use \
these integrals in calculations.\
\>", "Text",
 CellChangeTimes->{{3.746000170184457*^9, 
  3.7460002317115383`*^9}},ExpressionUUID->"a97f7b90-499b-41e9-8826-\
a1ae92d2354c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/Results/\
results.txt\>\"", ",", 
   RowBox[{"{", "results", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746000074669569*^9, 3.746000085674943*^9}, {
  3.746000125783242*^9, 
  3.746000128178813*^9}},ExpressionUUID->"29c505a4-83bf-4a7e-8818-\
6e7728f890bd"],

Cell[BoxData["\<\"/home/marko/Dokumenti/FizikalneAplikacije/FluidDynamics/\
Results/results.txt\"\>"], "Output",
 CellChangeTimes->{3.7460000951173887`*^9, 
  3.7460001338887444`*^9},ExpressionUUID->"e79cc618-ba04-4935-b314-\
a34bea4c20bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "results", "]"}]], "Input",
 CellChangeTimes->{{3.746000280523863*^9, 
  3.746000284869973*^9}},ExpressionUUID->"5b29d558-e1ec-4592-b4b1-\
34ce80f7ae68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"23", ",", "10", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.746000285652266*^9},ExpressionUUID->"d571430c-c155-42ee-bc5d-\
f54cae33b499"]
}, Open  ]],

Cell["\<\
Now do the same for RightBlock. We shall only take a single element\
\[CloseCurlyQuote]s corner node positions, since all elements are of the same \
shape. This means we have to evaluate integrals for only one element.\
\>", "Text",
 CellChangeTimes->{{3.74670143299522*^9, 
  3.74670152832106*^9}},ExpressionUUID->"742047f1-ed43-4641-ab18-\
7bd9c70aebae"],

Cell[CellGroupData[{

Cell["\<\
1) We acquire element corner positions for element (2,2) in form {x1, y1}, \
{x2, y2}, {x3, y3}, {x4, y4}.\
\>", "Subsection",
 CellChangeTimes->{{3.746790048254834*^9, 
  3.746790103303874*^9}},ExpressionUUID->"e047eee7-2ffd-4b43-9b7b-\
153595f44f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodePos2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/Results/\
rectElement.txt\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodePos2", "=", 
   RowBox[{"ToExpression", "[", "nodePos2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", "nodePos2", "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{
    "4", " ", "corner", " ", "node", " ", "positions", " ", "for", " ", 
     "element", " ", "in", " ", 
     RowBox[{"23", "'"}], "rd", " ", "row", " ", "and", " ", 
     RowBox[{"10", "'"}], "th", " ", "column", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"most", " ", "upper", " ", "right", " ", "element"}], ")"}], 
      "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746790142824296*^9, 3.746790241902772*^9}, 
   3.74679063054811*^9},ExpressionUUID->"bdb19c3b-46e4-4f49-a9a0-\
194f1293c4da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "0.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "0.1`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.746790187596938*^9, 3.74679024391899*^9}, {
   3.746790624910161*^9, 3.746790631341084*^9}, 
   3.746791092807248*^9},ExpressionUUID->"d7481d03-1e21-486c-a8d3-\
9c21b8f08041"]
}, Open  ]],

Cell["2) We transpose the nodePos2 array.", "Text",
 CellChangeTimes->{{3.74679115264872*^9, 
  3.746791180586053*^9}},ExpressionUUID->"43978c5a-1d6b-48e0-a3e0-\
c051c87df63a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"element", " ", "=", " ", 
  RowBox[{"Transpose", "[", "nodePos2", "]"}]}]], "Input",
 CellChangeTimes->{{3.746791232730019*^9, 
  3.7467912520630074`*^9}},ExpressionUUID->"62bc474a-f3c3-4a4c-bd0c-\
02bc3388ac88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "1.1`", ",", "1.1`", ",", "1.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "0.05`", ",", "0.1`", ",", "0.1`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.746791253300572*^9},ExpressionUUID->"ce0126cf-6262-4afd-864e-\
88db0436979a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transformation", " ", 
    RowBox[{"functions", ".", " ", "Row"}], " ", "and", " ", "col", " ", 
    "are", " ", "indices", " ", "of", " ", "element", " ", "inside", " ", 
    "\"\<elements\>\"", " ", 
    RowBox[{"array", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P2", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"element", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q2", "[", 
     RowBox[{"\[Xi]_", ",", "\[Eta]_"}], "]"}], ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      RowBox[{"element", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
      RowBox[{
       SubscriptBox["S", "i"], "[", 
       RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"P2", "[", 
    RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], "\n", 
   RowBox[{"%", "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.7467913524033012`*^9, 
  3.746791398905856*^9}},ExpressionUUID->"8462d0e6-062c-4bac-a8a7-\
f50caf57550a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2625`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.2625`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.275`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}], "+", 
  RowBox[{"0.275`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.746791400972144*^9},ExpressionUUID->"b6cc48e4-bbb0-48fb-84a5-\
5f5a15595c5f"],

Cell[BoxData[
 RowBox[{"1.0750000000000002`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.025000000000000022`", " ", "\[Xi]"}]}]], "Output",
 CellChangeTimes->{
  3.746791400974289*^9},ExpressionUUID->"c4a5e4f3-9059-49e9-a7a5-\
20158f19bff8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jacobian2", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"P2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Xi]"}], "]"}], 
        ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"P2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Eta]"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Q2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Xi]"}], "]"}], 
        ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Q2", "[", 
           RowBox[{"\[Xi]", ",", "\[Eta]"}], "]"}], ",", "\[Eta]"}], "]"}]}], 
       "}"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Jacobian2", "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"Jacobian", " ", "for", " ", "element", " ", 
     RowBox[{"(", 
      RowBox[{"23", ",", "10"}], ")"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746791451965535*^9, 3.746791506962228*^9}, {
  3.746791573878478*^9, 3.746791577374588*^9}, {3.746791706735985*^9, 
  3.746791714428278*^9}},ExpressionUUID->"62891c5a-db81-42c1-8add-\
31a23355d474"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.025000000000000022`", "0.`"},
     {"0.`", "0.025`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.746791508843569*^9, 3.746791578296617*^9, 
  3.7467917156010447`*^9},ExpressionUUID->"6fdbb83c-3ca4-41c1-98d8-\
e19927752679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DetJ2", "=", 
  RowBox[{"Det", "[", "Jacobian2", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"InvJ2", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "Jacobian2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.746791560138892*^9, 
  3.746791683107188*^9}},ExpressionUUID->"748d1ee5-d672-4889-bf4a-\
a6eb761e3a07"],

Cell[BoxData["0.0006250000000000006`"], "Output",
 CellChangeTimes->{{3.74679163421646*^9, 3.746791652728673*^9}, 
   3.746791684704198*^9},ExpressionUUID->"a22c0a44-504c-4258-ae59-\
edb4a1372a31"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"39.99999999999997`", "0.`"},
     {"0.`", "40.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.74679163421646*^9, 3.746791652728673*^9}, 
   3.746791684706526*^9},ExpressionUUID->"c4a1b3d3-c409-4a99-b9b5-\
4c2c6522d1ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef2", "[", "j_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Xi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Xi]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Eta]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"InvJ2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
     RowBox[{"d\[Phi]d\[Eta]", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"coef2", "[", "12", "]"}], "//", "Simplify"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", ":"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.746791858524633*^9, 
  3.746791948495241*^9}},ExpressionUUID->"5a94e752-de15-49ff-b4b8-\
35fdda8e92b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.9999999999999964`"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Eta]"}], ")"}]}], ",", "0.`", ",", "0.`", ",", 
   RowBox[{
    RowBox[{"-", "5.`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "\[Eta]"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Eta]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7467919496212473`*^9},ExpressionUUID->"43d8a49c-1ad7-4432-a9d0-\
c38f0a3ab2cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegrateTerms2", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "k", ",", "n", ",", "m"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Quiet", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Reap", "[", "\n", "\t\t\t", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "12"}], ",", 
          RowBox[{"++", "j"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Sow", "[", 
            RowBox[{
             RowBox[{"Reap", "[", "\n", "\t\t\t\t", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "j"}], ",", 
                RowBox[{"k", "\[LessEqual]", "12"}], ",", 
                RowBox[{"++", "k"}], ",", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{
                   RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"m", "=", "1"}], ",", 
                    RowBox[{"m", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "m"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef2", "[", "j", "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{
                    RowBox[{"coef2", "[", "k", "]"}], "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", "DetJ2"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
               "\n", "\t\t\t\t", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
         "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.746792036263768*^9, 3.7467921221807833`*^9}, {
  3.746792152338471*^9, 3.746792155254722*^9}, {3.74679221183118*^9, 
  3.746792225741086*^9}, {3.746792296614397*^9, 3.746792304273047*^9}, {
  3.746792344361072*^9, 3.746792374535913*^9}, {3.746792733183049*^9, 
  3.7467927496866283`*^9}, {3.746793279590293*^9, 
  3.746793285025324*^9}},ExpressionUUID->"53d4a450-c250-4399-b8ce-\
a226f1d846db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegrateTerms2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746793172119583*^9, 3.746793189747575*^9}, {
  3.7467939063875313`*^9, 
  3.746793921548121*^9}},ExpressionUUID->"8ce8e24e-1338-4bfd-a80e-\
9852df620d22"],

Cell[BoxData["0.00009146825401131258`"], "Output",
 CellChangeTimes->{3.746793817989464*^9, 
  3.746793930649743*^9},ExpressionUUID->"d11b17d9-f293-4a58-989e-\
272e0ca44ad5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/Results/\
rectIntegrals.txt\>\"", ",", 
   RowBox[{"{", "IntegrateTerms2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746794114517778*^9, 
  3.7467941403951473`*^9}},ExpressionUUID->"f9f3cc29-103d-4d6d-ab7c-\
3bc95ee223b9"],

Cell[BoxData["\<\"/home/marko/Dokumenti/FizikalneAplikacije/Fluid/ChannelFlow/\
Results/rectIntegrals.txt\"\>"], "Output",
 CellChangeTimes->{
  3.74679414450839*^9},ExpressionUUID->"f61c3407-e467-4e89-a0b8-832670a6fafb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegrateTerms2", "[", 
  RowBox[{"[", 
   RowBox[{"12", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746891218395217*^9, 
  3.746891239238509*^9}},ExpressionUUID->"6cbc3baa-c3ea-4875-9593-\
689a83671a27"],

Cell[BoxData["0.000031746031726678295`"], "Output",
 CellChangeTimes->{
  3.746891240157332*^9},ExpressionUUID->"b6def720-913b-445f-a71f-\
198cd849d86f"]
}, Open  ]],

Cell[BoxData["0.000031746031726678295`"], "Input",ExpressionUUID->"90a5edb4-1367-40a0-b310-d3fbf7df3838"],

Cell["\<\
Now compute remaining integrals needed for forcing vector of form \[Phi] \
\[Phi] \[Phi].\
\>", "Text",
 CellChangeTimes->{{3.746970060607525*^9, 
  3.746970120245669*^9}},ExpressionUUID->"76b908d4-6119-45c6-8849-\
43cc94364b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "startRow", " ", "and", " ", "endRow", " ", "give", " ", "us", " ", 
    "freedom", " ", "to", " ", "split", " ", "integration", " ", "across", 
    " ", "multiple", " ", "processor", " ", 
    RowBox[{"cores", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"IntegrateTerms3", "[", 
    RowBox[{"{", 
     RowBox[{"startRow_", ",", "endRow_", ",", "colCount_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"row", ",", "col", ",", "j", ",", "n"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"Quiet", "["}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"Reap", "[", "\n", "\t", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"row", "=", "startRow"}], ",", 
         RowBox[{"row", "\[LessEqual]", "endRow"}], ",", 
         RowBox[{"++", "row"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{
            RowBox[{"Reap", "[", "\n", "\t\t", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"col", "=", "1"}], ",", 
               RowBox[{"col", "\[LessEqual]", "colCount"}], ",", 
               RowBox[{"++", "col"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"Sow", "[", 
                 RowBox[{
                  RowBox[{"Reap", "[", "\n", "\t\t\t", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "12"}], ",", 
                    RowBox[{"++", "j"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"n", "=", "1"}], ",", 
                    RowBox[{"n", "\[LessEqual]", "5"}], ",", 
                    RowBox[{"++", "n"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"coef", "[", 
                    RowBox[{"row", ",", "col", ",", "j"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], " ", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", 
                    RowBox[{"detJ", "[", 
                    RowBox[{"[", 
                    RowBox[{"row", ",", "col"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Xi]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Eta]", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ";"}]}], "\n", "\t\t\t\t\t", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
                    "\n", "\t\t\t", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
              "\n", "\t\t", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], "\n", 
        "\t", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\n", 
    RowBox[{"(*", "]", "*)"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7469701289371567`*^9, {3.746970193065446*^9, 3.746970212921853*^9}, {
   3.746970313677672*^9, 3.746970320214881*^9}, {3.74697038956719*^9, 
   3.746970395578701*^9}, 3.746970769874619*^9, 3.7469708303197117`*^9, {
   3.746974864793776*^9, 3.7469748687098207`*^9}, 3.746975088654313*^9, {
   3.746975174443486*^9, 3.746975269087113*^9}, {3.746975947204805*^9, 
   3.746975957670576*^9}, {3.7469763563867903`*^9, 3.746976366812992*^9}, {
   3.746976406736294*^9, 
   3.746976423077572*^9}},ExpressionUUID->"135b5e62-0e84-4fe3-8779-\
224687d252fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result4", "=", 
   RowBox[{"IntegrateTerms3", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "23", ",", "10"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7469756425693283`*^9, 3.746975720095366*^9}, {
   3.746976374374295*^9, 3.7469763997925587`*^9}, 
   3.746976431061233*^9},ExpressionUUID->"6e1c9417-2d74-438a-9470-\
be35d9beb395"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,1,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976436300349*^9},ExpressionUUID->"ec34fa6e-4202-49e0-8269-\
d0580d40d5a1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.645471393432856`*^-23\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.621506949364279`*^-21\\\"}]\\) for the integral and error estimates.\"",2,
   34,2,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976521060603*^9},ExpressionUUID->"71baeefc-56ac-4fd9-ab1f-\
62608de8cee4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,3,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976521276121*^9},ExpressionUUID->"91a17ad2-69d0-4c8a-b821-\
e1063685ef56"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"5.761991513028073`*^-24\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.594819938592916`*^-21\\\"}]\\) for the integral and \
error estimates.\"",2,34,4,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597205097*^9},ExpressionUUID->"5bb97032-ffd6-45af-899c-\
0cda07dbec08"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,5,18456932121190874387,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597645811*^9},ExpressionUUID->"be62d733-fd20-467c-a924-\
4ce510e654f9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,34,6,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976597663382*^9},ExpressionUUID->"b5f7e49c-e837-4f8c-a75e-\
920c83d0e9ed"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","eincr",
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"2.49136460743315`*^-22\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3189026861465772`*^-19\\\"}]\\) for the integral and \
error estimates.\"",2,34,7,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976623252756*^9},ExpressionUUID->"abb0c5da-feee-4af3-a9a0-\
c1bc957a0ae3"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,34,8,18456932121190874387,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.746976623254416*^9},ExpressionUUID->"c594f1b7-30aa-4c32-ba2b-\
f520dc2e9826"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.746976375632123*^9, 
  3.747024566720397*^9},ExpressionUUID->"ed858bc4-523f-43b8-87d4-\
58fbd69b6863"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result4", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.746975972258051*^9, 
  3.7469760557998953`*^9}},ExpressionUUID->"4c4220e4-855c-4298-9fa8-\
9d7eb00f112c"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.746975983128768*^9, 
  3.746976056360248*^9}},ExpressionUUID->"f4deaac4-2123-4d00-9c00-\
02a3dc634c14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.747227407134776*^9, 3.747227459251917*^9}, {
   3.747227506600131*^9, 3.74722763227094*^9}, {3.74722824353225*^9, 
   3.747228249694559*^9}, 
   3.74723512710732*^9},ExpressionUUID->"be13d489-6882-4519-8f84-\
a045e4e31078"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "\[Eta]", "+", 
    SuperscriptBox["\[Eta]", "2"], "+", 
    SuperscriptBox["\[Xi]", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.747227465041971*^9, {3.7472275310435658`*^9, 3.74722758128537*^9}, {
   3.747227612821504*^9, 3.74722763437836*^9}, {3.747228245361068*^9, 
   3.747228251033579*^9}},ExpressionUUID->"0fcbddda-6838-4abd-ab69-\
5b67f991e6bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"func", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7472273940355177`*^9, 3.747227401725153*^9}, {
  3.747227469453679*^9, 
  3.747227489315789*^9}},ExpressionUUID->"e558a82f-a9a5-4d95-8700-\
2d7819d49bf3"],

Cell[BoxData[LineWrapBox["\[AutoOperand]"], InputForm], "Output",
 CellChangeTimes->{
  3.7472274905461397`*^9, 3.74722753472897*^9, 3.747227584130932*^9, {
   3.747227615622024*^9, 3.747227637616542*^9}, {3.7472282467063932`*^9, 
   3.747228252083705*^9}},ExpressionUUID->"d46ffd88-adc8-431b-b087-\
6fd7caf831b6"]
}, Open  ]],

Cell["Values on lower square side for basis functions.", "Text",
 CellChangeTimes->{{3.747235808312351*^9, 3.747235862805519*^9}, {
  3.74724423165257*^9, 
  3.74724423232191*^9}},ExpressionUUID->"068d3ea3-85c6-43ac-92de-\
3ddfd2569205"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u1", "=."}], ";", 
  RowBox[{"h2", "=."}], ";", " ", 
  RowBox[{"h3", "=."}], ";", "  ", 
  RowBox[{"u4", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f1x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f4x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f1x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f4x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f3x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f3x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f2x2", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f2x3", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{"-", "1"}]}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H2", "=", " ", 
   RowBox[{
    RowBox[{"u1", " ", "f1x2"}], "+", 
    RowBox[{"u4", " ", "f4x2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{
    RowBox[{"u1", " ", "f1x3"}], " ", "+", " ", 
    RowBox[{"u4", " ", "f4x3"}]}]}], ";"}], "\n", 
 RowBox[{"u2", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f3x2", " ", 
      RowBox[{"(", 
       RowBox[{"h3", "-", "H3"}], ")"}]}], "-", 
     RowBox[{"f3x3", " ", 
      RowBox[{"(", 
       RowBox[{"h2", "-", "H2"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f2x3", " ", "f3x2"}], "-", 
     RowBox[{"f3x3", " ", "f2x2"}]}]], "]"}]}], "\n", 
 RowBox[{"u3", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f2x3", " ", 
      RowBox[{"(", 
       RowBox[{"h2", "-", "H2"}], ")"}]}], "-", 
     RowBox[{"f2x2", 
      RowBox[{"(", 
       RowBox[{"h3", "-", "H3"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f2x3", " ", "f3x2"}], "-", 
     RowBox[{"f3x3", " ", "f2x2"}]}]], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.747234583064803*^9, 3.747234673604381*^9}, {
  3.74723472382712*^9, 3.747234944807932*^9}, {3.747235011307994*^9, 
  3.747235056599532*^9}, {3.7472351007256117`*^9, 3.747235111860909*^9}, {
  3.7472352455749063`*^9, 3.747235633639638*^9}, {3.747235724344458*^9, 
  3.747235754664674*^9}, {3.747243813942836*^9, 3.747243831491826*^9}, {
  3.747243866695107*^9, 
  3.7472438803531446`*^9}},ExpressionUUID->"00654596-25c2-4307-97d6-\
fdee656080f1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"18", " ", "h2"}], "-", 
    RowBox[{"9", " ", "h3"}], "-", 
    RowBox[{"11", " ", "u1"}], "+", 
    RowBox[{"2", " ", "u4"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472438178257732`*^9, 3.747243832573544*^9}, 
   3.7472438814819727`*^9},ExpressionUUID->"b43b5928-e151-4c44-b17a-\
0b2bb8cc4c9e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "9"}], " ", "h2"}], "+", 
    RowBox[{"18", " ", "h3"}], "+", 
    RowBox[{"2", " ", "u1"}], "-", 
    RowBox[{"11", " ", "u4"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472438178257732`*^9, 3.747243832573544*^9}, 
   3.747243881484625*^9},ExpressionUUID->"18a17199-874e-4358-871c-\
693dd9e5dbcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"18", " ", "h2"}], "-", 
      RowBox[{"9", " ", "h3"}], "-", 
      RowBox[{"11", " ", "u1"}], "+", 
      RowBox[{"2", " ", "u4"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "9"}], " ", "h2"}], "+", 
      RowBox[{"18", " ", "h3"}], "+", 
      RowBox[{"2", " ", "u1"}], "-", 
      RowBox[{"11", " ", "u4"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"func", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"u1", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "+", 
    RowBox[{"u2", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "+", " ", 
    RowBox[{"u3", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "+", 
    RowBox[{"u4", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7472351359169073`*^9, 3.747235160311133*^9}, {
  3.747235710702957*^9, 3.7472357161944027`*^9}, {3.747243973486768*^9, 
  3.747244001674238*^9}, {3.747244046938767*^9, 
  3.747244047885673*^9}},ExpressionUUID->"84e53fdf-1f06-4517-ae5c-\
18b5a7ec6c22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"9", " ", "h2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Xi]"}], "-", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "-", 
    RowBox[{"9", " ", "h3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"3", " ", "\[Xi]"}], "+", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "\[Eta]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Eta]", "2"]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Xi]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"u1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "-", 
       RowBox[{"u4", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Xi]"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{
  3.7472351732986526`*^9, {3.747235547414041*^9, 3.747235595045229*^9}, 
   3.747235638366301*^9, {3.7472357187412786`*^9, 3.7472357581547623`*^9}, 
   3.747244053397255*^9},ExpressionUUID->"34290d71-e70d-450b-9ec6-\
78f49e72617d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"func", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u1", "\[Rule]", "4"}], ",", 
      RowBox[{"h2", "\[Rule]", "1"}], ",", 
      RowBox[{"h3", "\[Rule]", "3"}], ",", 
      RowBox[{"u4", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7472440982717047`*^9, 
  3.74724416645468*^9}},ExpressionUUID->"21d3b345-3937-4b2e-9c7d-\
26cfb24fb164"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEnXlYj033wNsLkSU7KUKyhbLXfFEoRWQnayFL9rWQQtkrIUVRaZHSJmtN
RaLQKi20ad/3ffl5H/c599O813v9nn++Vx/zzH3mzJmZc2bOPbfCjoOrjEWE
hITyegoJif75VfilF9zVVUXht7OqRrirS0aw61jA/dADZcgtNS2ujzUTFTzt
NcDiQGYh8qGFugqftzSRSrfjuxS185DHS1oWZ+tWEeN/6slEPinLJ8n0WDlX
Pgm5XojQ+sHWNRyPQj5727t7kq1NRIj7D/iJrn/+g/IE+KZ4BdV2ETEBVz9y
vSddBsfmSwo4eZAXW69Zlp8nxZXPQ255Nlv80yQpaC9yk+sbDjrri4F+kBcd
7yoM6dECfyNPvj6tKjKSasDfoNeJDeo6Dja8nuHXUMbBZ3sMr2fgtQ9W+KYk
NqOegW+2kpoiZ1SDegbul5OYFuVShXoGri5i3bT1YS3qGfiBH6e2Za5rRj1j
+ZurZ9+x4fUM3Gb0EBuvzaKoZ+Byve3mF8yRQD0D7zdI3jL/kSTqGfgtXX2F
y6kSqGfg0fRZ3tNRoqhn4LTDYuRuyybUM/CW/K2jk6PCUM+gP4nqV9oz5/ZB
PQM3KW0SEdfl9Qy/Kj6qr3am8HoGPu9Gfb1YAq9n4OKBvyVOT6tGPQN31Qyd
vcyV1zPwYafkv0tE8PYM3NIsddysuZ2oZ+DHyeJ3MzaKoJ5Rzg1mV+1KxVDP
wDvcjNzPKEignoH/Vt38THWVOOoZeMm4dzriCcKoZ6x/dNgSo58NqGfgfWy2
HQx0f4t6Bj3p7FCZ9Wq2NOoZuLaS9msDZRHUM/Cqlambc9z5eQN+j/Y8P+3Q
aF7PwONPhpWsG8/bM/A+3kt8i9/w8wbwZ32lN5htakQ9A7eadU7k9ex21DPw
KVOb17T1FEY9AzffmfFMc5Mo6hn4zfQ+Ur9NxVDP2N6g8BILL7Qr5Df6DEj5
tEsI9Qz8uNxe+9gR9ahn4ER2ntcbk9eoZ9CH39fD2hVePVDPwB8OH1thZyWE
ega+JKuPf8jZBqwXeEnMIsf/6BP+ht9zs4ryV6zi52fgozbUZy2Rq0Y9A791
0GGFskE96hn4xemaIpVeLahn4Gca6kIC28HOk5DXicf2j3UURj0Ddzfq2WPj
bRHUM/ArghkjhmQJo56BR14+vXZ8UgfMC8hjJ2sov1pai3oG/nZ8k5PusJeM
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHccV+Mb97/fs89BkRBJykhSVMreGUVGVmZKJaTIyCwiK5sKISGUn5UR
srKVFYqWErJ32fF83n3u5/U8f5zXdZ3rXOc+9znnHtdu0Wdwj0FRrVbLilot
FqzyWm2SkFRwoOAyXVytXqsdmNRqYqk9J9oWoo0RbRUdY9NarRRcoutjhBfC
PxW+vw41UXta/D2FNxP+qvBmIm4h/AXBVjrfVEekexrpvJHojwpep3b+E/6h
7qv0rNt1fT0dp4j3d503FX6beJoILhNPHx1bw6/rt4u+rujLRVs793OnCbbT
fauL3lDHpsKvE6zpWFPX1hb6hOCGesFC9z9d1WobFW6zjeibCG8g+iTR3xI8
SPftK3iJnjFUPDXBu3XeUvRYcFu1f5fwjXS8rfMegvvxbdTOO+K9T+3kwmfo
1vvV/knq95e65zXxnS76m6LfJ/ohifs2TdcH6fhLPBuLZxNd20H0lwR7Jf6e
7+r65WWt9op4mguO0rGT8I/U3l16dgvdFwkeJf5NxD9D/J11fQPR19Jxs/A7
BNfR0TL3u08X/Fv864v2l+BpausN0e8Vfb3c7TwnuHvp/mwl/Bk9YxfxbyV4
EfeIvkLP6qtrw4XPFTxexzDhHwsu1HNf5HvqOEP8R4j+vfjf0P3dRdtTcLjo
p4r+t+jD9aw3dE9Lwat1zOCbCHZU39YX7wP6tqeIv5v4PxP/FNE6806Cs8T7
hPCddLyi866CuwieKP49xP+J+P+n83Z8E8Et1ebuondSP/cs3eYOwtsX5u8s
/E3x7S/+vQRP0PmltCN4utpaTceBuraF+Bvr+mT1bYBoH6sfz4o+RHilY2/h
e6v9Abr3WN3bP/H3nKtrW4m3MeNKxxGibyn6e6J/J7yRaN8KXiuetYWnOg7W
+RrieVI8L+qZe4q2neALOroI31bwZR37CN9Z8FUd3YTvynfQPUvU1ss6Pz9x
f34TbZqu7Spae6De5TjRD1Y/dxPeW/ghwocmxn/hfdTGU+LfTcdpOs917Cx8
lO7/k/6LNxLPKNH+4R7dP020O/V9/hP+uGg3CR6qb/I/4VcxR/SsB4SPEt5b
+GThVwo/S8dE4V8L/qXjBbUzUe3cmfjeTZmbev6betbhjDHhq7MmCR8k/tGM
E8GH+fc6DhX9JJ1fI/piwZ8Y02pjvNpcIfwx0W8U/Fr9f128h+i4UtcvEj0X
vCzxOE8E39X7HqbrPQSvSjw2SsGD9V5ThN/AONG174S/KPofOn9e8B496w61
P173dqx5XblTx2bCn8q0brImC54SeS2r81/V95/rXpcbq/0J/EN9p30ytzNB
z5laeF26QPAl3dcgMt/huraENZD1VvdeL9qZ4umv427RL1a/jhN+m/DzhY9N
jK8reJjoR+n+h9TnvrQv+gjxHCN8nPDzhP8W/tFIwZt1z+3C1xNcpvN7hF/C
miD+k9XOI2rnc/XhbdEfEP1kvddP6udM9amfYB/Bm3Rt1cL7BfvGWsJbCV9f
+GrCF6vtsWrnh8RzYgH9TMzzltqbVHqOTBZsJP4WvIvubaNr4+reP/oJf0rP
+1fXeopvuuCd4kn5dsInCN9X1y8V7+XsV+J5XfSJoq8inlnCHxZ+R+q963c9
/1fhFwu/THCIeJ4Rzy3iiYRPE35r7n34ZeF38e7CnxZ+M+u92r9B/3KW3mt8
6j3wT7X5feK1YR5rbe7/8oXgtTq/Wvhqgmzcrwjeq3vP170/sRfr/G3dd4yO
q3T+vuifsW6Ifl3i8d9A8BC94+c1z5MPxXOc+I8VfFewt44bRb9A52cwZgSv
Vx9/ZX8VbKDnNtH1tdSf61Pvt3MSr1F889f1jW9JLV98KdpU3ZMJ/0R4ojZu
qlu2uCG1jPCx6Denlju+YJ1T+83VThO1v1fpvaOb8BPU7ru6/3HxTRX/DoKb
Cz6Veu1vK/g4+zR7Kft96vVpS8Fx9EH33yr4hM63E70V6yj7Meu/nvmQzrdi
nAg+LLgN35Fvp/Pthbfm/6p/x4u2TG09JtqOOvrq/J7UckHKtxTPzqLNQy5S
u9swXwT/x7zXcajOd9J73aS+vK9/1yE3fxvxbKAjVxtvi/4gexV7t+D9de9f
+4vv5MR9/kbtP6xr7UVvynuzn4negfGl41TRBwgOFfyh5vE3Xvc+Jbil4M+F
x8CB6ssf4jlHx4/8V7V7jL7zz8JPLDyu6oLdRDu/7vPDdc+G4jtM8Bi11Vm0
OTr/VXzfC/9HfWms8yMin18g/HzWYp3vpGvdRdtGvI+q31urzeaCLyVeh08V
Pkj40cJ/0D39GJs67mde6ZvFot0smOv4VvTvxD+XfY73FTy28Nr7N30Q/qva
elXfc/3C/dxY9O91TBX9JdGPZ5wim+k4m3VQ8EfBH3Q8LZ4XxHOd3vN4PXeY
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
vzOdz2beCH8beZ11SLTbxT9S/G8IH6PjU7W/SLS08jfh21yg6+fqHeuCP9Vt
h0QWP7603bKLeE7kXvF3ECxi34uuXlS+Z4p4uiIToz8W/mZHiH5Fzf8ce9SG
SbAv1S0PLy5tbztHbVyaew1Ghn+ksJ1z58LjAvtVE/HdpuMR4ZsLflS3LIdd
ZmDqdbh5Yl0UnRTZu7/an6f+bCXYvvTYmIldqPL6xTg5p7CtCZsTvohROGEE
99R3Gir8WMF9xddD+A9BrqgJf19wDx1DeE+1uXlueaCReO/gffT8N4XfVvn7
vib80Nz287cEz0Ce1DNPF/xcz7hU+GeC55W2fT4k+GNhXW9/1k8dX7C2l/6f
fNeK9bi0LnmO4MHYtUR/O/Pz0T1XEeyka/vVbee/An0HWYi1MvL63oo9u7BP
Yxfx3lPYNvKk4DOR7Zx8m61jfx9w7OHYJxvXbPe+oe79rKN4rtD5tezrmXlu
TL1OY0fS56gtLW1balpZ/kK+R7ZvLp4VdesdGwQdBJnsS/XjX9ZGwdG593/s
G+emtgEiT55dWJ6amnvtYA35GjkosnyJLDiosIzwVGHbCDLmazofk1uvSkvv
DzfW7e95OrKszrtUQV6/NrV8+nG4d3Hq9fmcYHscLnip3muv3PvyjaJ11Tvu
E9sO9ndq+W+6zj9N7cdBf1yU2s6DbvJn6j1pamy9BJkW3QQd7KCw37aIrHtg
u0c3vUxwbs1+LPxZS/iPuft4amEbKLbQZbp3Um79pRT9mnTlcK6Vok3OrUNV
ol8t+mLhvwn+XbN+yjm2/slh3x6bu8//6ll3C3+VeVdYtl1pv9X5FaXtEe3Q
8XPbw7YNa9RDom+CjVzvWQ/yy63s+ci7uraHaA8Kf0R4XXwPCm4k2EG0MvAw
fzdDzmTPjb0n3B7mLzLCOPWzIzJFZPrqpf1r5+q+60vb+LbTvV0yyxq3YpOJ
7KccW/f+f3OQAW4Ocgeyb+cgm2zEfBa+R+gn6/qUIBe9LVqXoDNfz7zRMVr4
tMiyBPizgm0j+wt2DXLYZOa/xvQc/rlgI42nefSD/Scyjt3h0tT/FD16Hd17
fGQ9f0xhfZn/Pr9wey30rjOFTxI+T3AXfEHYjpDDBHeL/X33DDIcfWZveaDu
Mbd1brtQW/QL8fyjZ03UMQMZhbVF8H6d3xf5GW8WbnvD0uv0nLBWowfMqnsM
nZ9ZN5iXWh5AhkGWWSexjoA/4/rCazuy9sTStvLrRBtV2Oa9RP0aEdmvdInO
RxZeA+djiysst3+aWzafUfea+LP4f4z8PHyG03WcXrMvjf/2s57TXfyPiGdq
3TYp9sM3cvuQX6l7v/xA1/cKPHMEZ0f2tw0X/+Ca95rFoi2K7Fs9UG3uH5vn
M/5VZB/fUaIdGRtnH3hJ8AzmcmEbMt8cI8HXwrfQcV9h2LrwP9g/su1vQOL5
9YV4V03ts/ogtt+zbd326rMj+7GYM3MKr/0b6H3fE3145DUKP3vrum2GQ9Fh
dVyga+eWljmRPdlDXhV+ntr5Tte+jXytX2K746fI+ciJkf3pc+u2j7HeIStC
u1ztHFd67zhL+KWRbTL4Y/aNrQPjJ35f9KaR8QNz6xE7h2/zTd3vvH5mfKnu
OSnzt/pW36C/8C+Ef8UeFL5h15rlys+Zr8IHx+bZXnjvzPryF6njHJDh1xd9
RWr9+vPUMjI60W6iryf+pcIXxLbPIYOxl1yUe9wim6wo7ZO5sLJcDz9zCdvY
h3XbR4ivQI9oKvyP1PgSwTjzs75mf0mtO33DnlPY3jBbcK3Muv0bseMT6H8b
tdMTe3/ssYdM93zd4/jI3Hofct3Fhf/hbNEWqA/zdbwgvosKj8F32cfUxsGx
6ZeIPkL0eaJfWHjevJM71oLvsznzVuf9BEfrveeKfmFkP/tf6vdnvH9qvQS8
g/j6Zf4XX4reQ885KDZ/E9GX8P+xG0b2dTHn+7KX6vy9umMHnqtb37ihsJz5
pZ6/d+E5OkJwutrdSzw7YDvP7Q/avfB+wH6BLoEeh9/26dxrMTj+rRaZ5ds/
WR81tj/UvbsKDs4s5/+gNruHvfjTmvdjcOyB6Nk/1D1eh2TWNX4M4+iX8K1Y
Z1lv0ZfRY1j/D6x5zQZHH8e+GEdu88fA30v4vYn33G0Em0W2YWG/wm7za922
Jr7xr+E7Y2emHfb0l4K8hNz0CvqU8NVKy1v/hXbeD7Iuezr2W/DfavafIo/9
IrhfkNM+EJ0Apk2D/PxMwMVSOzHzGtUS3SbIk9Dxgy+rW87Edofs90xhWyAy
G++GjStDVq1ZLgIn1uJcwVxH+5rtt3/XLSuhz74v+Ehunxp05L1lYa9kzzw/
tI+9ccMgc/K+KyLHsdDXL0vbwjetPP+Wh/mepJaN8R/+kdj/Oz7MzdUi+0SQ
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

           "]], Polygon3DBox[CompressedData["
1:eJwtnHkcFdMbxufeubPdkgqhhVKkQraIrEn2StoXpWQnCmVtlaVS2aO0WCJL
frRQdlFSqSQVEaGkyL4kfs+3Z/6Yzz3vnDNn5s7MeZfnfd6p06tv26uKQRBc
FAVBSb8z9ftCIQhO0c56alfIgmCU2h3iIFhYDoIjJX8j+QPJx0leXXL/WB1z
j8a/lB//nPZdrTGrmFTyaMkdc/kutcdo3ziN/UxypPaD2ne++m/Tvk90yB2S
20peEQbBYZKPlbyX5Fnq/5/Gt5B8gNobdfw9aj+gfeMlv6ftDbU/1b6T1X5F
2yzJNSQfovabmuMEzXma5vxKv9Ukj1f//ervrvZfmu8RtSdq3ySNf1nbTLUH
ad9Baq9Vfyj5PsndNP5tbSdrng6ab4t+f0mCYJPaR2v/GN2frbpft2rsmZLf
kzxPc8zR8S9o37Xa94S26jruax1zlNqVMv+frmov0vjT0iA4Q+Nv1XmbSX41
P76lxhyu9vna7tGxS7VvpdqNtZ2gdhv199ccs7nf6l+kfSvU11Tz/6y+97Rv
k+a+QmOmSW4t+Vtdx8OSY/0+pO1PtWvomHPV94yOn6H2hdo3SeObat9qjTlY
+45X3yfaN199rTRnB8kjdd4zdL036Xw9NW6F+k6TfJTkrUVf0zka21TjVmv8
tdqmqX2x7t8A9Q1X+1SNH6Xjvtf4W7RvpNpH6/gfJC9Tu6X679bvj5JHqn80
bc15nuT6ap+l/t4a31LnL2jevpIfV//XOlcf9R8o+UbJj0qerP/xlOQR2v+F
jr9K892mdkH7a6t/k7b/1N5FW3P1PS75KbV30zFrNX6Yxq5W+1dd997qf0T9
E9R/jM77LM9b7WfUX9bvAZI3agt1zO7a93nR51qj9m+61t46vpn6+2uuI3X8
U2o/o+Omq39/yQepv4f6GkhuoP09Jb+oMbPVPkT9T6j9tNpPq7+o3wPVP1n7
pqp9lfpHSB6l489W/4P6/4PUN1h9L0q+X/L1kgeyziQ31riPJW/RMZPUPlz3
80td7+08C/UfJLmH+gZLXib5eB1/osZfr7GHSR6i833EekQvSJ6s8Q/rP27X
+KaSz1R/Zx1/rcY3ltyX80peqWPWqX2G5jtH7aHqP0n952v8Jeq/WfIxkleq
/zH1P8lal9xE82/W9S3W/MdLfkHySzpfJR13AufT+FYaP0zHnyz5Sq4r8DV+
pvYA5pG8SvLnat+r8ZepfanaMzS+u+ZbqP4v0XWSX9N5jtH8e2rMz5rzEp6T
+pdLXqP2WB2/RO2P1H5W4xvq+OVFr5nv1fcq9zG0DvwUXaZ9H6q9SuOf0/hr
dN2jNd8Y9Z3D88i81i7SvkPUnqJtgo7/V/O0UP+pOv5UHX+Txh8luZH6Vxb9
jpykvt00bpz679a+Tmqfon0tJN+o8U00vr/Gd9Z8S9TXXPIP6m+rsQMYy3rR
9Sxjvev6npf8tPbX1Pi30F+a40UdX0X9m9V+QP3DIt+v2zXHuRp7mY4fhKz+
09W/FJ2t8d+qv5Xay7W9z/OW3B77oLlP0vgTJVfX8XVZf0XbGGwNOhhdjA5v
ofb7On9btZeo71HN/47O87aO74T+jm1jsDUPa8ypavfSNlHyJMmnx9bv10ne
TfJWtXtiHyQ3QMfqWr7i/kreV/tf1fz/Sd5HY3do7Lvcb+3vqP59NPYZtQ+L
PB6dje7nufJ8h2nfBZFtDrZnD+37UXPM0nanztVZckf1f6v7NVHy3vnzP1Hj
dxps9X+sfU+r/w6179LYaer/S+e9Ut2na0wdjT1JY4ar/y9sstofalvD/Zd8
Z+RnwrM5RMcNlXyO5CGSr9OY/dW+Q/Nfo7H91PeE5u8n+W71jdU8rSQfrN+r
ed7aN5E1Gvnc2OB31T4aOyD5T9ao2tt0v9pJPlBzv1H2e8T7NFP7btS+Btra
q11D1/Ok2gN0vt7q761xk9DP6HHJ10h+nPWnOV/SuTvomIYa/7v2r5d8l8b8
oXZl7auILsUfUHuDxvfleWrblfdF8iKN7ya5cew1wdrAxq9R3++63u3qX6H2
WzrfYJ1/Bvpd8kDJ/6AfWM867k3J89V/lvo36PoboV91DfdrrrEa0zn29TRU
u5G2Kmpfl3o9tscP0Pj9dPz+Or6r5q+PvWdN4Z8V7VM01Xax2pdoO0btQRr/
vPof1rgBGt8q9toZrn0HqP235r9U8nFqv4N+0LgL8aV0fTPU/kP9fYr2Pd4u
W4c8yj0LrVv205iLsFea7wG1P9C2XO3zdcxhsf23AWrvrjE/qN1S2+WS/9KY
F9RupOs7Uu1eajfU3A/rfuwXeI2xXvvo/Ffmuv4x9Sc65wj1zdWYfthqHf+A
2rvn9qoH/yfXrVMl1+H/oD805n6uT/vfKfgdPgP9oPEXS16t9hSNX4y/wfWo
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
asWut4N7RX5gssbfm+Oh+Hbk0slnU4/2f4pbEqk=
           "]], 
          Polygon3DBox[CompressedData["
1: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
D1jsCqk=
           "]], Polygon3DBox[{{2051, 1223, 1072, 1073, 1224, 2052}}]},
         Annotation[#, "Charting`Private`Tag$5303#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LlFEUB+BjjVk6jeOulToLQxBDyXYWppWmluAyN34t0moMF2GtEwW/
FokTuBN0PQsTFSTI/gItKy1L+j+i58XF5fmd8947530vkxue6M+XRMSqtXUh
IsnP+Y9VZRFZvte8JtfItbzBet7mTfbyDgf4mH3WuDzM1xzjLF+ywClucIYf
mL8c8caMz/KhXGP+tLqXh3rVfKtuS0V8UTddjLgrf5XbecQOfmPLpYgR+7/L
9/R+8JbeqN599bH6mfxAPpE7+ZNd/MWHPGU3f7OHf7hQGjHvHR45e6bOcU5d
9A0H6kH1mrwvL3OT01znK65wgjN8yikOcdAaS+bwCVvZw2a28jobkztgNbPu
J2vunnmV6ncsJHfnTjLqee5bV+WM/ic5LU/al1ZXuYsGuSJ5H/71feX65eqP
9l7hHo2JXe5YRsc2HY2UvRmh3llXEi+S/4xeWq9O9nOx5MGiniNR4XBR8CgW
9RdKzv9n/wGxcEJ3
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzklOQmEQReEyMbRPUBESFVSWoWtgpI4Y2C0ARzYbMQZ1A8JIARtkhJII
C3Edfm9wcqvOrZf/NS8uDztLEdHCWjaino9oYBt9tJYjevIZm4WIFzfrSHIR
XRxnIl7tJ/oc8thyd6UrmAe6U1nEL5/Bte7MPtS15V/6Hn/Dj7hK+h/pW/yR
3LA35JusouRux/5uvjVP8Y0HzPnEdx+6FfnDzbDLP8oBPnXnuhIWfBZP/IF9
rNuXCbeHe/MXV8OdvexuYl6V/5SGIbg=
       "]], 
      Line3DBox[{1816, 2065, 2482, 2710, 1815, 1107, 1817, 2066, 2205, 2756, 
       628, 809, 629, 1628, 660, 630, 810, 631, 1630, 663, 662, 2067, 2711, 
       2061, 1981, 1818, 2593, 2483, 2644, 1819, 2484, 2645, 1820, 2069, 2594,
        1982, 2169, 811, 2301, 2763, 665, 666, 523, 2595, 2206, 498, 826, 667,
        2596, 2207, 760, 2364, 2769, 2363, 2456, 1983, 1821, 2597, 1984, 
       1822}], Line3DBox[{1824, 2485, 2646, 1823, 2486, 2647, 1825, 2070, 
       2208, 1606, 2302, 2071, 2246, 2535, 2598, 2210, 2228, 2229, 2072, 2303,
        2757, 2068, 2321, 2319, 2320, 2170, 2728, 2073, 1985, 1826, 2599, 
       2487, 2648, 1827, 2488, 2649, 1828, 2076, 2489, 2713, 2171, 2077, 2304,
        2764, 2323, 2324, 2172, 2325, 2536, 2600, 2212, 2230, 2231, 2173, 
       2326, 2765, 2078, 2214, 2367, 2368, 2366, 2770, 2365, 2457, 1986, 1829,
        2601, 1987, 1830}], 
      Line3DBox[{1832, 2490, 2650, 1831, 2491, 2651, 1833, 2079, 2209, 2080, 
       2745, 2260, 2261, 2247, 1289, 2211, 2081, 2248, 2334, 2262, 2712, 2074,
        2402, 2075, 2322, 1834, 2714, 2082, 2083, 1835, 2602, 2492, 2652, 
       1836, 2493, 2653, 1837, 2084, 2085, 2729, 1838, 2441, 2086, 2442, 2087,
        2767, 2440, 2335, 2336, 2249, 2537, 2742, 2213, 2088, 2443, 2263, 
       2264, 2250, 2444, 2781, 2089, 2215, 2090, 2434, 1839, 2581, 2771, 2369,
        2458, 2370, 1840, 2603, 1988, 1841}], 
      Line3DBox[{1843, 2494, 2654, 1842, 2091, 2092, 2730, 1844, 2093, 2216, 
       2655, 2538, 2265, 2266, 2251, 2539, 2743, 2217, 2094, 2252, 2337, 2267,
        1304, 2218, 2095, 1845, 2715, 2096, 2097, 1846, 2604, 2495, 2656, 
       1847, 2496, 2657, 1848, 2098, 2099, 2731, 1849, 2449, 2100, 2450, 2782,
        2540, 2431, 2338, 2339, 2305, 2541, 2758, 2282, 2101, 2445, 2340, 
       2341, 2253, 2446, 1312, 2219, 2102, 2435, 1850, 2582, 2772, 2372, 2459,
        2373, 1851, 2605, 1989, 1852}], 
      Line3DBox[{1854, 2497, 2658, 1853, 2103, 2659, 2542, 1855, 2104, 2220, 
       2660, 2269, 2268, 1856, 2270, 2271, 2746, 2221, 2255, 2254, 1857, 2272,
        2273, 2747, 2222, 2105, 1858, 1320, 2106, 1859, 2606, 2498, 2661, 
       1860, 2499, 2662, 1861, 2107, 2663, 2543, 1862, 2451, 2452, 2342, 2664,
        2344, 2343, 1863, 2306, 2307, 2759, 2283, 2346, 2371, 2345, 1864, 
       2256, 2257, 2744, 2223, 2437, 2436, 1865, 1782, 2461, 2460, 2374, 1866,
        2607, 1990, 1867}], 
      Line3DBox[{1871, 2608, 1991, 1869, 2109, 2609, 1992, 2174, 2111, 2226, 
       2568, 2740, 1993, 2405, 2404, 2776, 2579, 2352, 2406, 1994, 2408, 2407,
        2777, 2580, 2353, 1995, 2175, 2546, 2610, 1996, 1877, 2611, 1144, 
       1879, 2612, 1997, 1881, 2115, 2613, 1998, 2176, 2117, 2614, 1999, 2177,
        2548, 2615, 2354, 2409, 2000, 2410, 2327, 2766, 2569, 2285, 2377, 
       2001, 2376, 2573, 2616, 2464, 2002, 1887, 2618, 2004, 1889}], 
      Line3DBox[{1888, 2003, 2617, 1886, 2375, 2462, 2463, 2784, 2583, 1885, 
       2438, 2439, 2284, 2565, 2750, 2308, 1884, 2350, 2351, 2349, 2783, 2454,
        2453, 1883, 2466, 2471, 2467, 2671, 2403, 2116, 1882, 2547, 2670, 
       2114, 1880, 2669, 2501, 1878, 2668, 1143, 1876, 2113, 2667, 2545, 1875,
        2112, 2347, 2571, 2768, 2348, 1874, 2277, 2278, 2225, 2749, 2276, 
       2275, 1873, 2274, 2748, 2562, 2224, 2110, 1872, 2544, 2666, 2108, 1868,
        2665, 2500, 1870}], 
      Line3DBox[{1890, 2118, 2502, 2716, 2178, 2119, 2619, 2005, 2179, 2120, 
       2355, 2778, 2411, 2006, 2414, 2412, 2413, 2620, 2356, 2415, 2007, 2418,
        2416, 2417, 2621, 2357, 2008, 1891, 2584, 2622, 2480, 2009, 1892, 
       2623, 2503, 2672, 1893, 1153, 1894, 2121, 2624, 2010, 2180, 2122, 2625,
        2011, 2181, 2549, 2626, 2419, 2420, 2472, 2012, 2421, 2328, 2329, 
       2627, 2286, 2379, 2013, 2378, 2574, 2628, 2465, 2014, 1895, 2629, 2015,
        1896}], 
      Line3DBox[{1897, 2123, 2504, 2717, 2182, 2124, 2505, 2718, 2183, 2125, 
       2358, 2779, 2422, 2432, 2423, 2184, 2424, 2550, 2630, 2359, 2425, 2426,
        2185, 2428, 2447, 2551, 2631, 2427, 2478, 2479, 2477, 2786, 2476, 
       2016, 1898, 2632, 2506, 2673, 1899, 2507, 2674, 1900, 1162, 1901, 2126,
        2633, 2017, 2186, 2552, 2634, 2018, 2187, 2553, 2635, 2287, 2382, 
       2383, 2381, 2773, 2380, 2386, 2019, 1902, 2636, 2020, 1903}], 
      Line3DBox[{1904, 2027, 2128, 2508, 2701, 2127, 2028, 2131, 2509, 2702, 
       2188, 2130, 2190, 2570, 2780, 2433, 2330, 2189, 2430, 2448, 2554, 2785,
        2470, 2468, 2469, 2192, 2732, 2135, 2021, 1905, 2637, 2022, 1906, 
       2638, 2510, 2675, 1907, 2511, 2676, 1908, 2512, 2677, 1909, 2136, 1172,
        2193, 2555, 2639, 2023, 2194, 2733, 2137, 2024, 2295, 2754, 2029, 
       2289, 2384, 2385, 2288, 2751, 2030, 2296, 2025, 1910}], 
      Line3DBox[{1912, 2031, 2129, 2032, 2719, 1911, 2033, 2132, 2034, 2720, 
       1913, 2133, 2191, 2134, 2734, 1914, 2721, 2140, 2429, 2141, 1915, 2722,
        2143, 2144, 1916, 2640, 2026, 1917, 2641, 2513, 2678, 1918, 2514, 
       2679, 1919, 2515, 2680, 1920, 2146, 2147, 2736, 1921, 1388, 2148, 1922,
        2723, 2149, 2150, 1923, 2575, 2703, 2035, 2290, 2036, 1924, 2563, 
       2704, 2037, 2297, 2038, 1925}], 
      Line3DBox[{1927, 2039, 2138, 2040, 2724, 1926, 2041, 2139, 2042, 2725, 
       1928, 2043, 2142, 2681, 2528, 1929, 2556, 2735, 2195, 2145, 1930, 1398,
        2154, 1931, 2774, 2388, 2389, 1932, 2642, 2516, 2682, 1933, 2517, 
       2683, 1934, 2518, 2684, 1935, 2519, 2685, 1936, 2520, 2686, 1937, 1704,
        2387, 1938, 2576, 2705, 2044, 2291, 2045, 1939, 2706, 2046, 2151, 
       2047, 1940}], 
      Line3DBox[{1954, 2054, 2156, 2299, 2298, 2755, 1953, 2053, 2292, 2393, 
       1717, 1952, 2392, 2693, 2577, 1951, 2692, 2524, 1950, 2691, 2523, 1949,
        2690, 2522, 1948, 2689, 2521, 1947, 2707, 2052, 2051, 2708, 1946, 
       2050, 2390, 2391, 1712, 1945, 2162, 2311, 2775, 2396, 2395, 1944, 2155,
        2197, 2737, 2558, 1943, 2557, 2688, 2196, 2310, 2309, 1942, 2529, 
       2687, 2153, 2049, 1941, 2726, 2048, 2152, 2233, 2232, 2158}], 
      Line3DBox[{1968, 2240, 2241, 2164, 2239, 1524, 1967, 2059, 2294, 2753, 
       2533, 1966, 2700, 2527, 1965, 2699, 2526, 1964, 2698, 2525, 1963, 2532,
        2697, 2058, 1962, 2531, 2696, 2057, 1961, 2727, 2056, 2695, 2530, 
       1960, 2055, 2293, 2300, 2752, 2564, 1959, 2163, 2200, 2578, 2739, 2397,
        1958, 2161, 2199, 2738, 2560, 1957, 2559, 2694, 2198, 2160, 1956, 
       2280, 2360, 2281, 2159, 2238, 2258, 2237, 1955, 2561, 2741, 2279, 2236,
        2157, 2235, 2234, 2259}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{952, 1245, 1719, 1246, 2587, 1429, 1247, 1265, 2711, 1248, 
       969, 1278, 1440, 2728, 1279, 979, 1292, 2714, 1448, 1293, 989, 1306, 
       2715, 1455, 1307, 999, 1320, 1462, 1321, 1009, 2667, 1334, 1470, 1335, 
       2610, 1018, 1804, 1805, 2622, 1806, 1807, 1808, 1800, 2786, 1799, 1037,
        1167, 2637, 1049, 1175, 2640, 1061, 1709, 2774, 1710, 1711, 1712, 
       1713, 1582, 1222, 1584, 2752, 1597, 1598, 1587, 1228, 1092}], 
      Line3DBox[{953, 1102, 2588, 955, 1108, 2593, 970, 1115, 2599, 980, 1122,
        2602, 990, 1129, 2604, 1000, 1136, 2606, 1010, 1143, 2611, 1019, 1151,
        2623, 1028, 1159, 2632, 1038, 1168, 2638, 1050, 1176, 2641, 1062, 
       1184, 2642, 1072, 1223, 2708, 1583, 1225, 1081, 2695, 1229, 1417, 1231,
        1589}], 
      Line3DBox[{957, 1104, 2589, 958, 2645, 1110, 972, 2649, 1117, 982, 2653,
        1124, 992, 2657, 1131, 1002, 2662, 1138, 1012, 2669, 1145, 2612, 1021,
        1153, 1030, 2674, 1161, 1040, 2676, 1170, 1052, 2679, 1178, 1064, 
       2683, 1186, 1074, 2689, 1193, 1083, 2696, 1232, 1419, 1200, 1094}], 
      Line3DBox[{959, 1249, 1430, 1105, 2590, 960, 1268, 1436, 1111, 2594, 
       973, 1282, 1442, 2713, 1118, 983, 1294, 2729, 1449, 1125, 993, 1308, 
       2731, 1456, 1132, 1003, 2663, 1322, 1463, 1139, 1013, 2670, 1336, 1471,
        1146, 2613, 1022, 1349, 1480, 1154, 2624, 1031, 1162, 1041, 2677, 
       1171, 1053, 2680, 1179, 1065, 2684, 1187, 1075, 2690, 1194, 1084, 2697,
        1233, 1201, 1095}], Line3DBox[CompressedData["
1:eJwVz6FOgnEYRvGXKahEvAG+DbU4aSadwSQqbk4tJggEAwQ3uAIbN0AyODcN
FDVoMRB1uFEsSnIqm5tZivNnODvvc/5fgKTa2K2nImIPvYmIXCbiYzKik474
5EP7IRvxZv/iRzvlMRf0ivd3O8UZPkdfn+KaNuI053iov7hn3Uf8xdOc51dO
uMHfPMO3vl9y36GIY62Ae32LV7QeVtG0n/Q53saG9ogS1vWWNo8y9rUBDrDp
bUHbQcV+Rlerct5/rPOZPfz/bVjULnx7iWX3ibcr9zXW7LZ9wyX8AfbmLBg=

       "]], Line3DBox[CompressedData["
1:eJwV0LsuA1Acx/G/EBJPoaOIxaAeoJutj+AB9FHcFUWJSxM6qi4WtXXTsttQ
irqVun46fPI9+Z0zncRUJj3dExFpznojrvsjbphjlqHBiFttcMcC57Z5vafJ
A0vU7Iv6yBMt6rasLvPMC69c2Fd1hTfeaZNjjQ+uvPnUDhusM2H70m9+yLNJ
yv6rf8RAxLZe2rZ0h132GKdiL/dFDDvvU2DGltQT+4geUuz+g/1AT+2jWuKY
I6q2se6dNzXnOpP8AzrePPI=
       "]], 
      Line3DBox[{964, 1256, 2709, 1257, 965, 1112, 2597, 975, 1119, 2601, 985,
        1126, 2603, 995, 1133, 2605, 1005, 1140, 2607, 1014, 1148, 2617, 2618,
        1024, 1156, 2629, 1033, 1164, 2636, 1044, 1208, 1576, 2751, 1209, 
       1592, 1593, 1594, 2704, 1578, 1213, 1392, 1218, 2706, 1580, 1219, 1402,
        1595, 2755, 1596, 1585, 1227, 1414, 1524, 1525, 1420, 1527, 1526, 
       1421}], Line3DBox[{1088, 1197, 1521, 1415, 1523, 1522, 2741, 1079, 
       1190, 1520, 1403, 2726, 1220, 1069, 1181, 1393, 2724, 1214, 1057, 1173,
        1379, 2719, 1210, 1045, 1165, 2701, 1367, 1205, 1034, 1157, 2717, 
       1484, 1355, 1025, 1149, 2716, 1475, 1342, 1015, 2608, 1141, 2665, 1006,
        1134, 2658, 996, 1127, 2654, 986, 1120, 2650, 976, 1113, 2646, 966, 
       1106, 2710, 1258, 949, 1100, 1798, 1797, 1802, 1801, 1422}], 
      Line3DBox[{1089, 926, 1416, 587, 2360, 754, 586, 1404, 1221, 2687, 1070,
        1182, 1394, 2725, 1215, 1058, 1174, 1380, 2720, 1211, 1046, 1166, 
       2702, 1490, 1206, 1035, 1158, 2718, 1485, 1356, 1026, 2619, 1150, 1476,
        1343, 1016, 2609, 1142, 1466, 1328, 2666, 1007, 1135, 1458, 1314, 
       2659, 997, 1128, 1451, 2730, 1300, 987, 1121, 2651, 977, 1114, 2647, 
       967, 1107, 950, 2585, 1101, 1796, 1803}], Line3DBox[CompressedData["
1:eJwVz78rhAEcx/GvDumyXiSl6/4A2Yw65aZbuEG5UlIU+RFXfiQmg4X/wMai
WyiJwUBhoHRFzuoWBuudxesZ3n0+3/fneep5sjPL40ttEVFGvj2iit2OiP10
xLB+ih13BXvcoPsYa+5bucnl5HZnxBbe+Co3JXuSndvAJ/cuJ/mGPES3/UXW
bc/Juyjav+QBUvYn+WF/lPe2EWT1Zirigq/o67jmhzCg3/C/9lV9Bed8DrN8
v7thW5QLOOMzmLb1Jd9pm5dzOOGv+C7Z6361FeQY/nxbCxn9gR+Vd57Nyx/+
G03vXdpK3ASO3DU+nfy//g9fcDRa
       "]], Line3DBox[CompressedData["
1:eJwN0L8rxHEcx/G3w12OTZ1SVxT+AFYlPzKeUpcfUVIUAyUDJREDAyWbzWSS
SCmxMigpPzo3+LEoRWeWwWN49Px+Xm+3aByf7Z8pi4gxuisiVisjVjhJR7zp
IssscGx71WnmmeLIVtSlZMSkFti3Tei97YFEKuLdNmx78R7Sbd3ijl63Ptst
OTZtG9zQ7tZlu6KTddsaBfu1ttkuaOXS1mAr+Z7TZj2liXO3rO3Ld0rr9JAM
Z25J26fvck3rAVUkvD/0lxZ/9+N/9EeJUbcMe249OkLR/s0zg9617Lrntd7v
B/TJbcf2qB3e1dTwD0bBNFk=
       "]], 
      Line3DBox[{1093, 1199, 1698, 1418, 2727, 1230, 1082, 1192, 2707, 1224, 
       1073, 1185, 2682, 1063, 1177, 2678, 1051, 1169, 2675, 1039, 1160, 2673,
        1029, 1152, 2672, 1020, 1144, 2668, 1011, 1137, 2661, 1001, 1130, 
       2656, 991, 1123, 2652, 981, 1116, 2648, 971, 1109, 2644, 956, 1103, 
       2643, 954}], Line3DBox[CompressedData["
1:eJwNzj1LQnEYhvFHjpa0CO4FrblK0BDUIrmerYaKchCE/ABiDW61Bi411dYS
fYE0KJAil4peoELX1qYG+w0X1/3c9/nDmd9ppnuZiEixlo24wuFMxDJfoCOX
+RxteYFP8JGLuHQ3eM59jCd5E0W5ajvioTtFXl7VdXjgrmCSRCzqWrqeewlN
d2Y6IsHdVMQtXlCyfXPdfsA/3t5wH8+YtX/avuR9jOw9vsYbhraCb97lNl7t
NX7Q7/KZLUFVfrRt871ti0/1v/7xj/u2Dd3Ats5d3ci2Ihcwlv8BCwgwSw==

       "]], Line3DBox[CompressedData["
1:eJwVzzFLQmEUBuATXBucjPakXIJslKAgqKXUIdB2I2gQyv5BQwgO/YGmplrE
JYJoDaIgCFzaAsmU/kE2FPjc4eE933u4fPdbPDyttWYiokY5ibjjIhuxKXu0
zSV5w5l5RZ5kIj44Ju+8pz8wv9NgXlfR7Zv71HmbjdjW7Zpf2WGk+6LDmt2G
7pF1hrqB7lOe88Sq/oEiL3ZVXYEWed0tCzzbVXRLNJnTdclxb5fovs1Hctk5
Y74mIXQj+U/BbuItV+Yf+Zf+F7/pu+3Gusv0HXLLd7n0LqbPsisl
       "]], 
      Line3DBox[CompressedData["
1:eJwV0L0vg3EUhuHTBAOpSaIikUga/oEaTQhj28FUIl1YsLH6qoVJDBITs1hE
QqsWER0MPgYaJbFKGJiFq8Od+zzPOb/hffuLi/mFRETMoLMtIokzPLVE7LRG
PHNFnkStPWJX12W+wIvdFxqYlsewb9/NVXzrf3Ht3Q8XdRM4cNPDlwjznn0H
J/CHD/Tapfi4eYt5+ZP7uOJ+wHyKQVzpVnCnX+WMrooh1OS6vsSbGNHdYBTD
+lvdFraR1b1yjsftHsz3KMiPONJNccq3zPKhXOc5pHVL/IZlZL07b/5HN2ty
zrzO7zjRleUNc55LnOF/Q0Q2rw==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
gd5Uwq7Qy7IroIHWuLjHT4ZGhuf8ZTTG0lC/LMJsoeB9UutDpdbOicKYpqhO
jYdAN1WxeGY2E747dmbEiNzFu93Pmh8zBfPo3rnC8hQLGyiaWoF7GMjsNvOm
3aLhpeGE6utrFORLmT5sTuBBjTqj3XWyHY6RYyUa9q24WvKCzKfx0Xlry/fh
+GC4Jp703C3oT5fSyULGZUGulUx7/SKwkjhoee5Z8Y6Oqofvtmx7XIT9Ollf
9UqbCLGqcynbN4wzqtFOTX50YnXnYNrDGZVkz5jwBclADqbfZYg01FWRI552
2ck+HJgObRkWukwH/ad2W+pvNuR2itufLKDgZ+Cyrj9DnfDqWs3SOj2El7tK
9P9TyEDUgpOPp/V24H3Ck4KTnhz4lP7ZLmaTC7FV0Y4VRxgYNFbf+VusAgsK
5vEo30vArFt+67AYH5SlZ6kpcVQypHhfZ8f2Utz7b+M5c/UBKM3+/VlWkEOG
D9iWheUzkVdx56PHVC+Kvlm5Lith4UXV7KGiyzQc6xuL4lZ2wrNJzP7T0kFc
rUi4kHuzARcbTHfdKuiE1j6DvX0LBnDKZvYBg5nNmLH+6ufbLf3IS/hi5OXU
S2bfUDfTDe1Go4Tk3V9tHLQ2lVyxCqLgQc4AY9tiNn4pfy75eKEXJqWO2kcP
MfF7B+V6/gwGNpl6ee4V6oL7w7wAFdUBOA7Jyhp7diJ+g/7ce75dmMXi3ecL
8lKg4Qa9N9K9uGF2dUJzuB8/f5+X1M7oIBKzAppjaDRsjttXnJPMAldWXV+B
zYZf1RGRX7so8L+dGSDsKcjLdpFKk2cpGCncvI65nQHc95478YaG3T/D8ndQ
Wonk7DUkV7AHep8TFgxNY0KO7yLZ4CnIhyVzT+s10VC2Tyaxr6MHuf1tTDLR
hZF1UrL7jrCQXXen4a8/DW8HPzVvWB2D+YnV7NzFHNy+8/PXg/+Y+Ky7Uct4
Lh3ByxKsGv0YWG70lcZn9eFHu89YcFE/ah36WAzjKsztal+a+nsApdfeRx/f
3o6a7A1dhx0+Ed2AR0uSiGDf9/yUTFxWhXtx3pULqtqIrEP8DIMNQ/Dar3d4
+kAFFsmkG9l1V2LW9Q8/52UOY75S/t5/PCN5qcUlaLAcsz0O7/vHM9eu2YTN
6mzC4fNnthnvGMCDlxMXs936QZle/EQ9rh5HXhzXv8IcQMumqouPu/pwxihr
c99uNqIumlgbPqehxS3SYJFLO2Z5vVPQ3MPEIY/rR1boCviWZjrT3qpTMBfq
kx/aaGBxKHvlqEx4srqbGC+6sf6x02oI8n2nXnz6l8NsXHw8ricl0I0DcxQV
F30ZxO8yL2nxrkbg8a8ilZeteP93HivAkYO8yHGTs4l90D+3KVTpYzcGH9Z2
nxHohNuVsztS77diM8tSM5zRhXcpEo99vzGgZlI3syGCiqQ5SX1HnlHw5pKY
lOlrNsyfqZ2bu6sL1sJidI9VVPCucgy/G/Uj6kms1Y5iOj6vfzLjWyodcw+a
B/0wbCfzdYyNj/U+1woV1o3aXDuE68EewQu1m8iOLe+C0qVKie7Keb9+7R6G
8ZWCqxbfusnfINup9B214Mk+V7bp4MEu88bNxXrN5Ppey7ikwxnE+9x29ifL
YXhYbVB9vJuKlBJWV+zDfqyMTPR362KCP3Oh34+qBqzemvNERpDfz2xSZs0L
Y+FUHu8kV4ELMXtLy4Dz0Vo2XmEjz2vpkPylFxuSKTh3bPu3BrkSJJ/ueTsi
LPAfR/cX2gYUEmUlrUgD2W7CXfm2Zn3KINLXdmxMEH9Y8OYPN3uNDJOU8BrO
TZvHgVlK7c3V4mEFq/o4NZrSleTa3Okr5S34uP5nrO9UKwOce443mwPpOMxp
z71X14NdNJ+Fd45RoUrMf34/zcR/tw7y885QIC36zMvvzxAcP79QTVEvxu6H
F0LKT7fgZ6XpD/n6QSxh6HYeodYi/pfi/FLvdlgvopiaJzFRaP3zxpPwdgGv
0dixZxn4k9A5VXWjmnzmK2cvrW4gopKl+8tkhzH0bUT9H0739Nk7daQroa3Q
2LBMgDMnVbh9isVH/kaj2VHuwXA5vXBxfFAaRuYnnQ8R6EVucOp6gV6QuLMp
Nf/0QpzeL3IzowsPi8fCD16ik7xfg8F/Y5kw/e+e9D+dGl//3CjIm4piWdtr
/3QqQsz7TmkFl9hb80Rfzu+E/dbHUfKXe0CNUOwOGGKRNXOfG0TH9mH5XUWV
YA0KPrOdV//TzZuaDXrGooL8brd1/T/dXLdo/oZ21w5UGP00PPiNiRi3cJ2e
RjoGDsiVRb4cQvRapZUndt0luk2D554bdiA6f933A3UcMI8czjzvGkvoP5k3
atcx4HtvdvlasTI87jDWeMVOJocTYySeXOVjSLT6dkcHjSwSzszoqg8ms/Mt
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{357.85121363651746`, 265.01567629199246`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.13515851642867893`, 3.999998107143255}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.7385871869388954`, -1.6727634377701723`, 1.0733138873569963`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7472351732986526`*^9, {3.747235547414041*^9, 3.747235595045229*^9}, 
   3.747235638366301*^9, {3.7472357187412786`*^9, 3.747235758316436*^9}, 
   3.7472441327457657`*^9, 
   3.747244167671472*^9},ExpressionUUID->"affca73a-f922-4759-8478-\
834ae051475d"]
}, Open  ]],

Cell["Values on upper square side.", "Text",
 CellChangeTimes->{{3.747244241853691*^9, 
  3.747244253137257*^9}},ExpressionUUID->"93373fee-08d0-4ce1-b228-\
16f1ab6ad186"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u9", "=."}], ";", 
  RowBox[{"h8", "=."}], ";", " ", 
  RowBox[{"h7", "=."}], ";", "  ", 
  RowBox[{"u6", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f9x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f6x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f9x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f6x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f7x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f7x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f8x8", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f8x7", "=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"\[Eta]", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H8", "=", " ", 
   RowBox[{
    RowBox[{"u9", " ", "f9x8"}], "+", 
    RowBox[{"u6", " ", "f6x8"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"H7", "=", 
   RowBox[{
    RowBox[{"u9", " ", "f9x7"}], " ", "+", " ", 
    RowBox[{"u6", " ", "f6x7"}]}]}], ";"}], "\n", 
 RowBox[{"u8", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f7x8", " ", 
      RowBox[{"(", 
       RowBox[{"h7", "-", "H7"}], ")"}]}], "-", 
     RowBox[{"f7x7", " ", 
      RowBox[{"(", 
       RowBox[{"h8", "-", "H8"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f8x7", " ", "f7x8"}], "-", 
     RowBox[{"f7x7", " ", "f8x8"}]}]], "]"}]}], "\n", 
 RowBox[{"u7", "=", 
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"f8x7", " ", 
      RowBox[{"(", 
       RowBox[{"h8", "-", "H8"}], ")"}]}], "-", 
     RowBox[{"f8x8", 
      RowBox[{"(", 
       RowBox[{"h7", "-", "H7"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"f8x7", " ", "f7x8"}], "-", 
     RowBox[{"f7x7", " ", "f8x8"}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.747244285133322*^9, 3.7472442932477417`*^9}, {
  3.747244357513423*^9, 3.747244395981002*^9}, {3.7472444444691753`*^9, 
  3.7472444943399754`*^9}, {3.747244536294989*^9, 3.7472446109090633`*^9}, {
  3.747244703814904*^9, 3.747244886472413*^9}, {3.747245508972411*^9, 
  3.747245526225157*^9}},ExpressionUUID->"a3b6ac47-be08-4b13-9f73-\
32b329bf82fe"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "9"}], " ", "h7"}], "+", 
    RowBox[{"18", " ", "h8"}], "+", 
    RowBox[{"2", " ", "u6"}], "-", 
    RowBox[{"11", " ", "u9"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.747244888826683*^9, 
  3.7472455298511343`*^9},ExpressionUUID->"8e1190be-ddbc-4351-a4cb-\
5bb9097d404a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"18", " ", "h7"}], "-", 
    RowBox[{"9", " ", "h8"}], "-", 
    RowBox[{"11", " ", "u6"}], "+", 
    RowBox[{"2", " ", "u9"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.747244888826683*^9, 
  3.7472455298531446`*^9},ExpressionUUID->"6585608b-f888-40b6-9156-\
aa2924f040e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"func3", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"u9", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "+", 
    RowBox[{"u8", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], "+", " ", 
    RowBox[{"u7", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], "+", 
    RowBox[{"u6", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"func3", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u9", "\[Rule]", "4"}], ",", 
      RowBox[{"h8", "\[Rule]", "1"}], ",", 
      RowBox[{"h7", "\[Rule]", "3"}], ",", 
      RowBox[{"u6", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747245255461561*^9, 3.747245382650403*^9}, {
  3.7472455414840393`*^9, 3.747245543230255*^9}, {3.747245606610799*^9, 
  3.747245629338726*^9}},ExpressionUUID->"42fc626f-072d-430f-b543-\
a7a9ecb5dd3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u6", "+", "u9", "+", 
       RowBox[{"u6", " ", "\[Xi]"}], "-", 
       RowBox[{"u9", " ", "\[Xi]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"4", " ", "\[Eta]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Eta]", "2"]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Xi]", "2"]}]}], ")"}]}], "-", 
    RowBox[{"9", " ", "h8", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Xi]"}], "-", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}], "+", 
    RowBox[{"9", " ", "h7", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"3", " ", "\[Xi]"}], "+", 
       SuperscriptBox["\[Xi]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "3"]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7472453468691463`*^9, 3.7472453836101294`*^9}, 
   3.7472455340342493`*^9, 
   3.747245632077084*^9},ExpressionUUID->"2fdaf8f1-61d7-4eab-ac71-\
e47d741396e5"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
NYjPZbyamGCkZYk6wycj4SRaYxWMOjew64UCap0iwuZ/tH668rkzP9D+SWz+
M5n7Ku8dc9B+yF/9esDC90vz0c57/9RLHqPcfjB5460stBPf36pYN1NyVgT+
/z/xyQJmhybh1/puw/zdH3OZemq98IDN3+jpg3uDoorQzi9s/mdtv6b1l/xE
O1vY/K9kZxq8cOT8pQn/lCuNObJFmO/yh1K0E+L50z+JyxbWp2E/WvJPvDGH
Mcqd9njeqRRsD42sv32O8ucnsfnLKpqbvT9dgXZqsvmPuXxaeKl8Ddp58Z84
yg+G35dnlK1dh3aq/5P+CxOiuO37cVJPrbtjmCHt1sbP+orQzsh/4q8pTI50
p+6Mwly0s4n1k7soP3wDm7/uHt+Tr73q0c63bP4auukKU842oZ0D/2mfX5kh
Xo8mq39sRjuL/snfgbn8JEkmZV4r5Xe5MkdFT0rNduP8Sfh8L5OzQDv8J+U/
O4b2Uf6zkNuf/KedbK92H8n5zx1s/iJhpTc+nm9DO0//0368mItqg0znFLWj
nzCLfe4JD+17/71ekGWfM/ji1FmFGp3UejmE8NlsKtTWaUT70/+Ul7yfOFw+
IL0K7a/5F38YPr14LVYN2e1o/142/zXTn0xru9qJ9rv+o38A+RRoHfJxeDfa
H8U+d8fFTM//9v8j/tQ7ERp8uOfjbM7vhf0IJw+rIONB3Dyo9qfeybOe29py
JZw/X/svfmw4m/9uPq8PO604PxY+p5hGRGy+1Yt2rmHz58tfE/7f/vmfuH0O
8fhuFHNfjfNLRdl4v5LfZP2vO36hneP/9CMyxjlriUAC528b/IufuZDNX9+h
87Vdcy/aJ8LmP2efol/EWz6cl8ex+Zsc0BBW/S//ObNtxarcgGLSprShRmQc
5zfC/sbK9QuUfHs60U6HP+MSueXZJJe3sQ3trPsXPzCDzf/EUb2EcVc5PzCc
zf9iirPsHWPOD7Rn84//dO/9f/u393YX7pJdV04MOi8ZPTHi/AfYrxAbnuhh
4t+NdrLzCBHeHZ2qvZXzV1//i1/nwObft6Ms3TSV8+susPmvfNVqOaVPEO0U
YvO/qWxw7r/91Y2x5meP5VYTH++fy7WEOL8O9ser3/zi11/Vw41jf+ZTkt91
7cWY4A5qffH//bQNbP711pbiAemcn7aIzT+6x85x6AZhtDOCzX+h7Pqu//Y/
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
7/X+r4rXqrE1aCfwiNTXsf0B5VQ8LYOpUbpoNGELt16D9xfGUetZ4Kr3cguG
mXyjzq0lMHunfItNffODOj+cwCwr2h7nodBMnR/+/+tQ4Ip6gWLKV5rI3+fQ
EhgpMZ2vGedqqXbixxyg1o/A9/363O1cmUWdK/NjJpYYmlcsKqLOAfoxzzSn
JLtsb6fO93Lrvr/PB/oxN4rNxsXMoM95+pHTOx5JWvKX0XaS89R6DbjgBcv3
uaHFtJ3k0dprj2dHl9F2kuvn5LPjb3fRduL6i7KTtFzWXDx+Qit1/jCBTJTQ
3bNctIaud2JIrYOAl9p5t8mll9P1TkQchf28ptZQ5wwTyI7iWIErt3vo+iVa
rybPWurcQ9cvMc6fXNcm/os6R5dBrDXyr0yb20j3LxJHrSOAHzlp2um5tYbu
X+RVulZBJV8j9b5DBtkfEbjiuiIfj+pH5MzVpgajiZzfDnyiaeuxfdWdhIpD
kn0mqqunrePmO7wPjPLDgQdrdPwsLK2nxz1Szd4bT8UnydvpElk2fU1oP/Cv
KQf7QvgEcB6hf6+HGsdIg1fC2qO5/DxqHCNTvyfWHPLvQTvBf2uZId3geovW
v5zMYO+Np+LhROTDvcjDezh/BvgUkmhZ5cz5k8C9rYSPaor+b78ReFuhomDt
FUEetV9DRPI+is382kjPa2QNe288tS9DPHevefi1nbMTeKCMspNrH+d3ARc3
EC4++eB/+1d4f2HAZ5t5A4R5f8cN6ojam+seN+s4e4BfG2W1Ke/3egGeC9w8
cN5GwfJ/90P+XtfXEanowcutf/uHf7erKFLG3gP/N08lV9n73v8el1JJsb+m
t+2cKur9l1Qyd9AiHf3jfdS4kUsi2HvdqfdZyKujWmTRqjr6PRHSPzmmraGP
j0fN76Ro5zoP+TH0exbc/e3U+zhEsNu/WdRPgEf5IcTt54jLPl8b6feV8J52
6n0lYjW7z3qFuhCP8n/IzAMPVKqvcvnQ965T73+RXZpLRpZFcH4yuy9MpoRJ
u+sFcusUOKfxokJAda09V++T2PRub9Q/yyaIYDtk98HJPt9VfNNkRHnUOQpm
g/Xmld01F/GcQQ67L/xpteDw7V8eMZR/yLhurHeZ/sMS/QFIv0Tn3RwF7+eE
8jMZx/4Fo8NOfEDO+slM9PIFzlYGbwh13oOJqjvpInUqGjm7fmEChrd1iI6J
wvYA551e7D4q/Emca1fseT9izbZP4PvZ9gO/IwD5LGLPI9lN/Kg9LYkP2/9B
Nn0k1T7vs+d8XnxOWXj+Yd3/bG9wjuhoyETBWde49sae5ySG93dOb5nBrV/g
PM/zOyPCrvj873YI6aOfXTu/YArXDtnzruTrhawV+8O4/OEczjdie0H41r/n
/7/aLeRzTu/a+Gsuwv+aHvSEfcZfrH8O7bmAPS/X8epY3t3rJdy5VfZ8muEI
zSipd1w9NrPjUjk7LkF69rwoWVw5cHvBRm7eZM95kt77NeJCL7lxCbhGqam9
Q3sf5gPnxM4JLx49+yK3rwH1vv/TxTezV/BjP4XzWgP9xlc6TODiBg3UvPy/
2gm0B6WMXYMGNAtg/hDHeFA38kBVApc/e84Zf4cF8oF6t9vZmDHVhot7wHo8
y0t0W6cWlw97rht/JwV0Y891kxuzq83UNzfiOAP9cr9Lfs4UU1EcZ9hxgLgu
f97AN0IMOZzXeqyvM0Z4OzfvQP7KRd+PJnZy583gPMYw8+RLSVFvcFyC/f0h
eXq6Yjf34XvKwFdKBOw5Z/ORoeI5TEOoIP/kEu7chRh1HoaKCzEvFr94OU6J
43AeyWVP4+yxMyLwXAqc/+Hjizvhs1xamTqfz2xbXTE5x/SwCvhLsC52Lp8l
MPh1JLXOKme2KQVG81mk0u/LMLUilolC/Fl47gjPz1/2+Jwm/RTthOfuSb2l
bn/yajjlPzBL1uk4SMZ4MVT9MrPeezYeTPZn/vb/S5gn8stcnQryKH87l9F5
ov2eV/6Tnt8Zr/oVn6ftbqDWEamM5azLxY0OtD8QxbxJffrz+LYW+j0yRib6
5XqT/Q2YHt6nW2l5ZNxyyV+YHjjjU+rZ6NpM50+y5y3bJBJDr3e4e4+p91Lx
HmPqnA/52Cdq/fMBN//Cec6gQ9PvSYRx/eg11R//9nM4fxLygf4ys8PN6Yw9
FweD/iKj90TCSJJeFzSQkWz8CsdDuBeIva8Y6hfOMR40DGw2vsWNh3iPvWRT
yyQBblyC/CGOhPtx1L3E1P4jo8cnvmfhD24fnB3PmfXjV7r3CHLvQfexfPuI
Rbleru30/i/59H5iao17GXI4750hKnKweVEFlreard+f7PgP+U9g0z/7OGKn
+K4uel+eVGn7Fzx/yL1PCuexBXedul8gWIf5w/lqK8q/BX/j8+QJl9Wsufea
66h2RZ27IC7Tr/n+Jz4PnH1Pgby+LKc3o5ubl8EPMZ6kemjiRy5uY/Av7ZM9
30ImfTU5q3KQaz9wLtqjdsaCxkSu/cA5Z/h9MXgu+CdLB9Vuy//KxUvhHHU/
e88wcPqeYRjnPVh7OoLb1qfYcOs19vwkOfnuXMysLkH0B+h7gIHT9wBDPvps
f6x8oH1r+yrufS72PCdJuWlXavpaGPOn7+kFDvd7pLD39EL7gf6if/vDhqOt
IjxKT2atj9RsF33uvCWMh+PY+28pP5OpNvjDqXpn+IjGgaenX9PrKWYle58t
1Q6ZdSyn2i0j5NzmEzg1nl5/MZqCO/lsB3yh2y3z7sGt6l7ZGOq5Ucwd9r5Z
qn8xdiyn+iOTc1ZngaJ3FvXcKCZuVsFlv6A05Gx/ZGTjIwas+5lOjcPcPbFU
/2W+HLpnoJDPjaswzs9k7339mz9Xms1yeC6k9z9j4C0/rwA5O/4Ql9l2H2fs
5fYFIT3c10qNV0RswKnS2w9/0eUlWnvOHEvZXMr51ay/GnGkwW1gSSldXrw3
FXgjxaE9w3sfzm4L7i9Q7EV7IH+NJCHhGRu6MZ8GavyBfOC9jNZrV/P6X/JR
/jk3nkB68HsXJrpXyjlxHN4XGFymVLf9CBffgPP5rSMkq4wGc+tN2C+YO1ux
Uc9cDNebeO/jpkd5F2VdGOo+DSIfHbnz5AIuf1iPvJKfVxWfJ8yjzu3/U8/T
f/tdwOG8dCt7Thj8BDiX7sPeSwkc3vt7y3Lwu+zYc4/rzZdU7DjN+but7Hm8
2NF1o787/SDUe6CMk9/OzctuXAmH/OE8bTt7/yRweF+vieXUeyuM+z6fiCua
76j3gwqZRyIXtM0ruXPv7L4z08TePwkc3rODeymp9Q4jb7J71wbrekKdK2Au
svdSAt9A3VdJtUNm5Ea3T0Nqmun3iZiCQbO9+S1LKD82gXlw4dsy7cHF9LkR
5ih7LyXwdyw3Yvnffp0fcyP+zLMjpI0+58PwjfpzXyXwPpb3s/dYUvmQTJ35
0t87O+j9hf93Toa+x5LaT/l/5z3oeyypc61k51rTY4fFuPgwxCff6r1xHL2n
n36vgax82LL950ouH4gTHtJeqxPayL2XxL5vSxY8H/7yRZIw7+/zEnUk/uGw
IaYjuX4Kfp2Lokhd8GIxzJ99T4Tkz0q+eno/d84B92ftwtzWj+X8EPY8D+PZ
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
aYelet+sX7To+STnblKdYuw7ObJ6wTwnEvWCcV3w0Qb2dh3vSOfR4JM9E9y1
FtRyPOCoI4z7Bm5a1Pn7DU2e85IrPnbwtMqv4jix7/Q07uyR4JHPcYJ3OzZo
rm8ex0N+zubqyka3CzhOxiHqNsvdmMG6xuSlpTouc5JY91yqv9HgcFHTPqr0
A1Mn8p8dIQ+v1XA+Y31AXgbOX8Cz3tyw63SmKeq5S3nDq2ucUjy/8z3Fc9fs
axGd5fWZHM9xYVb347f7ZvO64DpDshep/pDa436GRbw2Prk8n+3BSzY3Gdh5
uaRjAl7++khKnkU2427BW08/5/dc6yf7x31w+WuH1latol/2/W5i38d1GS9v
NGB2X0tJj1VuD2A8aD+yi1tuVZdv5PJ9H+NE++zMyodbmqr8//ZT7l9OrX03
rNYrZf/gjs5u7dLPFTLuk/noXhdmtKvUYP/UEzqxpf/1KjX2j+du3MItzeSY
1D/4qSzDlna1Uv+MD5z2NWrfci32D64/f/rbn1N4Xc6fPy1Da2d3lvoHf+Tk
Pm+jVyHjWcGnGl4d33SyNuYh+eii0GlBodq8LviGmDZVHY9oKuHvwv7SIX1P
gXMzb+Hn+cj5s8O3972C1lmKh/Vw1LPB86pp4rS+qn0e8isknqta7pTD8wNe
94jIl4ffCfyp/hjvCXr+jNfEdb2zUyc06lVLnXr0/+PAcrP4r9+YvwF+de7l
6+r5XK843zrG7hkcsL6Q/m2e5wZm553NyYf/+RcuP+dtLM55RT4b59uivK0J
G7UL6e8F1ws+F+gSXkQ/Lbj1x76TH2/XUEKfF/MkzO/gh9nOhagX8gvHdx/t
n7Ds9dueFDGfATxYcOj3gScOGTOrz0Et5eN6OL4Hea5q/If5aH0t5X0ZbyI4
9IIx39wf6jpk1RUpnIVdCp4SWNm4oEUR8k84Pz1sdfvlvNYWdqAU/5ujprZc
GaWtRH4d438Nh6zfOVJbiXw88Oj7B9K03bWVyMPHvj/3Wcyw/Cu+D+TzQU/M
h/q4fT3zAfsL+NE6gym9nqopcS6A5/t5ySTnnc2L8dzJc3cfNdNoXYR8e/JG
S1969oj9zuuC9+5abOsf9535+eAvNcdM2NZGE9clT18RF7RHTUOJ/Bw8r+yM
ox0KtUuYnwOeKzh0t3mO/DZn4raSQtSDITcXHPk5nJ9fQ/te6V3I/Bw5x3sN
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
qFPHOMX/AYxDJTs=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1nAcYltP7x5/32c9rJorMQohE9hZF0qasKCOjaJFCVlnZslNoIcooeyZR
MrJHdkJCsvWz/t9P3/O/rve5zv3ezznnWefc5x7f+zQ9bmD3AXEURY8WUZSo
/CKLol9V3ppG0RjRu9ai6A/R/+p8a9HzyiiaLH4n0U1Urqr/G6gcVlejKoqe
UWe5yknidVSddVU2UNseOl1T3Ua6SDPx99H/ReI3EX2g+O11jRPEe03nF4u/
vvgHib+T+HuL/6D4s8W/Sf/76lrf51HUSvztdK0N9X8f8S8TvYraXC7+bqq7
i/5fq/v5UbzVdFwr/p7iNxC9le5rjNrdq7KHrrWFyrXE31rlWeIfk7r+d7ru
neK1V50GKueo/c/wVR6pOqNFf6U6v+r/1qrzl/popv9X6roP6/9Rqe/na/Em
qH0H8dZR+Z7464qeo3KG7nNX1VmqZ3o/9TuZq3Jz3ccBKq/U+VL9d1Kd00X/
lrv+TNG76/wBoh9X/3uIPlD0E6LfV/1H9b+P+rgq87f7Qf930/8TVI5V24vE
30L8j7mG+pwo+krxLlH7HUQfrb6u0P/tRC9Vnf119BLvJZ3/UP3vJPobtXtX
9Eyd662+d1C5i/jTVGfH1Pc5XfSBoo8X/arob1T/Df0/U/V3U9lO/MfE/yD1
d39Z5Vuqs534J+k+/+Na4heit9axLe9c131e9VYR/0GVnxV+n+30/ltWHhsn
qrxA9RqK/4zqfKNnWVv0szyHrt1a5YWqs7raXKf6h6lcU8etotuov2N1/hbR
y3Vv54j/k9ruq/q99G3XSDwORuamL8zd92qiNxR/dZU/8q7U7mwdy3XuVpWj
cs+zUcwp8dbUn0X6f4P4D+j/2Mxzjzm4oXh/6Xrd9H+C7mcv/f9CdV5VnUr/
O/J9dH5vHduon1NVHh77Hn4M93C+2hytZz1F/HX1f0u130//h6jPSap/kviN
E7/r1pXn5zK1OUT8VUV/Jf7o3G0vy12H+t/r+mupbJj4Xhsk/o8saRjoL0Uf
E/s/9IG67lm67l3q4yy9ix91LzeqPEH8+eJ/pT6v1rPtKP5y/d+Ea6r9/fpf
qd45zHfVuVl19havpvImHXuJ/k/1N+abqU5H0Ynqnyp6uK51o+rsqTr/iH+9
6N1ErxDdk++vOp/rOkfqHrbX/wtU/27V6a46zVTW1c9I1dlRfa8hejPxhqtu
Q9F3iN9W/ONSj5mf1M91ekdT1fYG1btG9AbiXa2yceG5c6b6H6dzbVWnrrIf
skzt/9H5U0R/J/ov0ZsXloe5rnOi+B+J/yPXEj1P9JeiTxa9WPTvom9XXweo
z9VVHiv+S+J/If6t+r+v+KnK8TraiV5V5Z+6p61Ev6X+T1L9T1T/J9XvrvJs
XXeh7ntP3euWKvsjR9VmZ9X/VeevyTwff+b96fiIsapykI7HRGcqh6ivV0W3
U9ulon9ijCOT1d9OOkap/c2qt4f4b6t8XH2eKF5blY/p6Ms4VXmgjj6id1d5
u+61qcbDHSrniXe8jgfUfqDaP6oyVXmornGP6K1UZ37p8fdK6TnLfD1Yxy2p
x+nn6jMR8Y/6+U3/z2auxJ53PdTP6+Jfq7Z3qr6qRtfovvfR/xWiL9b5G8Xf
RvRzKrfS0Vz0BNW5XvQGopuon49Vb7noq1TekFo2TEstF5ijV4rfQv+3ED2R
+aNrLhPdWMdTumh//e+k8gkdp7AmqnxUxwnIIpULVJ6GTFP9vXTv54g+m/ei
/nfX/wdVnq7+n9H5usrDdb37RbdkndR3b6R77KJ643PLkHEqN9S5HcW7W+Us
1rPIdS5R/a665qv6phcju0W/LPol1ky+h8oXmR+ij1U5Q0dv0buqfJhxKXpP
lX/rHvqrv3fV9ympv9ffunYj/d9B589W34NUZ774U9X/C+J3V/05KjsVnneb
iF5Hx/aqf4Hqn6x+7hb/L/VzUOH52FjnH9L5Y3TdnVW+r/+nqZ8PkA2p30NN
5c/Mpdhz4SMdg0R/rLKL+K+o7dWi99TxP9UfwVxTm4bIlsxyDvnHeHpHdfqF
/i9XndXEG8daWlkOnMxapv4yHd/q3Cq8O9VfU+XajDPkpcr3uD/xdxI/LS3f
GojuId6hOr5WvRfFX8I6ovu5UHShOm+Kbql30Sm1DCzF30/8hSr7pn5vv+s+
LtV9byP+l+K1Vv0eyEX1vy/zR3VmM/dT6xtPi26TWn97QfTlattKbZcwhwrr
Hn8WXgeRJ5+mXi/Gib5Ydf+XW38bpP4v0/+W4n+lOnvpuv25J95N6XEyWOUl
mfWoL3RulK7XQnRntf9Q5waE77KT2h6t8zepbU/xDtKxlPVb5cE6vhM9VvU2
Fn2byt1U7ybRv4q+BX019lrcBL1Q9JUqm7P2x/7W16jvRurjHpXjdOgXXa17
OVbn++j4Xf/3UL0/VZ6DTBbvCvRkZJz468Ve11roaBhbhmzHeBV9ncqr1OE6
qnuXyhaV7/kZ8S/Sf72u6NrEMumXyLrBRDF3Q39U2Ub1vhfvUl23r3iFjm3U
R7PUMmOM/m+ic4N4B4xf9Dn1NUTlfB0XiR7EvNW5xapzbljHG4Q1+hL1I1Z0
nf6/XPrdPqVymJhvij8UOa1zlY5tdd3zVP9d8ddVuXNqvf4hnVui+hvrWq/z
3Kp3ovhbipepfRvxx+hZTlW9N2KvTxvqXG/VWUt1p+rcK+Ifr/Lf1OOfdf4y
ffe6eG9Utj8+VZ3zmGPiH656U9XHnaIvVp2FlXXYF2Prsavp/1x0GpX35J53
fVT+nVo3QEeYL95rOu7T/6HqZzOdO199zla9n8TfW3Waqf18xieyRHV2Em89
0T/HrjNB19pe5S86Joruq7Z9I9tQy2PXo06m8nMdj6mvM9RPU9ZdXaup+n9Z
vE1UDhK/jfrfnDEVbC5srwHi76JyffHXqPzeeH+riz5G9Aai78K20bU/YQ3X
dT7R8ajajxY/03s/S3W2CvwR6JHib6L6b6v+tNzv9jSV14i/Ozq++M9W1iP+
p/J95JyOAWpbBX0GvWas6h+HHaM6W+j8O6xBOvduqP+Q6FWCHoI+cqXq/6ln
f1L1FzK/dQxlvolf6PxzlfubJ/5fqcfLm0EnhPeyjntrfmaene87TW3fVJvP
K485xt7a6HXi38eziR6gd/BRbLuOe3srPMtH4R6w3Sg/CvdD+WGg19J9HcSY
UV/91Wdble+pz5Y6v0zH9eh54v0o+k90hrBes26j++wc9J8DK9MHVOajG32s
tm8wxiOvxVvo3Ar100rl69g84r/GWi3et8gu/f9a5RLmKWNJ55aK/gE7K/Av
Qo7ErtdNdZoG/RY9twz9PFtzv/Q/VuVgXW9kYrm9V2oZ/Iz+P0Z/ied529Rz
a67+D6nM/wW7mLElei/xtkcOBrpeuJ8zRL+ia8wQPV/lUP2/NDGffpD7f+e2
Qy8NtuhB4u8huoPKfbABE9tiO+rYKPFa+YPu7XsdY9Apw9g7TfS2es4j1cct
uc9T73n9b642b9Ysk3flW+kYov+viN+FMa1vuzPynjGsfjYX/w2d30zlLuL9
wXgWfwfWFh1TI3+r/+l4X/WGhfEwW3RvPfvjOj9d19pU7U8Wb0rp7/uc+CcW
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
hnYqPa6YO9g6kxmPatMcPbTm8Up8466aZWtSOK7K2sr4nRjG8CzmqI7J+p8W
bsd43w/bNDGfMTgpjMMDNE9O4h5D3BUfKfOkXeF7IAaPbEJGFantR2Qw+tyF
Qd6ic56T2jZcW+UjepZV9D1uIAaOna1jvOrUeXbkSc1jdbzqfqny79Ln/2UM
Jh7Dt6X2B9/BuhfZ/3q7jq6i/8n9/ReltheR4T9ib6n9NNE9dc/3Jo4Fv5I6
hkEs40nRx1T2ieHLIi7CnH08tbxAbhAzfrBy/PZHlWsgzxhnOveX6nwm+i1s
m8L+UnzvG5eWpQeLnqR2a4s+S3Wb4idXeY7eQ7/UdX5V23XF3xG/Z92yDJn2
BHKm9DvvWliWIdOIl9+ZON4xXfRqzCfmADK0snxaqvJ+7G3R31aOP1+rY9PI
Y7uz+hpRd4zoyprvb3Dqd/UfNkDm50PujMjcN7KpY2lZfR3rpOqtx/oW5OJV
teAvVv0u6GQqvyxtK80uveZgd6yMuyS2z5nnaxWWjdgLqxX+tr8wX0v3ewnj
TnUnoQeo/rb61q+pfFL9nyne0zX7id6sbKNhq7XOPQb7oZ8n1l3RYS+KvWaP
rFlvPS/YaCN0nFezjxi7bZ/AJ75HbAWd75rS179HZR/0bvEWo1vp/xzmG/JQ
/29T2xeZS6JvjX2OONVLrLe8p9LnJ6nskJs/U/c5tbTugP9m48pyAj/rRLWd
ENufS2yNeB9z74jCccVWajdd7Q8XfxuVk0vXxQc8ovSz7RJiF3NrXlOfyRyP
w380EdtOdKPMegoYAPTa50vXoX8wBdjsz6vtDqX9COgS2PTY9vgWsrCegKfZ
vbCO9EBhO5+23dV/L+aV+J8m9ruwPmBH8d3QXdBbhqne5yrPzOzr2i12/8PV
z2DeJfq1+nlRdVZLbb/i78DXgd8f2dsotZ6Fb2C0jp56z5epPIO5lfv7n5bZ
t/kr31597pzb1j9d/HPV/h310zh1O2ITn0W2f/GftMEuq3xtbOhLYuuTtL8z
t66IzwFfKf4HfCuP1+wbRy8/Ve/lpcjfZZ3c85C5+mxhH8iz4v8Vef0i1oKf
4T+Vd6f2g+APAZtxfOz4ThbWeOQk/vl/Iq9ZxEi2UL1VVY5FtoleRfQtifEX
YEGI705NHa+7LDUOZa2aY8Ob6z9m7E3oabnnO7GGo3TdI2PHjJcVlgm/6/zj
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

           "]], Polygon3DBox[CompressedData["
1:eJw1nHkcD9X7xWc+s39ItGhRWbKWFqF9k0QhLUTRgrQoS4gSLYTSQlqVlPZN
eyRJVGjfF21EqbSQdn2r33l35vfHvD73mXvnznxm5t77POecZxr2G3LM4EoQ
BCckQRDrd3gRBF31uyAKgh2rQbC97LVqcI321cqDYJc0CEbLflp2qgOaq/5P
2Sfr+CPU/l61eS0MglO0ba/y9aofrbafqL82qn9Rvz1k76r6Q3T8UPW3WseP
174hKg9W+4vV5m3ZnVTeT31cqbbnqf/Vsj9Vmxqqa6pj18j+QvWvqP5UbY1z
XzfXP06/B6jNZ2rzjvo/Xcfdo/O31e+lssepfRuVr1P9+Wr/sdq3Vv0s2ffI
/kv2QbKXqc8+at9Z+/7JgmCRjhkW+Z6MUPlT1XMDT+c/qvy1tsmyq7ref9TX
y2pzgdpvp22Kyl/omnbWuReozd2yP1L7QSrvo33vqXyHjrlXff1P7Q/W+deq
/e6qG6g2k9X+A20TVXei2hyqusGyV6hurOxBKr+qPk6SvZpnqPIn2qdugiZq
+5X6flH7jlH9Ku2br/JZ2jdG/T0he3+uV//xH5XvUfsvZS/W8SNUv07HjFT5
bO27UPZitTlQ5UN5xrq+C/V/18leqe0t1b2ltg/pxHVlv6FjT9O+LVU+Xdvu
Ku+m/m9T/cc6fojqz9C+XOXPdFxNlZup/mu1ra3tFdXvr3PUUHmHwtdyu9ps
ofYHaZuqutE6/7eqO1j2NbIvkL1Wdh1tr6r9KWofq+4u2bNVDtV/e53/PZ1v
vP7PkYHfly0KX2sT7b9K9cP1+52On6Z9O6m8n+qbq/0tKt+t+jN4v2WfoPrW
Kg/T/q/V/lLZLVTei+cle5KuaU+V31ebc2Q3U3mKjr9R93uQ2r6jPsbKfkN2
pLY761q+U9tz1W692s9Sm51VflPbRWrbUtutjB1t26puF7X/Qe1f0n/spfbb
av83slfpdxvVt1T997If03EH8iz0u6f2fcgxar9M9s06/9U6/lWdf4C2prnv
/xLGt47ZVOVW6u9C2R/I3kbHvyP7Eh27j7Y7VH5e21CVv1Cbc1R+UW22Vl9P
y+4l+wb9v7N17Ntq84v6m6pzvKH6M7XtpPJI7euj+qWq37nq8TVUx7ZT/XKV
W3M+2RfL3kPlG5kv1H4l/0ftT5O9G/OLzjtT9gDuoeoO1zEv6/jNCv+X/jr2
FtXXK3yt47SvqvpbZE9R+Tsds6/qV6ufljrXYrU5ifGn+u6y79f7dZbqb5J9
mdp/pfZ7yZ4iu7fsJbJ3kn2O+vxG7Wdo33b0r62++rpI+8byrqp9f9W9rva7
qf2+uj8Xye6j8xay31GbFmrbXNsG1U1V+36qf03td1X9Cl3HX6p7g2eqYz5W
/c2yx2v/7ar/SdfcRnWvqO5U2WervzWqn659tVW+TVtD3lftu0jljTquqexW
gcf0ZPXXQeWndb76vO9qs0ptJ2tfDZWnqX4g4131rVR/OXOC7Lmyd5C9Uudv
yljQ+Y+V/YXsZowl2d1lz9Z/miT7S7VPZa/XOTfT+R/QvndVnqj+9lJ5tuq3
Uf2G1P3vreP7y56g+j1lP6T6rat+nzbX8Q9qXw/1fYu2YSp/oPrf1fZSbW1l
Pyh7K7Vvkvtdn6tzDZX9uNrfoPp1qq8he7za7yr7Xtl1y/FRW/3fqX3d1Ha6
7O1kn8ccpHI9bSer/Lj6G6z23+u3pupv5h6pvA3zs+ofU3mQ6iep/wNU96j6
ryf7EPV5Ne+n/t8msn9Qu1o6/hbGjMrX6/htZA9XH+fzLHU/mnC/1b632iey
91T9o9r3ntpvJbub7Eayb9c5LmdeVVmnDa6TPVfnu1vljSrX0vEXZZ4vrpd9
ruzOsm+VPVDHbSr7Dv3+xdqv7VKVt1ThSPW/ueyZsi9U+61VvlbHH6f2x8l+
SPY5qqsj+2ld8zLZy3VtF8o+UPbvsuuqn8myR2fu6yodP0J2yhyq/h/Tvvd1
zHNq30Dl5urvftU/JHtv1fdQ3WFVr2+M9dpq80Lu9bCz7DqMAZWfVv9Pqhzp
+Npqf73ss8r392fdlH91vvasbar/SfYzqn+H62Nt4P2W3UL2XZHn0yu0dZH9
rOxGqp+s+p1k3x15Pn5f57xTz6qVtv/xbJk/uDbVN1P7q2QfK3ux7Kayj5D9
W+g19HDOr+PfxLfQ/7tI9Z/pd6PqlzIf65pqqc9jVO6g8obC88vPqn9Z+25W
+WDt+0n2ItkHFX5/1sl+huef+/1dL/t52Tep3E/9zVf5PPW3uc73lo7ZEPpc
l1U9X/wa+ppmqjxP7V9QuabqN2N+0f37WPf73MBr3H2Z59Yv9P8qqv869fhr
pfYnyO6j/vuq7hn1ebzKW6r98apfpnYPqv4S2fVkT4/s712d2pc6U/vexJeU
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
mOw9Gd8Vr6FohOBgmZ/YB18MPwt3PLNcU2kPNwinDLcMPs2zgTNEg/R4ZH7g
Ge07IfV4gJ+Gk4SbfLyMVRpp3166xmEcUzGnBbcFBoK+Ap0F2MhThbEYeNgb
qh4fcLtoLtBe3B/Z1wMP6ZkaI4H/hQcGOxmh9p8HPsdxpU/A/+D/gIWxJhGb
jQq8VhH/oM9Ep0lsBC8DlgqmOivy/IZ+6IrQmqEZ2moFnl8ng1dG1iptDKyX
uDk2H3iKzrdDat4I/ug61vfIazpre+vYfDl8GdzVlND6KebP7wJriuBwa2fW
73WMrd/ZNLM+7zDZTap+H8BT6uDHqe8HYus7rw6tsYIHhEthjZsWeS3AN8e/
nR+bx4TPrITWVB2UmS/uG1tvOFL383L8b22jVJ6qNiyZrIfos4hB55bPfju1
/zm1nm+f2Pq3X8BiiL1i6+d+ld2RtTe23o6Yldh1/9j6NDBPsM/2sfVO8D1g
Byem1ruA8YD1tI2tl/tT7XfTtX0tu2HVfNIa1XfXMduk9p3wPYlnXlfd1ZG1
Laz/M2L7pjvjT6v+TbinzHqpg4iB1F8ls568XWx9YphZX3VwbP1hu8xax36x
9Sz4q+g30TDiv64u1+5jwTBlr80934IpgC2wpvMuHh97rd8hNjYERjSuHC9o
ay4L/T6/W8Yi4BWbJPYRwH6HlL4DPh2+WM/Yvh5r/OrQczNrPz7Cl6HnYnwH
+Iu9Q/OVA1L7aPh+x8b23fBn26t+Rej4BJ/sC5UPSO2r4XN9FXquwxfDp+P/
nhLb18NHA/t8KLXvhs+I79hD9Xuofq/MeqATYuvjOT++4jGx9Z77ZdbLnkjc
JbtLZn31WbIPgJ+TfZ/sM2PrGw6VfZvsAbH1td+UsX9PXeNOzP+ZfcOTYut5
28ueKftU4jbZP8puqrbLZW+LXfqqfbRvj8S+KljOkbLrMTfnvn+/qX0LfLfM
8WCn2Pq7jpn19mfExgeT3LEmL2FLsM7MWtfesfMXiAc6h9boEK8QpxKfv6pt
F8Z/4tgYDuG2xDE82NaDqWP7f+PSDs21kDfxZxmPwYWgiWF9gD9Ab4/Piu86
ITW2e2lqG5+2YWpMGWwZ3RPYPZga2Nqc1FwEegG0A2Cmo1NrVPCXvq84f2GX
xGXwO3A8NAVoC1ij0RvAP28aOQdiu9Q+CL4IGr/NEusM0BvQBn76wsLY9Aup
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
fpkY/8C/RhODNga88xP1939kc80j
           "]], Polygon3DBox[CompressedData["
1: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
98X+Dw8DC+4=
           "]]},
         Annotation[#, "Charting`Private`Tag$5890#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0r9LlVEYB/DHe6/Xe63UFktLJdDNH0ggDioNEYEtpZM1RE1dUAcFFSGi
EMWhHyAmkaOtDelfoNAalpZaVkNTNEVDFOjniMPh832e97znnPfce+HO6I2R
soh4YTRnIlLO8g9XuZOPqJELHnyVm+QfbOcv9vIfr7FYEXGTdaw3SnIHp9jN
OV7ic17lKw5wjXcLEZv22JAvFyM6sxHT6v/O8F7vdTqL+kwu4oP6LLd4X69O
3pYfmFMqp96B/FHvonWG9R7qfVLXm7vDczxv7MoN3GMjP3PG3Kl8uoiIL+jh
mDVm9TPyvt64ei7didzkvW+c0JvXy5rzXf3GGfbVk75xU13iOm9xlde5witc
ZB9n2cVJtrHVuCfXcogV7Odf5+vhT7bxrfsbsl+j/M6cvH1b1NXqHMvVy85V
pX7JU+k350ku8QQXWckFFtPvaO1B7xbSfcsD8jPPLB9Pma7oCX12PGYu3aHm
7czR1cUj+bSQSXt4+Pv4P3YI4MlEDg==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1753, 2243, 2244, 2235, 2249, 2405, 1056, 2345, 2250, 2251, 
       2237, 2346, 2697, 1913, 2236, 1989, 2106, 2676, 1914, 1754, 2477, 2531,
        2107, 1915, 2252, 2253, 2699, 2515, 2108, 1916, 1991, 2475, 2532, 
       1993, 1917, 1992, 1159, 1995, 2427, 2642, 1994, 1979, 1997, 2646, 1918,
        1996, 1980, 2109, 2677, 1919, 1755, 2533, 1920, 1756, 2534, 1921, 
       1757, 2535, 1922, 1758, 2476, 2536, 2245, 1923, 1999, 2647, 2182, 2183,
        2001, 2177, 1924, 2000}], 
      Line3DBox[{1759, 1981, 2348, 869, 2729, 2238, 1982, 2350, 870, 2239, 
       1990, 2110, 2698, 591, 2240, 2478, 2537, 2111, 1925, 2003, 2479, 2538, 
       2112, 1926, 2004, 2648, 1983, 2113, 1927, 2006, 2649, 1984, 2114, 2428,
        2643, 1760, 1985, 2115, 2429, 2644, 1761, 1998, 2539, 1928, 1762, 
       2540, 1929, 1763, 2541, 1930, 1764, 2481, 2542, 1931, 2010, 2653, 782, 
       2246, 1932, 2011, 2654, 514, 2012, 1933, 2247}], 
      Line3DBox[{1765, 2347, 2430, 2718, 2406, 2349, 2431, 2719, 2407, 2002, 
       2256, 1072, 2013, 2480, 2543, 2116, 1934, 2014, 2655, 2005, 2118, 1935,
        2016, 2656, 2007, 2120, 1936, 1766, 2651, 2008, 2122, 2432, 2650, 
       1767, 2009, 2433, 2652, 1768, 2434, 2581, 1769, 1076, 1770, 2482, 2544,
        1937, 2124, 2678, 2023, 1938, 2125, 2522, 2720, 2024, 2254, 1939, 
       2025, 2661, 1986, 2026, 1940, 1771}], 
      Line3DBox[{1773, 2435, 2582, 1772, 2352, 2353, 2721, 1774, 2354, 2028, 
       2257, 2029, 2709, 2296, 2297, 2208, 1219, 2117, 2015, 1775, 2657, 2017,
        2119, 2018, 1776, 2658, 2019, 2121, 2020, 1777, 2660, 2021, 2123, 
       2022, 2659, 1778, 2436, 2583, 1779, 2437, 2584, 1780, 2438, 2585, 1781,
        2483, 2586, 2030, 1782, 2662, 2031, 2032, 1783, 2663, 2033, 2255, 
       2034, 2258, 1784, 2645, 1987, 2027, 1988, 1785}], 
      Line3DBox[{1787, 2439, 2587, 1786, 2416, 2417, 2733, 1788, 2418, 2035, 
       2298, 2588, 2484, 2395, 2301, 2302, 2300, 2485, 2710, 2299, 2036, 1789,
        1250, 2037, 1790, 2664, 2038, 2039, 1791, 2545, 2440, 2589, 1792, 
       2441, 2590, 1793, 2442, 2591, 1794, 2040, 2592, 2486, 1795, 2487, 2593,
        2041, 1796, 1257, 2042, 1797, 2665, 2043, 2259, 2044, 2261, 1798, 
       2666, 2045, 2248, 2046, 1799}], 
      Line3DBox[{1801, 2443, 2594, 1800, 2419, 2595, 2529, 1802, 2420, 2421, 
       2303, 2596, 2308, 2307, 1803, 2305, 2306, 2711, 2304, 2310, 2309, 1804,
        2312, 2313, 2712, 2311, 2047, 1805, 1267, 2048, 1806, 2546, 2444, 
       2597, 1807, 2445, 2598, 1808, 2446, 2599, 1809, 2049, 2600, 2488, 1810,
        2489, 2601, 2050, 1811, 2490, 2700, 2260, 2264, 2263, 1812, 1274, 
       2262, 2357, 2356, 1813, 2731, 2409, 2410, 2408, 2355, 1814}], 
      Line3DBox[{1818, 2547, 1941, 1816, 2423, 2548, 1942, 2424, 2051, 2149, 
       2516, 2685, 1943, 2380, 2379, 2726, 2525, 2327, 2381, 1944, 2383, 2382,
        2727, 2526, 2328, 1945, 2126, 2492, 2549, 1946, 1824, 2550, 1101, 
       1826, 2551, 1947, 1828, 2552, 1948, 1830, 2055, 2553, 1949, 2127, 2494,
        2554, 2329, 2384, 1950, 2385, 2276, 2703, 2517, 2269, 2399, 1951, 
       2128, 2523, 2722, 2358, 2270, 1952, 1835, 2556, 1954, 1837}], 
      Line3DBox[{1836, 1953, 2555, 1834, 2056, 2266, 2702, 2495, 1833, 2267, 
       2268, 2265, 2521, 2701, 2324, 1832, 2325, 2326, 2323, 2730, 2402, 2401,
        1831, 2493, 2608, 2054, 1829, 2607, 2449, 1827, 2606, 2448, 1825, 
       2605, 1100, 1823, 2053, 2604, 2491, 1822, 2052, 2321, 2520, 2715, 2322,
        1821, 2319, 2320, 2315, 2713, 2317, 2316, 1820, 2318, 2714, 2519, 
       2314, 2426, 2425, 1819, 2530, 2603, 2422, 1815, 2602, 2447, 1817}], 
      Line3DBox[{1839, 2450, 2609, 1838, 2557, 1955, 1840, 2057, 2150, 2704, 
       2277, 1956, 2386, 2278, 2279, 2558, 2151, 2280, 1957, 2389, 2387, 2388,
        2559, 2330, 1958, 2129, 2496, 2560, 1959, 1841, 2561, 2451, 2610, 
       1842, 1110, 1843, 2562, 1960, 1844, 2058, 2331, 2716, 1961, 2130, 2497,
        2563, 2332, 2390, 1962, 2391, 2281, 2282, 2564, 2271, 2400, 1963, 
       2131, 2498, 2565, 1964, 1845, 2566, 1965, 1846}], 
      Line3DBox[{1848, 2452, 2611, 1847, 2453, 2612, 1849, 2059, 2152, 2705, 
       2283, 2284, 2132, 2285, 2499, 2567, 2153, 2178, 2179, 2133, 2286, 2500,
        2568, 2154, 1966, 2134, 2679, 2060, 1967, 1850, 2569, 2454, 2613, 
       1851, 2455, 2614, 1852, 2061, 1119, 2135, 2062, 2333, 2728, 2392, 2396,
        2393, 2136, 2287, 2359, 2501, 2723, 2360, 2288, 2289, 2137, 2184, 
       2502, 2570, 2155, 1968, 2138, 2680, 2063, 1969, 1853, 2571, 1970, 
       1854}], Line3DBox[{1856, 2456, 2615, 1855, 2457, 2616, 1857, 2064, 
       2156, 2518, 2667, 2290, 2139, 2185, 2503, 2572, 2158, 2180, 2181, 2140,
        2291, 2706, 2065, 2160, 1971, 2141, 2681, 2066, 1972, 1858, 2573, 
       2458, 2617, 1859, 2459, 2618, 1860, 2067, 2460, 2668, 2142, 2068, 2334,
        1711, 2397, 2394, 2143, 2292, 2361, 2504, 2724, 2362, 2293, 2294, 
       2144, 2186, 2688, 2069, 2162, 1973, 2145, 2682, 2070, 1974, 1861, 2574,
        1975, 1862}], 
      Line3DBox[{1864, 2461, 2619, 1863, 2462, 2620, 1865, 2071, 2157, 2072, 
       2692, 2209, 2210, 2187, 2669, 2073, 2159, 2074, 2188, 2211, 2189, 2670,
        2075, 2161, 2076, 1866, 2671, 2078, 2079, 1867, 2575, 2463, 2621, 
       1868, 2464, 2622, 1869, 2080, 2081, 2683, 1870, 2403, 2082, 2404, 2083,
        2717, 2398, 2336, 2337, 2335, 1343, 2272, 2084, 2273, 2338, 2212, 
       2672, 2085, 2163, 2086, 2190, 1871, 2673, 2087, 2088, 1872, 2576, 1976,
        1873}], 
      Line3DBox[{1875, 2465, 2623, 1874, 2466, 2624, 1876, 2089, 2164, 2625, 
       2506, 2213, 2339, 2214, 2505, 2693, 2295, 2077, 2215, 2216, 2191, 1352,
        2165, 2090, 2192, 1877, 2674, 2091, 2092, 1878, 2577, 2467, 2626, 
       1879, 2468, 2627, 1880, 2093, 2094, 2684, 1881, 2095, 2241, 2628, 2507,
        2340, 2341, 2217, 2508, 2694, 2166, 2096, 2193, 2342, 2218, 1362, 
       2167, 2097, 2365, 1882, 2527, 2725, 2363, 2411, 2364, 1883, 2578, 1977,
        1884}], 
      Line3DBox[{1898, 1978, 2580, 1897, 2366, 2412, 2413, 1742, 1896, 2367, 
       2368, 2171, 2695, 2226, 2225, 1895, 2200, 2201, 2170, 2690, 2199, 2198,
        1894, 2343, 2351, 2344, 2634, 2242, 2275, 2274, 1893, 2509, 2633, 
       2102, 1892, 2632, 2471, 1891, 2631, 2470, 2579, 1890, 2101, 1372, 1889,
        2196, 2197, 2169, 2689, 2195, 2194, 1888, 2223, 2224, 2146, 2707, 
       2222, 2221, 1887, 2219, 2220, 2630, 2168, 2100, 1886, 2629, 2469, 1885,
        2675, 2099, 2098, 2147}], 
      Line3DBox[{1912, 2105, 1397, 1911, 2376, 2414, 2415, 2732, 2528, 1910, 
       2377, 2378, 2176, 2514, 2687, 2234, 1909, 2206, 2207, 2175, 2691, 2205,
        2204, 1908, 2233, 1549, 2174, 2375, 2374, 1907, 2524, 2641, 2373, 
       1906, 2640, 2474, 1905, 2639, 2638, 2473, 1904, 2104, 2637, 2511, 1903,
        2202, 2203, 2173, 2513, 2686, 2232, 1902, 2230, 2231, 2148, 2708, 
       2229, 2228, 1901, 2227, 2696, 2512, 2172, 2103, 1900, 2636, 2472, 1899,
        2510, 2635, 2369, 2371, 2370, 2372}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0oxHEYB/BHzssdq1gtbBRRlMGkvBQiL2fglpPCKoON8RZvqcMg0i3I
ZrsYKZOZTCd1ZiGfGz59n+f7/H/1b82sT65VRUSGXHVEPhFxzHsyYqMm4sTc
VBtxKku6Td2Vucg1Zd2W7pt7+wsPzHozx0Eq4tW+4/4mz3VpFjh0K+tybl/y
UrfIEkduP7p9t19Z0F3osnKZpD5Pij//MKB7rHxLM2e0UOfNoNuTuUQbBdpp
dPuQz3zSw6ruRvYy6t0wt+aEHGPbvc8+RD/jug7uzPVy132i8s4+wwhT9k6K
5ga555tpOW/Pkqbb3sWK+R8RGzVl
       "]], Line3DBox[CompressedData["
1:eJwVzr8rhHEcB/CPDh3uH2DBxk7MBpHtpmNw+TE45TFLkclguDJISZ1cSSfD
3WSTwW1KiqxsSjmdFa9nePX+ft6f7/fpGV7ezCcdEbFAORNR6YwY7I44k0Py
oDdiqyvi3HxNlY+eiG1d3fmOojsNuau7l0vmF9mk4Ztvct/uXS76ZpFjd1rm
sv5bXupWONGvyl/dkd2frJkv9CW5Tp/+lFy69y9Xug0S+nVVBsh6M6V7SO8x
Qo1D/aictnuUn0yQ6Otykjm7J/nFDDfM0uKZNnvuF+Qt8/zwyo4+5/2ac5MS
4+ax9D+d/wHg/jXh
       "]], 
      Line3DBox[{912, 1156, 1186, 1157, 2532, 1190, 1165, 1201, 2648, 1166, 
       1404, 1205, 1221, 2656, 1206, 1408, 1224, 2658, 1240, 1225, 948, 1252, 
       2664, 1416, 1253, 959, 1267, 1424, 1268, 969, 2604, 1280, 1431, 1281, 
       2549, 979, 1293, 1438, 1294, 2560, 989, 1307, 1445, 2679, 1308, 1000, 
       1322, 1452, 2681, 1323, 1011, 1339, 2671, 1460, 1340, 1022, 1356, 2674,
        1467, 1357, 1031, 1372, 1474, 1373, 1040, 2637, 1387, 1480, 1388, 
       1050}], Line3DBox[{913, 1158, 1189, 1159, 1192, 1167, 1204, 2649, 1169,
        1405, 1207, 2651, 1209, 1409, 1226, 2660, 1228, 949, 1086, 2545, 960, 
       1093, 2546, 970, 1100, 2550, 980, 1108, 2561, 990, 1116, 2569, 1001, 
       1123, 2573, 1012, 1130, 2575, 1023, 1137, 2577, 1032, 1144, 2579, 1041,
        2638, 1151, 1051}], 
      Line3DBox[{916, 1161, 1060, 2677, 917, 1194, 1067, 2539, 931, 2581, 
       1075, 940, 2584, 1082, 952, 2591, 1089, 963, 2599, 1096, 973, 2607, 
       1103, 2552, 983, 1111, 2562, 993, 1309, 1446, 1119, 1004, 1324, 1453, 
       2668, 1126, 1015, 1341, 2683, 1461, 1133, 1026, 1358, 2684, 1468, 1140,
        1035, 2633, 1374, 1475, 1147, 1044, 2641, 1694, 1695, 1154, 1054}], 
      Line3DBox[CompressedData["
1:eJwNzi1LQwEYhuHXT1DQkwwrokEwTDDYhAWxKMzJLDbBHzARhh+4P2BcUYMy
g8GyzbANDAOVFYt5SUFwaYsDbV7h5rnf5znncBYPj/KFkYjI4mosYmk84mcq
4pqneZ8/8DVelanpiHX+zBd4j19ORGzIjm5ZN+Rl3Zb80K3qRt032NX9+WZX
n7gr2NfdeuZbdzwZ8YJ5fUNW8WiryYG9KF+xYm/KOp7wazuRb8jY7rzT4jvI
4QKn2NTn7G3k3Xso4QzbtgN9B5/4wpx/m7EV+Dtm+T0SnOMfygMquQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzzEvQ2EUBuAjt5Uw6Wqhi4SGbjqSGLoifkBJTBJtIv4AicFoqN5NohaD
0SDU1EXCJBH9AWXRSIcKk+cOT8573u/my3eLO/XN/bGI2KKVRMzlIvoTEam8
KH/JV/Kz/MK3/cY+PRnxbu9xZy/aP+TTfMSn2dXN60byme7H3B2PuOda/2Am
+pQcf+7d03V4ZEp3QYHE93Vdgxl705w1L/Xn8hoLHLCkb5lls+08lauUOGRF
f8sqA17J6098uy532GDIGyOOnNXMLtvZv9Djl+PsbeYTDSruWs7eIv8DqNIw
ww==
       "]], Line3DBox[CompressedData["
1:eJwNyj9LggEUhfFb6gs6RX4Ci5A2WxuC+ggKtRs4RZlEaxFBUIlQuNReW41B
b9DW0mAIgWC7/YEaWmzrNzw8555zS/Wt6uZERKzhIhNRzkaM8hGXcio/4Nt9
5e7JB7mI3ULEi3yrG3LDfah/k1PdB5+4P/k4iZjFqZ+x+1z/x23dHNr6Buf0
Z5zwPS+iYyvzBqb1XS5yylnbEs+jhZL+GjMo2N65h7BV+Ab7+gX+Qh+TtmVu
6u94BT94RWKr8iNq+MUAef2R/7r8hHWMMcSefsq+LT+jhVX3Dv8DOWcwQw==

       "]], Line3DBox[CompressedData["
1:eJwVzj9LQnEUBuAjaaFzLjWEKdFcH0Fnh/aWlmhJ2qKloARLEUUnM8hAaAha
W/oC9tf2JpcgaK+p5w4P7znv/XE5hZ3a1n4qIqoM5yIu0hFNvrIRS/MRPfMj
J+btXMSxXGaqO81EXOvq9jMKfOp3k863c3uDVb71e/qWvmVvUuJP39d1zR3W
aHu3oBvQT27gRrcuF3Uj8mR0MzcXzbcc2kvyR7ch7znSbcpfXVke2B9khYn/
PfHMWH8pB7zwyhtXDHnnzpup/EjuYcSK+/8B+i8tGg==
       "]], 
      Line3DBox[{925, 1506, 1507, 1195, 1509, 2647, 1508, 1196, 1172, 1214, 
       1511, 2654, 1510, 1215, 1173, 1234, 2661, 1174, 1235, 1175, 2645, 1246,
        1666, 1665, 1564, 1260, 2666, 1421, 1261, 1735, 1736, 2731, 1737, 
       1679, 1678, 975, 1105, 2555, 2556, 985, 1113, 2566, 996, 1120, 2571, 
       1007, 1127, 2574, 1018, 1134, 2576, 1027, 1141, 2578, 1036, 1148, 2580,
        1046, 1397, 1398, 1399}], 
      Line3DBox[{1047, 1149, 1380, 2635, 1037, 1142, 2675, 1364, 1028, 1135, 
       2623, 1019, 1128, 2619, 1008, 1121, 2615, 997, 1114, 2611, 986, 1106, 
       2609, 976, 2547, 1098, 2602, 966, 1091, 2594, 956, 1084, 2587, 944, 
       1077, 2582, 935, 1070, 2718, 1731, 1733, 1732, 926, 1064, 2729, 1721, 
       1554, 1720, 1719, 907, 1056, 1658, 1565, 1177, 1505, 1504, 1176}], 
      Line3DBox[{1048, 1150, 2636, 1038, 1143, 2629, 1029, 1136, 2624, 1020, 
       1129, 2620, 1009, 1122, 2616, 998, 1115, 2612, 987, 2557, 1107, 977, 
       2548, 1099, 1752, 1751, 2603, 967, 1092, 1750, 1749, 2595, 957, 1085, 
       1748, 2733, 1747, 945, 1078, 1671, 2721, 1670, 936, 1071, 2719, 1734, 
       889, 927, 870, 1555, 1164, 908, 2697, 773, 1553, 1155, 1667}], 
      Line3DBox[CompressedData["
1:eJwVzjEoxAEUx/F3HUe3WHRSUlds1Cl1RKHcxapQYrliUSxWm0FKMVjOIkT/
Qd2xy3iz2MhoM1gP+fyHb7/3vr83vGJtd2knExHr6O+IGMtFlLDVGbGJvPkw
H9Gje7e/YQXLqPJd+pxuVI6gylcwp8vaf7MRi3IBDf6AH5cZ+7euIuexzSf8
MP7wqZvlT/kZeckV8JP+oJvmTnRT8pzrRhvPun1+kp/AA9r+q8k639Lfmm9w
jy/dEL9hftRdyys08aEb0K2lt7qy/RVn3Itc5RO+ZH7CHS7sffyRm4LsTf/j
j/k9rmiuY5D/B7sbLgc=
       "]], 
      Line3DBox[{1052, 1152, 2639, 1042, 1145, 2631, 1033, 1138, 2626, 1024, 
       1131, 2621, 1013, 1124, 2617, 1002, 1117, 2613, 991, 1109, 2610, 981, 
       1101, 2605, 971, 1094, 2597, 961, 1087, 2589, 950, 1080, 2659, 1227, 
       938, 1073, 2650, 1208, 929, 1065, 2643, 1168, 914, 1058, 2642, 1191, 
       1662, 1661, 1560}], 
      Line3DBox[{1053, 1153, 2640, 1043, 1146, 2632, 1034, 1139, 2627, 1025, 
       1132, 2622, 1014, 1125, 2618, 1003, 1118, 2614, 992, 1110, 982, 2551, 
       1102, 2606, 972, 1095, 2598, 962, 1088, 2590, 951, 1081, 2583, 939, 
       1074, 2652, 1210, 930, 1066, 2644, 1170, 915, 2646, 1059, 1193, 1160, 
       1561}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
4e3F0eeSDDx25P7Yggph3rMoXHYykw1NKw5ax6sL/w6ClE/lE51g6TDj6uFc
PnwMs7r8SLYDn4qtM14wuxsSVqqHNCzhQtbW8qVNtylYmhjBOl7WAcLhAU56
Q7Arw7wmubEK3fcV1hurCucLoi9/+KMvt/2lTuy+HXkSuZcHql8NH/lS+zE3
dZxxs64dNpxovqQjNgzBN0+uXFAdjm5nbPvfLO8ENtFPuSb/9NPZRD+1vtJ+
YGwHH07FdbUvFH7OIyeK6qXl26HsMM9yffUQ2JvE561ZXQGyndnlVdR28CL6
nT3R78KIfrfybRnHVI+Fv7/t8Nu5qhUeJJaHN6swQdIzbJP/QRpOenDe/1kU
HU/JrM/TdqHCmEhwZrQqA8c3dZyGaCr6ty9oW3ubCqavIquqZJh4Mv1g3eMg
CtrHiJbQQ6iQXbnsoIXMIKgeqNRyje7CBMO66/PS2sBjVQEjx6EYrtCH13x8
RoZtywciP9Xx4cfls7TczXS46q2Y9juvExcs/3jTnsOCr/mBesfP94Kfm1n2
7PIs3BByZ/XjhkEQaWo/b72sAhbaT13r/r4Y1j9YwDXbIQA+8T7M3D/upy6Z
8shi39IquGMc0xeQkgnjGyqWazsJIFBFZnLO23rw3EPesSrrNXY7DIaZKgtg
m88Fpfhv0UUiImFD9QZxRY/Hfgv/CWDiy4Yf41sji+4Vka3Ile0YcktQu8do
GIw3Z6pPVauD2A+5nIQtLNwntt8+4gcT3pH6vgg2kSAipDFk5kMmNjD8p09K
ocPi9ZobdCIG4Waz4uQikRYsLuFtc1Pvgr0lHdULHrfD1vF1bsWOuWAIEHlG
dRj6hygP5PtPbV1duFNizkE2PNwn176BwQTnwORFpldycdRP6vDbUgpI64sr
kebzYckbuU6ZHRU42+hW0b2AboioTjQwnTMEyXX7e1Zr02B7/6vpb0UYmM9V
Lto9nwpuat1JXqNMSNBN77aQpGG5UYv4VeF6ZzXfq633bB+UN+d5Dm3hoHz9
Q1b1EzLcOXXzSdxzDlhMSncGSQruu6AsYWraA+yZTT3qwnXwAZ+meT3T2Rj+
yXz3Ss8+eDdf8eeiYB7A4Lb0Jus+zEhrUzw72AFZ4lpsnWC68O+fraobz0RZ
J5URpwASxKSJLXHt4oPDleML1ov3oPHDhVyyThuENdOnp8YxQWvXo+SUOQyM
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
/wFyuVoU
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{368.36011906531246`, 259.1618136413145},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.13515851642867893`, 3.999998107143255}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3635997168043583`, 1.3044481043763634`, 2.040051842897937},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7472453468691463`*^9, 3.7472453836101294`*^9}, 
   3.7472455340342493`*^9, 
   3.747245632364023*^9},ExpressionUUID->"9d2b94c8-d83a-45df-9d01-\
e0ce0cb2a81f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1313, 744},
WindowMargins->{{0, Automatic}, {Automatic, 37}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Linux x86 (64-bit) (April 18, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "1"->{
  Cell[903, 31, 2592, 49, 
  149, "Input", "ExpressionUUID" -> "8fb1514c-0104-4773-81f8-5374490bfabb",
   CellTags->"1"],
  Cell[3498, 82, 1035, 24, 
  129, "Output", "ExpressionUUID" -> "d9b991f9-9df9-42f4-abb8-496fd0158cee",
   CellTags->"1"]},
 "2"->{
  Cell[4886, 120, 1438, 37, 
  116, "Input", "ExpressionUUID" -> "dac6af6f-a763-463b-8f0c-54edeab5a9af",
   CellTags->"2"],
  Cell[6327, 159, 925, 25, 
  129, "Output", "ExpressionUUID" -> "f6adceeb-43ca-46c5-aebe-26a07af80db6",
   CellTags->"2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"1", 481550, 9608},
 {"2", 481805, 9615}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 7, 50, "Text", "ExpressionUUID" -> \
"df0af1b1-3a3c-47a7-9951-0fa3d88ecfd0"],
Cell[CellGroupData[{
Cell[903, 31, 2592, 49, 149, "Input", "ExpressionUUID" -> \
"8fb1514c-0104-4773-81f8-5374490bfabb",
 CellTags->"1"],
Cell[3498, 82, 1035, 24, 129, "Output", "ExpressionUUID" -> \
"d9b991f9-9df9-42f4-abb8-496fd0158cee",
 CellTags->"1"]
}, Open  ]],
Cell[4548, 109, 313, 7, 50, "Text", "ExpressionUUID" -> \
"4c93b521-7017-4400-aece-65e399dc9ad6"],
Cell[CellGroupData[{
Cell[4886, 120, 1438, 37, 116, "Input", "ExpressionUUID" -> \
"dac6af6f-a763-463b-8f0c-54edeab5a9af",
 CellTags->"2"],
Cell[6327, 159, 925, 25, 129, "Output", "ExpressionUUID" -> \
"f6adceeb-43ca-46c5-aebe-26a07af80db6",
 CellTags->"2"]
}, Open  ]],
Cell[7267, 187, 764, 19, 83, "Text", "ExpressionUUID" -> \
"15332393-42c1-4a1a-b499-4be2dc3c0775"],
Cell[8034, 208, 2791, 65, 300, "Input", "ExpressionUUID" -> \
"683d50e5-0c9a-435f-8b97-5e489baae5ff"],
Cell[CellGroupData[{
Cell[10850, 277, 2910, 69, 532, "Input", "ExpressionUUID" -> \
"08bc5194-601e-4ed8-9898-508c99859ec5"],
Cell[13763, 348, 293, 8, 69, "Output", "ExpressionUUID" -> \
"5871c64f-d42d-4bbf-b9bb-66e8ca0a4993"],
Cell[14059, 358, 225, 5, 69, "Output", "ExpressionUUID" -> \
"d534e7a9-0742-4fdd-8830-7272b49d82c4"],
Cell[14287, 365, 226, 5, 69, "Output", "ExpressionUUID" -> \
"60f7308b-2f3e-4236-96b8-3092bacc901e"],
Cell[14516, 372, 295, 8, 69, "Output", "ExpressionUUID" -> \
"b3940952-a15f-4419-919b-d2dfcf81e278"],
Cell[14814, 382, 292, 8, 69, "Output", "ExpressionUUID" -> \
"1b21e993-816d-473f-a488-2593c066c47e"],
Cell[15109, 392, 292, 8, 69, "Output", "ExpressionUUID" -> \
"fb590d23-2870-4009-b92c-6192c1377afa"],
Cell[15404, 402, 225, 5, 69, "Output", "ExpressionUUID" -> \
"9623cb63-234d-4a00-9869-50c50567c0fb"],
Cell[15632, 409, 221, 4, 69, "Output", "ExpressionUUID" -> \
"fd152bf6-fe5e-49ee-8cae-f5a44b83bcb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15890, 418, 2073, 59, 179, "Input", "ExpressionUUID" -> \
"6fbc62bd-b199-49f6-bd9e-3408cc55cef0"],
Cell[17966, 479, 936, 23, 91, "Output", "ExpressionUUID" -> \
"d5d9a303-211a-40ef-9611-2fdabd132c6e"],
Cell[18905, 504, 934, 23, 91, "Output", "ExpressionUUID" -> \
"41e832b4-2a0c-4f16-bb7b-f3f242f2fc4b"],
Cell[19842, 529, 910, 22, 91, "Output", "ExpressionUUID" -> \
"3838393b-0db3-46c9-9ba9-34e58d2795c0"]
}, Open  ]],
Cell[20767, 554, 2598, 83, 264, "Input", "ExpressionUUID" -> \
"89884231-5da7-40d1-b933-8109a950d644"],
Cell[CellGroupData[{
Cell[23390, 641, 290, 7, 49, "Input", "ExpressionUUID" -> \
"2e48ecc5-bcd4-45b3-a623-a0232b1b0374"],
Cell[23683, 650, 1837, 64, 145, "Output", "ExpressionUUID" -> \
"bf607cdc-e5b4-4ba3-946f-c4a7dbda5d2e"]
}, Open  ]],
Cell[25535, 717, 2065, 73, 149, "Input", "ExpressionUUID" -> \
"0e6a71dd-720a-4634-a5c5-ecbdf84d1506"],
Cell[27603, 792, 1841, 63, 300, "Input", "ExpressionUUID" -> \
"d2de4df1-1d37-4e9c-95cd-2f64a26bbe0a"],
Cell[29447, 857, 6007, 148, 890, "Input", "ExpressionUUID" -> \
"0e82e99e-b1d1-4a59-a16b-c7ffddc94570"],
Cell[CellGroupData[{
Cell[35479, 1009, 3168, 67, 348, "Input", "ExpressionUUID" -> \
"8fab94d3-de1c-47b8-b80e-d4700abfdc8a"],
Cell[38650, 1078, 1060, 28, 69, "Output", "ExpressionUUID" -> \
"d806be67-b735-4ad4-90f5-d5cb66fd8a71"],
Cell[39713, 1108, 677, 12, 49, "Output", "ExpressionUUID" -> \
"ec3ed568-6fcd-4dfd-94fc-371151b79c0e"]
}, Open  ]],
Cell[40405, 1123, 220, 5, 50, "Text", "ExpressionUUID" -> \
"812d5e44-d59e-4346-9383-bee3fcfd6fd1"],
Cell[CellGroupData[{
Cell[40650, 1132, 2473, 57, 175, "Input", "ExpressionUUID" -> \
"0f4047af-738a-4581-8389-67edc1d2fb3f"],
Cell[43126, 1191, 2035, 55, 85, "Output", "ExpressionUUID" -> \
"c2ab192f-43ea-4be6-82e0-64cc737f8afc"]
}, Open  ]],
Cell[45176, 1249, 336, 8, 50, "Text", "ExpressionUUID" -> \
"a96b0494-bfde-4c2b-9b48-3ecb30b95dff"],
Cell[CellGroupData[{
Cell[45537, 1261, 2591, 65, 215, "Input", "ExpressionUUID" -> \
"9a28b2a2-1891-409d-877e-52e60ce69707"],
Cell[48131, 1328, 518, 9, 49, "Output", "ExpressionUUID" -> \
"e0ad22ed-4661-4707-8200-b6c5c926aff9"],
Cell[48652, 1339, 2262, 48, 106, "Output", "ExpressionUUID" -> \
"63ae291a-a229-4453-9401-9755e8475abd"]
}, Open  ]],
Cell[50929, 1390, 732, 18, 76, "Text", "ExpressionUUID" -> \
"2fecb08d-21c7-4007-903d-80b83eaf5437"],
Cell[CellGroupData[{
Cell[51686, 1412, 753, 15, 49, "Input", "ExpressionUUID" -> \
"2b9d5036-8cf7-43eb-876e-6970a8bcb494"],
Cell[52442, 1429, 229, 4, 49, "Output", "ExpressionUUID" -> \
"4670eec1-986d-4154-84ca-0d52e683a8f9"]
}, Open  ]],
Cell[52686, 1436, 296, 6, 50, "Text", "ExpressionUUID" -> \
"d2346763-a10a-4fe7-8e24-205cde59d090"],
Cell[CellGroupData[{
Cell[53007, 1446, 5503, 167, 353, "Input", "ExpressionUUID" -> \
"d158fc37-cb8e-4df5-8253-7e15f79fd4ee"],
Cell[58513, 1615, 15787, 471, 497, "Output", "ExpressionUUID" -> \
"e0ba11da-bb8e-456f-8364-a287d7473289"]
}, Open  ]],
Cell[74315, 2089, 876, 18, 87, "Text", "ExpressionUUID" -> \
"630d47ee-cf86-4b3d-95d4-6b531a70e30a"],
Cell[CellGroupData[{
Cell[75216, 2111, 2005, 50, 182, "Input", "ExpressionUUID" -> \
"66824fbf-9f63-4594-9907-eeec04fe53c4"],
Cell[77224, 2163, 3284, 86, 148, "Output", "ExpressionUUID" -> \
"97854792-9e49-4350-a533-e12bebc651d1"]
}, Open  ]],
Cell[80523, 2252, 1422, 40, 83, "Text", "ExpressionUUID" -> \
"010a9d8b-6ffe-4641-9f89-c9c6a318c7ca"],
Cell[81948, 2294, 5771, 125, 831, "Input", "ExpressionUUID" -> \
"df121a8c-0f30-484d-aa6f-9090c50fa5f2"],
Cell[87722, 2421, 330, 7, 49, "Text", "ExpressionUUID" -> \
"9b7a9287-3aba-4129-8072-dbc0b31b25f7"],
Cell[88055, 2430, 708, 17, 51, "Input", "ExpressionUUID" -> \
"fffc131d-8b39-432f-a6e2-11fce584e948"],
Cell[88766, 2449, 345, 7, 49, "Text", "ExpressionUUID" -> \
"08b5d9af-4ed3-4409-9bf0-b83e399ffe64"],
Cell[89114, 2458, 2887, 46, 117, "Input", "ExpressionUUID" -> \
"ea526ec7-9fa1-46e9-819c-60a5ddfa06e3"],
Cell[92004, 2506, 175, 3, 49, "Text", "ExpressionUUID" -> \
"2cbc14a8-1eec-4118-b70d-db90b2ec5fc4"],
Cell[CellGroupData[{
Cell[92204, 2513, 561, 12, 51, "Input", "ExpressionUUID" -> \
"b53324cb-9c99-448d-8826-5c4006cd0fef"],
Cell[92768, 2527, 225, 4, 48, "Output", "ExpressionUUID" -> \
"0302b956-9092-4af2-b5cc-bc26a5fc8416"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93030, 2536, 581, 12, 51, "Input", "ExpressionUUID" -> \
"6cfe0558-4e56-4a4b-ac61-91407c18d06a"],
Cell[93614, 2550, 223, 4, 48, "Output", "ExpressionUUID" -> \
"71c3f668-aeb6-4b21-9dda-9907013d420f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93874, 2559, 587, 13, 51, "Input", "ExpressionUUID" -> \
"aac840a4-55c7-4b20-a587-e52f151b2f41"],
Cell[94464, 2574, 273, 4, 48, "Output", "ExpressionUUID" -> \
"be377cb6-c8d7-44aa-b6c8-34f9454c2eb0"]
}, Open  ]],
Cell[94752, 2581, 712, 12, 82, "Text", "ExpressionUUID" -> \
"2205cce2-af8f-4c29-8563-ce94e23636d7"],
Cell[CellGroupData[{
Cell[95489, 2597, 442, 10, 51, "Input", "ExpressionUUID" -> \
"365c6957-dc72-4cf4-8d44-2da0bc856268"],
Cell[95934, 2609, 227, 4, 48, "Output", "ExpressionUUID" -> \
"5b61f849-84fc-4bb1-8e31-2349fce7c757"]
}, Open  ]],
Cell[96176, 2616, 274, 6, 49, "Text", "ExpressionUUID" -> \
"c4242e91-f91f-440d-a6e4-c16c7ec7b465"],
Cell[96453, 2624, 1678, 42, 318, "Input", "ExpressionUUID" -> \
"5bd2a4f9-65a3-40c1-864f-d51f35445352"],
Cell[98134, 2668, 199, 3, 49, "Text", "ExpressionUUID" -> \
"86c3eedb-ac1e-4d71-984c-b708fee7727c"],
Cell[98336, 2673, 448, 11, 51, "Input", "ExpressionUUID" -> \
"731295f9-4de9-490d-89cd-4a18f9e45075"],
Cell[98787, 2686, 186, 3, 49, "Text", "ExpressionUUID" -> \
"fd263ef4-a38d-4273-a220-fb61215b35b7"],
Cell[CellGroupData[{
Cell[98998, 2693, 377, 8, 51, "Input", "ExpressionUUID" -> \
"172b5aa3-c9ed-4f92-b460-993a10882ffd"],
Cell[99378, 2703, 271, 4, 48, "Output", "ExpressionUUID" -> \
"179fb8e2-bb61-403b-b4e3-914193bc35ed"]
}, Open  ]],
Cell[99664, 2710, 263, 6, 49, "Text", "ExpressionUUID" -> \
"a97f7b90-499b-41e9-8826-a1ae92d2354c"],
Cell[CellGroupData[{
Cell[99952, 2720, 374, 9, 51, "Input", "ExpressionUUID" -> \
"29c505a4-83bf-4a7e-8818-6e7728f890bd"],
Cell[100329, 2731, 240, 4, 48, "Output", "ExpressionUUID" -> \
"e79cc618-ba04-4935-b314-a34bea4c20bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100606, 2740, 195, 4, 48, "Input", "ExpressionUUID" -> \
"5b29d558-e1ec-4592-b4b1-34ce80f7ae68"],
Cell[100804, 2746, 188, 5, 51, "Output", "ExpressionUUID" -> \
"d571430c-c155-42ee-bc5d-f54cae33b499"]
}, Open  ]],
Cell[101007, 2754, 366, 7, 49, "Text", "ExpressionUUID" -> \
"742047f1-ed43-4641-ab18-7bd9c70aebae"],
Cell[CellGroupData[{
Cell[101398, 2765, 262, 6, 67, "Subsection", "ExpressionUUID" -> \
"e047eee7-2ffd-4b43-9b7b-153595f44f2f"],
Cell[CellGroupData[{
Cell[101685, 2775, 958, 25, 151, "Input", "ExpressionUUID" -> \
"bdb19c3b-46e4-4f49-a9a0-194f1293c4da"],
Cell[102646, 2802, 515, 14, 51, "Output", "ExpressionUUID" -> \
"d7481d03-1e21-486c-a8d3-9c21b8f08041"]
}, Open  ]],
Cell[103176, 2819, 176, 3, 49, "Text", "ExpressionUUID" -> \
"43978c5a-1d6b-48e0-a3e0-c051c87df63a"],
Cell[CellGroupData[{
Cell[103377, 2826, 236, 5, 48, "Input", "ExpressionUUID" -> \
"62bc474a-f3c3-4a4c-bd0c-02bc3388ac88"],
Cell[103616, 2833, 344, 10, 51, "Output", "ExpressionUUID" -> \
"ce0126cf-6262-4afd-864e-88db0436979a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103997, 2848, 1442, 40, 294, "Input", "ExpressionUUID" -> \
"8462d0e6-062c-4bac-a8a7-f50caf57550a"],
Cell[105442, 2890, 754, 24, 48, "Output", "ExpressionUUID" -> \
"b6cc48e4-bbb0-48fb-84a5-5f5a15595c5f"],
Cell[106199, 2916, 237, 5, 48, "Output", "ExpressionUUID" -> \
"c4a5e4f3-9059-49e9-a7a5-20158f19bff8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106473, 2926, 1369, 40, 118, "Input", "ExpressionUUID" -> \
"62891c5a-db81-42c1-8add-31a23355d474"],
Cell[107845, 2968, 762, 20, 72, "Output", "ExpressionUUID" -> \
"6fdbb83c-3ca4-41c1-98d8-e19927752679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108644, 2993, 397, 10, 117, "Input", "ExpressionUUID" -> \
"748d1ee5-d672-4889-bf4a-a6eb761e3a07"],
Cell[109044, 3005, 197, 3, 48, "Output", "ExpressionUUID" -> \
"a22c0a44-504c-4258-ae59-edb4a1372a31"],
Cell[109244, 3010, 757, 20, 72, "Output", "ExpressionUUID" -> \
"c4a1b3d3-c409-4a99-b9b5-4c2c6522d1ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110038, 3035, 1258, 38, 117, "Input", "ExpressionUUID" -> \
"5a94e752-de15-49ff-b4b8-35fdda8e92b9"],
Cell[111299, 3075, 1083, 36, 76, "Output", "ExpressionUUID" -> \
"43d8a49c-1ad7-4432-a9d0-c38f0a3ab2cc"]
}, Open  ]],
Cell[112397, 3114, 3576, 80, 561, "Input", "ExpressionUUID" -> \
"53d4a450-c250-4399-b8ce-a226f1d846db"],
Cell[CellGroupData[{
Cell[115998, 3198, 312, 7, 51, "Input", "ExpressionUUID" -> \
"8ce8e24e-1338-4bfd-a80e-9852df620d22"],
Cell[116313, 3207, 174, 3, 48, "Output", "ExpressionUUID" -> \
"d11b17d9-f293-4a58-989e-272e0ca44ad5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116524, 3215, 345, 8, 51, "Input", "ExpressionUUID" -> \
"f9f3cc29-103d-4d6d-ab7c-3bc95ee223b9"],
Cell[116872, 3225, 221, 3, 48, "Output", "ExpressionUUID" -> \
"f61c3407-e467-4e89-a0b8-832670a6fafb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117130, 3233, 262, 6, 51, "Input", "ExpressionUUID" -> \
"6cbc3baa-c3ea-4875-9593-689a83671a27"],
Cell[117395, 3241, 153, 3, 48, "Output", "ExpressionUUID" -> \
"b6def720-913b-445f-a71f-198cd849d86f"]
}, Open  ]],
Cell[117563, 3247, 105, 0, 48, "Input", "ExpressionUUID" -> \
"90a5edb4-1367-40a0-b310-d3fbf7df3838"],
Cell[117671, 3249, 239, 6, 49, "Text", "ExpressionUUID" -> \
"76b908d4-6119-45c6-8849-43cc94364b48"],
Cell[117913, 3257, 4356, 97, 592, "Input", "ExpressionUUID" -> \
"135b5e62-0e84-4fe3-8779-224687d252fc"],
Cell[CellGroupData[{
Cell[122294, 3358, 382, 9, 51, "Input", "ExpressionUUID" -> \
"6e1c9417-2d74-438a-9470-be35d9beb395"],
Cell[122679, 3369, 431, 10, 34, "Message", "ExpressionUUID" -> \
"ec34fa6e-4202-49e0-8269-d0580d40d5a1"],
Cell[123113, 3381, 984, 17, 88, "Message", "ExpressionUUID" -> \
"71baeefc-56ac-4fd9-ab1f-62608de8cee4"],
Cell[124100, 3400, 431, 10, 34, "Message", "ExpressionUUID" -> \
"91a17ad2-69d0-4c8a-b821-e1063685ef56"],
Cell[124534, 3412, 993, 17, 94, "Message", "ExpressionUUID" -> \
"5bb97032-ffd6-45af-899c-0cda07dbec08"],
Cell[125530, 3431, 431, 10, 34, "Message", "ExpressionUUID" -> \
"be62d733-fd20-467c-a924-4ce510e654f9"],
Cell[125964, 3443, 404, 9, 34, "Message", "ExpressionUUID" -> \
"b5f7e49c-e837-4f8c-a75e-920c83d0e9ed"],
Cell[126371, 3454, 993, 17, 94, "Message", "ExpressionUUID" -> \
"abb0c5da-feee-4af3-a9a0-c1bc957a0ae3"],
Cell[127367, 3473, 403, 9, 34, "Message", "ExpressionUUID" -> \
"c594f1b7-30aa-4c32-ba2b-f520dc2e9826"],
Cell[127773, 3484, 159, 3, 48, "Output", "ExpressionUUID" -> \
"ed858bc4-523f-43b8-87d4-58fbd69b6863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127969, 3492, 211, 5, 48, "Input", "ExpressionUUID" -> \
"4c4220e4-855c-4298-9fa8-9d7eb00f112c"],
Cell[128183, 3499, 155, 3, 48, "Output", "ExpressionUUID" -> \
"f4deaac4-2123-4d00-9c00-02a3dc634c14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128375, 3507, 272, 5, 48, "Input", "ExpressionUUID" -> \
"be13d489-6882-4519-8f84-a045e4e31078"],
Cell[128650, 3514, 554, 15, 76, "Output", "ExpressionUUID" -> \
"0fcbddda-6838-4abd-ab69-5b67f991e6bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129241, 3534, 441, 12, 51, "Input", "ExpressionUUID" -> \
"e558a82f-a9a5-4d95-8700-2d7819d49bf3"],
Cell[129685, 3548, 314, 5, 660, "Output", "ExpressionUUID" -> \
"d46ffd88-adc8-431b-b087-6fd7caf831b6"]
}, Open  ]],
Cell[130014, 3556, 237, 4, 49, "Text", "ExpressionUUID" -> \
"068d3ea3-85c6-43ac-92de-3ddfd2569205"],
Cell[CellGroupData[{
Cell[130276, 3564, 4366, 142, 544, "Input", "ExpressionUUID" -> \
"00654596-25c2-4307-97d6-fdee656080f1",
 InitializationCell->True],
Cell[134645, 3708, 397, 11, 76, "Output", "ExpressionUUID" -> \
"b43b5928-e151-4c44-b17a-0b2bb8cc4c9e"],
Cell[135045, 3721, 416, 12, 76, "Output", "ExpressionUUID" -> \
"18a17199-874e-4358-871c-693dd9e5dbcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135498, 3738, 1359, 41, 172, "Input", "ExpressionUUID" -> \
"84e53fdf-1f06-4517-ae5c-18b5a7ec6c22"],
Cell[136860, 3781, 1498, 46, 76, "Output", "ExpressionUUID" -> \
"34290d71-e70d-450b-9ec6-78f49e72617d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138395, 3832, 623, 18, 51, "Input", "ExpressionUUID" -> \
"21d3b345-3937-4b2e-9c7d-26cfb24fb164"],
Cell[139021, 3852, 168573, 2766, 420, "Output", "ExpressionUUID" -> \
"affca73a-f922-4759-8478-834ae051475d"]
}, Open  ]],
Cell[307609, 6621, 170, 3, 49, "Text", "ExpressionUUID" -> \
"93373fee-08d0-4ce1-b228-16f1ab6ad186"],
Cell[CellGroupData[{
Cell[307804, 6628, 4062, 131, 520, "Input", "ExpressionUUID" -> \
"a3b6ac47-be08-4b13-9f73-32b329bf82fe"],
Cell[311869, 6761, 391, 12, 76, "Output", "ExpressionUUID" -> \
"8e1190be-ddbc-4351-a4cb-5bb9097d404a"],
Cell[312263, 6775, 370, 11, 76, "Output", "ExpressionUUID" -> \
"6585608b-f888-40b6-9156-aa2924f040e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312670, 6791, 1200, 34, 84, "Input", "ExpressionUUID" -> \
"42fc626f-072d-430f-b543-a7a9ecb5dd3f"],
Cell[313873, 6827, 1283, 38, 76, "Output", "ExpressionUUID" -> \
"2fdaf8f1-61d7-4eab-ac71-e47d741396e5"],
Cell[315159, 6867, 165817, 2720, 411, "Output", "ExpressionUUID" -> \
"9d2b94c8-d83a-45df-9d01-e0ce0cb2a81f"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

